/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGR

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif


/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.
  
  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The SWIG conversion methods, as ConvertPtr, return and integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/* 
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif


#ifdef __cplusplus
extern "C" {
#endif

/* Remove global namespace pollution */
#if !defined(SWIG_NO_R_NO_REMAP)
# define R_NO_REMAP
#endif
#if !defined(SWIG_NO_STRICT_R_HEADERS)
# define STRICT_R_HEADERS
#endif

#include <Rdefines.h>
#include <Rversion.h>
#include <stdlib.h>
#include <assert.h>

#if R_VERSION >= R_Version(2,6,0)
#define VMAXTYPE void *
#else
#define VMAXTYPE char *
#endif

/*
  This is mainly a way to avoid having lots of local variables that may 
  conflict with those in the routine.

   Change name to R_SWIG_Callb....
*/
typedef struct RCallbackFunctionData {

  SEXP fun;
  SEXP userData;


  SEXP expr;
  SEXP retValue;
  int errorOccurred;

  SEXP el;  /* Temporary pointer used in the construction of the expression to call the R function. */

  struct RCallbackFunctionData *previous;   /* Stack */

} RCallbackFunctionData;

static RCallbackFunctionData  *callbackFunctionDataStack;


SWIGRUNTIME SEXP
R_SWIG_debug_getCallbackFunctionData()
{
  int n, i;
  SEXP ans;
  RCallbackFunctionData  *p = callbackFunctionDataStack;

  n = 0;
  while(p) { 
    n++;
    p = p->previous;
  }

  Rf_protect(ans = Rf_allocVector(VECSXP, n));
  for(p = callbackFunctionDataStack, i = 0; i < n; p = p->previous, i++) 
      SET_VECTOR_ELT(ans, i, p->fun);

  Rf_unprotect(1);

  return(ans);
}



SWIGRUNTIME RCallbackFunctionData *
R_SWIG_pushCallbackFunctionData(SEXP fun, SEXP userData)
{
   RCallbackFunctionData *el;
   el = (RCallbackFunctionData *) calloc(1, sizeof(RCallbackFunctionData));
   el->fun = fun;
   el->userData = userData;
   el->previous = callbackFunctionDataStack;

   callbackFunctionDataStack = el;

   return(el);
}


SWIGRUNTIME SEXP
R_SWIG_R_pushCallbackFunctionData(SEXP fun, SEXP userData)
{
    R_SWIG_pushCallbackFunctionData(fun, userData);
    return R_NilValue;
}

SWIGRUNTIME RCallbackFunctionData *
R_SWIG_getCallbackFunctionData()
{
  if(!callbackFunctionDataStack) {
    Rf_error("Supposedly impossible error occurred in the SWIG callback mechanism."
            "  No callback function data set.");
  }
  
  return callbackFunctionDataStack;
}

SWIGRUNTIME void
R_SWIG_popCallbackFunctionData(int doFree)
{
  RCallbackFunctionData  *el = NULL;
  if(!callbackFunctionDataStack)
    return ; /* Error !!! */

  el = callbackFunctionDataStack ;
  callbackFunctionDataStack = callbackFunctionDataStack->previous;

  if(doFree)
     free(el);
}


/*
  Interface to S function
      is(obj, type)
  which is to be used to determine if an 
  external pointer inherits from the right class.

  Ideally, we would like to be able to do this without an explicit call to the is() function.
  When the S4 class system uses its own SEXP types, then we will hopefully be able to do this
  in the C code.

  Should we make the expression static and preserve it to avoid the overhead of 
  allocating each time.
*/
SWIGRUNTIME int
R_SWIG_checkInherits(SEXP obj, SEXP tag, const char *type)
{
  SEXP e, val;
  int check_err = 0;

  Rf_protect(e = Rf_allocVector(LANGSXP, 3));
  SETCAR(e, Rf_install("extends"));

  SETCAR(CDR(e), Rf_mkString(CHAR(PRINTNAME(tag))));
  SETCAR(CDR(CDR(e)), Rf_mkString(type));

  val = R_tryEval(e, R_GlobalEnv, &check_err);
  Rf_unprotect(1);
  if(check_err) 
    return(0);


  return(LOGICAL(val)[0]);
}


SWIGRUNTIME void *
R_SWIG_resolveExternalRef(SEXP arg, const char * const type, const char * const argName, Rboolean nullOk)
{
  void *ptr;
  SEXP orig = arg;

  if(TYPEOF(arg) != EXTPTRSXP) 
    arg = GET_SLOT(arg, Rf_mkString("ref"));

  
  if(TYPEOF(arg) != EXTPTRSXP) {
    Rf_error("argument %s must be an external pointer (from an ExternalReference)", argName);
  }


  ptr = R_ExternalPtrAddr(arg);

  if(ptr == NULL && nullOk == (Rboolean) FALSE) {
    Rf_error("the external pointer (of type %s) for argument %s has value NULL", argName, type);
  }

  if(type[0] && R_ExternalPtrTag(arg) != Rf_install(type) && strcmp(type, "voidRef")
      && !R_SWIG_checkInherits(orig,  R_ExternalPtrTag(arg), type)) {
    Rf_error("the external pointer for argument %s has tag %s, not the expected value %s",
             argName, CHAR(PRINTNAME(R_ExternalPtrTag(arg))), type);
  }


  return(ptr);
}

SWIGRUNTIME void
R_SWIG_ReferenceFinalizer(SEXP el)
{
  void *ptr = R_SWIG_resolveExternalRef(el, "", "<finalizer>",  (Rboolean) 1);
  fprintf(stderr, "In R_SWIG_ReferenceFinalizer for %p\n", ptr);
  Rf_PrintValue(el);

  if(ptr) {
     if(TYPEOF(el) != EXTPTRSXP)
        el = GET_SLOT(el, Rf_mkString("ref"));

     if(TYPEOF(el) == EXTPTRSXP)
        R_ClearExternalPtr(el);

     free(ptr);
  }

  return;
}

typedef enum {R_SWIG_EXTERNAL, R_SWIG_OWNER } R_SWIG_Owner;

SWIGRUNTIME SEXP
SWIG_MakePtr(void *ptr, const char *typeName, R_SWIG_Owner owner)
{
  SEXP external, r_obj;
  const char *p = typeName;

  if(typeName[0] == '_')
     p = typeName + 1;

  Rf_protect(external = R_MakeExternalPtr(ptr, Rf_install(typeName), R_NilValue));
  Rf_protect(r_obj = NEW_OBJECT(MAKE_CLASS((char *) typeName)));

  if(owner)
    R_RegisterCFinalizer(external, R_SWIG_ReferenceFinalizer);

  r_obj = SET_SLOT(r_obj, Rf_mkString((char *) "ref"), external);
  SET_S4_OBJECT(r_obj);
  Rf_unprotect(2);

  return(r_obj);
}


SWIGRUNTIME SEXP
R_SWIG_create_SWIG_R_Array(const char *typeName, SEXP ref, int len)
{
   SEXP arr;

/*XXX remove the char * cast when we can. MAKE_CLASS should be declared appropriately. */
   Rf_protect(arr = NEW_OBJECT(MAKE_CLASS((char *) typeName)));
   Rf_protect(arr = R_do_slot_assign(arr, Rf_mkString("ref"), ref));
   Rf_protect(arr = R_do_slot_assign(arr, Rf_mkString("dims"), Rf_ScalarInteger(len)));

   Rf_unprotect(3); 			   
   SET_S4_OBJECT(arr);	
   return arr;
}

#define ADD_OUTPUT_ARG(result, pos, value, name)  r_ans = AddOutputArgToReturn(pos, value, name, OutputValues);

SWIGRUNTIME SEXP
AddOutputArgToReturn(int pos, SEXP value, const char *name, SEXP output)
{
  SET_VECTOR_ELT(output, pos, value);

  return(output);
}

/* Create a new pointer object */
SWIGRUNTIMEINLINE SEXP
SWIG_R_NewPointerObj(void *ptr, swig_type_info *type, int flags) {
  SEXP rptr = R_MakeExternalPtr(ptr, 
  R_MakeExternalPtr(type, R_NilValue, R_NilValue), R_NilValue); 
  SET_S4_OBJECT(rptr);
//  rptr = Rf_setAttrib(rptr, R_ClassSymbol, mkChar(SWIG_TypeName(type)));
  return rptr;
}

/* Convert a pointer value */
SWIGRUNTIMEINLINE int
SWIG_R_ConvertPtr(SEXP obj, void **ptr, swig_type_info *ty, int flags) {
  void *vptr;
  if (!obj) return SWIG_ERROR;
  if (obj == R_NilValue) {
    if (ptr) *ptr = NULL;
    return SWIG_OK;
  }

  vptr = R_ExternalPtrAddr(obj);
  if (ty) {
    swig_type_info *to = (swig_type_info*) 
      R_ExternalPtrAddr(R_ExternalPtrTag(obj));
    if (to == ty) {
      if (ptr) *ptr = vptr;
    } else {
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      int newmemory = 0;
      if (ptr) *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
      assert(!newmemory); /* newmemory handling not yet implemented */
    }
  } else {
      if (ptr) *ptr = vptr;
 }
  return SWIG_OK;
}

SWIGRUNTIME swig_module_info *
SWIG_GetModule(void *v) {
  static void *type_pointer = (void *)0;
  return (swig_module_info *) type_pointer;
}

SWIGRUNTIME void
SWIG_SetModule(void *v, swig_module_info *swig_module) {
}

typedef struct {
  void *pack;
  swig_type_info *ty;
  size_t size;
} RSwigPacked;

/* Create a new packed object */

SWIGRUNTIMEINLINE SEXP RSwigPacked_New(void *ptr, size_t sz,
		  swig_type_info *ty) {
  SEXP rptr;
  RSwigPacked *sobj = 
  (RSwigPacked*) malloc(sizeof(RSwigPacked));
  if (sobj) {
    void *pack = malloc(sz);
    if (pack) {
      memcpy(pack, ptr, sz);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = sz;
    } else {
      sobj = 0;
    }
  }
  rptr = R_MakeExternalPtr(sobj, R_NilValue, R_NilValue); 
  return rptr;
}

SWIGRUNTIME swig_type_info *
RSwigPacked_UnpackData(SEXP obj, void *ptr, size_t size)
{
    RSwigPacked *sobj = 
        (RSwigPacked *)R_ExternalPtrAddr(obj);
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
}

SWIGRUNTIMEINLINE SEXP
SWIG_R_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? RSwigPacked_New((void *) ptr, sz, type) : R_NilValue;
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_R_ConvertPacked(SEXP obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = RSwigPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { Rf_warning(msg); return Rf_ScalarLogical(NA_LOGICAL); return Rf_ScalarLogical(NA_LOGICAL); } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { Rf_warning(msg); return Rf_ScalarLogical(NA_LOGICAL); return Rf_ScalarLogical(NA_LOGICAL); } else 



/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_char swig_types[0]
#define SWIGTYPE_p_double swig_types[1]
#define SWIGTYPE_p_f___int swig_types[2]
#define SWIGTYPE_p_f___p_char swig_types[3]
#define SWIGTYPE_p_f___tc_items swig_types[4]
#define SWIGTYPE_p_f___tc_matrix swig_types[5]
#define SWIGTYPE_p_f___tc_strings swig_types[6]
#define SWIGTYPE_p_f___void swig_types[7]
#define SWIGTYPE_p_f_double__void swig_types[8]
#define SWIGTYPE_p_f_double_double__void swig_types[9]
#define SWIGTYPE_p_f_double_double_int__tc_matrix swig_types[10]
#define SWIGTYPE_p_f_int__tc_matrix swig_types[11]
#define SWIGTYPE_p_f_int__void swig_types[12]
#define SWIGTYPE_p_f_int_int__void swig_types[13]
#define SWIGTYPE_p_f_long__double swig_types[14]
#define SWIGTYPE_p_f_long__long swig_types[15]
#define SWIGTYPE_p_f_long__p_char swig_types[16]
#define SWIGTYPE_p_f_long__tc_items swig_types[17]
#define SWIGTYPE_p_f_long__tc_strings swig_types[18]
#define SWIGTYPE_p_f_long__void swig_types[19]
#define SWIGTYPE_p_f_long_double__void swig_types[20]
#define SWIGTYPE_p_f_long_double_double__void swig_types[21]
#define SWIGTYPE_p_f_long_double_double_int__void swig_types[22]
#define SWIGTYPE_p_f_long_double_int__void swig_types[23]
#define SWIGTYPE_p_f_long_int__void swig_types[24]
#define SWIGTYPE_p_f_long_long_int__double swig_types[25]
#define SWIGTYPE_p_f_long_long_int_double_double__void swig_types[26]
#define SWIGTYPE_p_f_long_p_f_void__void__void swig_types[27]
#define SWIGTYPE_p_f_long_p_q_const__char__double swig_types[28]
#define SWIGTYPE_p_f_long_p_q_const__char__int swig_types[29]
#define SWIGTYPE_p_f_long_p_q_const__char__p_char swig_types[30]
#define SWIGTYPE_p_f_long_p_q_const__char__tc_items swig_types[31]
#define SWIGTYPE_p_f_long_p_q_const__char__tc_matrix swig_types[32]
#define SWIGTYPE_p_f_long_p_q_const__char__tc_table swig_types[33]
#define SWIGTYPE_p_f_long_p_q_const__char__void swig_types[34]
#define SWIGTYPE_p_f_long_p_q_const__char_double__void swig_types[35]
#define SWIGTYPE_p_f_long_p_q_const__char_int__void swig_types[36]
#define SWIGTYPE_p_f_long_p_q_const__char_p_q_const__char__void swig_types[37]
#define SWIGTYPE_p_f_long_p_q_const__char_tc_matrix__void swig_types[38]
#define SWIGTYPE_p_f_long_p_q_const__char_tc_table__void swig_types[39]
#define SWIGTYPE_p_f_long_tc_items__void swig_types[40]
#define SWIGTYPE_p_f_long_tc_matrix_p_f_tc_matrix__void__void swig_types[41]
#define SWIGTYPE_p_f_long_tc_matrix_p_q_const__char_p_f_tc_matrix__void__void swig_types[42]
#define SWIGTYPE_p_f_p_f___void_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_int_int_int__void swig_types[43]
#define SWIGTYPE_p_f_p_q_const__char__double swig_types[44]
#define SWIGTYPE_p_f_p_q_const__char__int swig_types[45]
#define SWIGTYPE_p_f_p_q_const__char__long swig_types[46]
#define SWIGTYPE_p_f_p_q_const__char__p_char swig_types[47]
#define SWIGTYPE_p_f_p_q_const__char__tc_items swig_types[48]
#define SWIGTYPE_p_f_p_q_const__char__tc_matrix swig_types[49]
#define SWIGTYPE_p_f_p_q_const__char__tc_table swig_types[50]
#define SWIGTYPE_p_f_p_q_const__char__void swig_types[51]
#define SWIGTYPE_p_f_p_q_const__char_double__void swig_types[52]
#define SWIGTYPE_p_f_p_q_const__char_double_double__void swig_types[53]
#define SWIGTYPE_p_f_p_q_const__char_double_double_int__tc_matrix swig_types[54]
#define SWIGTYPE_p_f_p_q_const__char_double_double_int_p_q_const__char_double_double_int__tc_matrix swig_types[55]
#define SWIGTYPE_p_f_p_q_const__char_int_int__void swig_types[56]
#define SWIGTYPE_p_f_p_q_const__char_int_int_tc_strings__void swig_types[57]
#define SWIGTYPE_p_f_p_q_const__char_p_q_const__char__int swig_types[58]
#define SWIGTYPE_p_f_p_q_const__char_p_q_const__char__long swig_types[59]
#define SWIGTYPE_p_f_p_q_const__char_p_q_const__char__void swig_types[60]
#define SWIGTYPE_p_f_p_q_const__char_p_q_const__char_p_q_const__char__int swig_types[61]
#define SWIGTYPE_p_f_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char__void swig_types[62]
#define SWIGTYPE_p_f_p_q_const__char_p_q_const__char_p_q_const__char_tc_matrix__int swig_types[63]
#define SWIGTYPE_p_f_p_q_const__char_tc_items__int swig_types[64]
#define SWIGTYPE_p_f_p_q_const__char_tc_items__tc_items swig_types[65]
#define SWIGTYPE_p_f_p_q_const__char_tc_strings_p_q_const__char__int swig_types[66]
#define SWIGTYPE_p_f_tc_items__tc_matrix swig_types[67]
#define SWIGTYPE_p_f_tc_items__tc_strings swig_types[68]
#define SWIGTYPE_p_f_tc_items__void swig_types[69]
#define SWIGTYPE_p_f_tc_items_p_q_const__char_p_q_const__char__long swig_types[70]
#define SWIGTYPE_p_f_tc_items_tc_matrix__void swig_types[71]
#define SWIGTYPE_p_f_tc_items_tc_strings__tc_matrix swig_types[72]
#define SWIGTYPE_p_f_tc_items_tc_strings__tc_strings swig_types[73]
#define SWIGTYPE_p_f_tc_items_tc_strings__void swig_types[74]
#define SWIGTYPE_p_f_tc_matrix__void swig_types[75]
#define SWIGTYPE_p_f_tc_matrix_p_q_const__char__void swig_types[76]
#define SWIGTYPE_p_f_tc_matrix_p_q_const__char_p_q_const__char__void swig_types[77]
#define SWIGTYPE_p_f_tc_strings__tc_items swig_types[78]
#define SWIGTYPE_p_f_tc_strings__tc_matrix swig_types[79]
#define SWIGTYPE_p_f_tc_table__void swig_types[80]
#define SWIGTYPE_p_f_void__void swig_types[81]
#define SWIGTYPE_p_long swig_types[82]
#define SWIGTYPE_p_p_char swig_types[83]
#define SWIGTYPE_p_tc_items swig_types[84]
#define SWIGTYPE_p_tc_matrix swig_types[85]
#define SWIGTYPE_p_tc_strings swig_types[86]
#define SWIGTYPE_p_tc_table swig_types[87]
static swig_type_info *swig_types[89];
static swig_module_info swig_module = {swig_types, 88, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */


/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif


/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13




#define SWIGVERSION 0x010340 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) (void *)((const void *)(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),(void**)(a)) 


#include "TC_structs.h"
#include "AutoLayout.h"
#include "TC_Main_api.h"
#include "TC_ParametersTool_api.h"
#include "TC_ConnectionInsertion_api.h"
#include "TC_GroupHandlerTool_api.h"
#include "TC_StoichiometryTool_api.h"
#include "TC_DynamicLibraryTool_api.h"
#include "TC_PlotTool_api.h"
#include "TC_ModelFileGenerator_api.h"
#include "TC_EventsAssignments_api.h"
#include "TC_AutoGeneRegulatoryTool_api.h"
#include "TC_SBML_api.h"
#include "TC_COPASI_api.h"
#include "TC_ModuleTool_api.h"


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERNINLINE  int
SWIG_AsVal_long (SEXP obj, long *val)
{
   if (val) *val = Rf_asInteger(obj);
   return SWIG_OK;
}


SWIGINTERN int
SWIG_AsVal_int (SEXP obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = (int)(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE SEXP
SWIG_From_double  (double value)
{
	return Rf_ScalarReal(value);
}


SWIGINTERNINLINE  int
SWIG_AsVal_double (SEXP obj, double *val)
{
   if (val) *val = Rf_asReal(obj);
   return SWIG_OK;
}


SWIGINTERN SEXP
SWIG_FromCharPtrAndSize(const char* carray, size_t size) 
{
  SEXP t, c;
  if (!carray) return R_NilValue;
  Rf_protect(t = Rf_allocVector(STRSXP, 1));
  c = Rf_allocVector(CHARSXP, size);
  strncpy((char *)CHAR(c), carray, size);
  SET_STRING_ELT(t, 0, c);
  Rf_unprotect(1);
  return t;
}


SWIGINTERNINLINE SEXP 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(SEXP obj, char** cptr, size_t* psize, int *alloc)
{
  if (cptr && Rf_isString(obj)) {
    const char *cstr = CHAR(STRING_ELT(obj, 0));
    int len = strlen(cstr);

    if (alloc) {
      if (*alloc == SWIG_NEWOBJ) {
        *cptr = (char *)memcpy((char *)malloc((len + 1)*sizeof(char)), cstr, sizeof(char)*(len + 1));
        *alloc = SWIG_NEWOBJ;
      } else {
        *cptr = (char *)(malloc(len + 1));
        *cptr = strcpy(*cptr, cstr);
        *alloc = SWIG_OLDOBJ;
      }
    } else {
      *cptr = (char *)(malloc(len + 1));
      *cptr = strcpy(*cptr, cstr);
    }
    if (psize) *psize = len + 1;
    return SWIG_OK;
  }
  return SWIG_TypeError;
}





#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT SEXP
R_swig_tc_strings_length_set ( SEXP self, SEXP s_length)
{
  tc_strings *arg1 = (tc_strings *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_strings, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_strings_length_set" "', argument " "1"" of type '" "tc_strings *""'"); 
  }
  arg1 = (tc_strings *)(argp1);
  arg2 = (int)(INTEGER(s_length)[0]);
  if (arg1) (arg1)->length = arg2;
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_strings_length_get ( SEXP self, SEXP s_swig_copy)
{
  int result;
  tc_strings *arg1 = (tc_strings *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_strings, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_strings_length_get" "', argument " "1"" of type '" "tc_strings *""'"); 
  }
  arg1 = (tc_strings *)(argp1);
  result = (int) ((arg1)->length);
  r_ans = Rf_ScalarInteger(result);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_strings_strings_set ( SEXP self, SEXP s_strings)
{
  tc_strings *arg1 = (tc_strings *) 0 ;
  char **arg2 = (char **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_strings, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_strings_strings_set" "', argument " "1"" of type '" "tc_strings *""'"); 
  }
  arg1 = (tc_strings *)(argp1);
  res2 = SWIG_R_ConvertPtr(s_strings, &argp2, SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_strings_strings_set" "', argument " "2"" of type '" "char **""'"); 
  }
  arg2 = (char **)(argp2);
  if (arg1) (arg1)->strings = arg2;
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_strings_strings_get ( SEXP self)
{
  char **result = 0 ;
  tc_strings *arg1 = (tc_strings *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_strings, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_strings_strings_get" "', argument " "1"" of type '" "tc_strings *""'"); 
  }
  arg1 = (tc_strings *)(argp1);
  result = (char **) ((arg1)->strings);
  r_ans = SWIG_R_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_char, R_SWIG_EXTERNAL |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_new_tc_strings ( )
{
  tc_strings *result = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = (tc_strings *)calloc(1, sizeof(tc_strings));
  r_ans = SWIG_R_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tc_strings, R_SWIG_OWNER |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_delete_tc_strings ( SEXP self)
{
  tc_strings *arg1 = (tc_strings *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_strings, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tc_strings" "', argument " "1"" of type '" "tc_strings *""'"); 
  }
  arg1 = (tc_strings *)(argp1);
  free((char *) arg1);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  R_ClearExternalPtr(self);
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_items_length_set ( SEXP self, SEXP s_length)
{
  tc_items *arg1 = (tc_items *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_items, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_items_length_set" "', argument " "1"" of type '" "tc_items *""'"); 
  }
  arg1 = (tc_items *)(argp1);
  arg2 = (int)(INTEGER(s_length)[0]);
  if (arg1) (arg1)->length = arg2;
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_items_length_get ( SEXP self, SEXP s_swig_copy)
{
  int result;
  tc_items *arg1 = (tc_items *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_items, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_items_length_get" "', argument " "1"" of type '" "tc_items *""'"); 
  }
  arg1 = (tc_items *)(argp1);
  result = (int) ((arg1)->length);
  r_ans = Rf_ScalarInteger(result);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_items_items_set ( SEXP self, SEXP s_items)
{
  tc_items *arg1 = (tc_items *) 0 ;
  long *arg2 = (long *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_items, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_items_items_set" "', argument " "1"" of type '" "tc_items *""'"); 
  }
  arg1 = (tc_items *)(argp1);
  {
    {
      int _rswigi;
      int _rswiglen = LENGTH(s_items);
      arg2 = (long *)(calloc(sizeof(long), _rswiglen));
      for (_rswigi=0; _rswigi< _rswiglen; _rswigi++) {
        arg2[_rswigi] = INTEGER(s_items)[_rswigi];
      }
    }
  }
  if (arg1) (arg1)->items = arg2;
  r_ans = R_NilValue;
  
  
  free(arg2);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_items_items_get ( SEXP self)
{
  long *result = 0 ;
  tc_items *arg1 = (tc_items *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_items, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_items_items_get" "', argument " "1"" of type '" "tc_items *""'"); 
  }
  arg1 = (tc_items *)(argp1);
  result = (long *) ((arg1)->items);
  r_ans = SWIG_R_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_long, R_SWIG_EXTERNAL |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_new_tc_items ( )
{
  tc_items *result = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = (tc_items *)calloc(1, sizeof(tc_items));
  r_ans = SWIG_R_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tc_items, R_SWIG_OWNER |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_delete_tc_items ( SEXP self)
{
  tc_items *arg1 = (tc_items *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_items, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tc_items" "', argument " "1"" of type '" "tc_items *""'"); 
  }
  arg1 = (tc_items *)(argp1);
  free((char *) arg1);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  R_ClearExternalPtr(self);
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_matrix_rows_set ( SEXP self, SEXP s_rows)
{
  tc_matrix *arg1 = (tc_matrix *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_matrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_matrix_rows_set" "', argument " "1"" of type '" "tc_matrix *""'"); 
  }
  arg1 = (tc_matrix *)(argp1);
  arg2 = (int)(INTEGER(s_rows)[0]);
  if (arg1) (arg1)->rows = arg2;
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_matrix_rows_get ( SEXP self, SEXP s_swig_copy)
{
  int result;
  tc_matrix *arg1 = (tc_matrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_matrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_matrix_rows_get" "', argument " "1"" of type '" "tc_matrix *""'"); 
  }
  arg1 = (tc_matrix *)(argp1);
  result = (int) ((arg1)->rows);
  r_ans = Rf_ScalarInteger(result);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_matrix_cols_set ( SEXP self, SEXP s_cols)
{
  tc_matrix *arg1 = (tc_matrix *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_matrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_matrix_cols_set" "', argument " "1"" of type '" "tc_matrix *""'"); 
  }
  arg1 = (tc_matrix *)(argp1);
  arg2 = (int)(INTEGER(s_cols)[0]);
  if (arg1) (arg1)->cols = arg2;
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_matrix_cols_get ( SEXP self, SEXP s_swig_copy)
{
  int result;
  tc_matrix *arg1 = (tc_matrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_matrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_matrix_cols_get" "', argument " "1"" of type '" "tc_matrix *""'"); 
  }
  arg1 = (tc_matrix *)(argp1);
  result = (int) ((arg1)->cols);
  r_ans = Rf_ScalarInteger(result);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_matrix_values_set ( SEXP self, SEXP s_values)
{
  tc_matrix *arg1 = (tc_matrix *) 0 ;
  double *arg2 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_matrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_matrix_values_set" "', argument " "1"" of type '" "tc_matrix *""'"); 
  }
  arg1 = (tc_matrix *)(argp1);
  {
    {
      int _rswigi;
      int _rswiglen = LENGTH(s_values);
      arg2 = (double *)(calloc(sizeof(double), _rswiglen));
      for (_rswigi=0; _rswigi<_rswiglen; _rswigi++) {
        arg2[_rswigi] = REAL(s_values)[_rswigi];
      }
    }
  }
  if (arg1) (arg1)->values = arg2;
  r_ans = R_NilValue;
  
  
  free(arg2);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_matrix_values_get ( SEXP self)
{
  double *result = 0 ;
  tc_matrix *arg1 = (tc_matrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_matrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_matrix_values_get" "', argument " "1"" of type '" "tc_matrix *""'"); 
  }
  arg1 = (tc_matrix *)(argp1);
  result = (double *) ((arg1)->values);
  r_ans = SWIG_R_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, R_SWIG_EXTERNAL |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_matrix_rownames_set ( SEXP self, SEXP s_rownames)
{
  tc_matrix *arg1 = (tc_matrix *) 0 ;
  tc_strings *arg2 = (tc_strings *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_matrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_matrix_rownames_set" "', argument " "1"" of type '" "tc_matrix *""'"); 
  }
  arg1 = (tc_matrix *)(argp1);
  res2 = SWIG_R_ConvertPtr(s_rownames, &argp2, SWIGTYPE_p_tc_strings, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_matrix_rownames_set" "', argument " "2"" of type '" "tc_strings *""'"); 
  }
  arg2 = (tc_strings *)(argp2);
  if (arg1) (arg1)->rownames = *arg2;
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_matrix_rownames_get ( SEXP self)
{
  tc_strings *result = 0 ;
  tc_matrix *arg1 = (tc_matrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_matrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_matrix_rownames_get" "', argument " "1"" of type '" "tc_matrix *""'"); 
  }
  arg1 = (tc_matrix *)(argp1);
  result = (tc_strings *)& ((arg1)->rownames);
  r_ans = SWIG_R_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tc_strings, R_SWIG_EXTERNAL |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_matrix_colnames_set ( SEXP self, SEXP s_colnames)
{
  tc_matrix *arg1 = (tc_matrix *) 0 ;
  tc_strings *arg2 = (tc_strings *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_matrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_matrix_colnames_set" "', argument " "1"" of type '" "tc_matrix *""'"); 
  }
  arg1 = (tc_matrix *)(argp1);
  res2 = SWIG_R_ConvertPtr(s_colnames, &argp2, SWIGTYPE_p_tc_strings, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_matrix_colnames_set" "', argument " "2"" of type '" "tc_strings *""'"); 
  }
  arg2 = (tc_strings *)(argp2);
  if (arg1) (arg1)->colnames = *arg2;
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_matrix_colnames_get ( SEXP self)
{
  tc_strings *result = 0 ;
  tc_matrix *arg1 = (tc_matrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_matrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_matrix_colnames_get" "', argument " "1"" of type '" "tc_matrix *""'"); 
  }
  arg1 = (tc_matrix *)(argp1);
  result = (tc_strings *)& ((arg1)->colnames);
  r_ans = SWIG_R_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tc_strings, R_SWIG_EXTERNAL |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_new_tc_matrix ( )
{
  tc_matrix *result = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = (tc_matrix *)calloc(1, sizeof(tc_matrix));
  r_ans = SWIG_R_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tc_matrix, R_SWIG_OWNER |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_delete_tc_matrix ( SEXP self)
{
  tc_matrix *arg1 = (tc_matrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_matrix, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tc_matrix" "', argument " "1"" of type '" "tc_matrix *""'"); 
  }
  arg1 = (tc_matrix *)(argp1);
  free((char *) arg1);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  R_ClearExternalPtr(self);
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_table_rows_set ( SEXP self, SEXP s_rows)
{
  tc_table *arg1 = (tc_table *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_table, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_table_rows_set" "', argument " "1"" of type '" "tc_table *""'"); 
  }
  arg1 = (tc_table *)(argp1);
  arg2 = (int)(INTEGER(s_rows)[0]);
  if (arg1) (arg1)->rows = arg2;
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_table_rows_get ( SEXP self, SEXP s_swig_copy)
{
  int result;
  tc_table *arg1 = (tc_table *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_table, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_table_rows_get" "', argument " "1"" of type '" "tc_table *""'"); 
  }
  arg1 = (tc_table *)(argp1);
  result = (int) ((arg1)->rows);
  r_ans = Rf_ScalarInteger(result);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_table_cols_set ( SEXP self, SEXP s_cols)
{
  tc_table *arg1 = (tc_table *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_table, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_table_cols_set" "', argument " "1"" of type '" "tc_table *""'"); 
  }
  arg1 = (tc_table *)(argp1);
  arg2 = (int)(INTEGER(s_cols)[0]);
  if (arg1) (arg1)->cols = arg2;
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_table_cols_get ( SEXP self, SEXP s_swig_copy)
{
  int result;
  tc_table *arg1 = (tc_table *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_table, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_table_cols_get" "', argument " "1"" of type '" "tc_table *""'"); 
  }
  arg1 = (tc_table *)(argp1);
  result = (int) ((arg1)->cols);
  r_ans = Rf_ScalarInteger(result);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_table_strings_set ( SEXP self, SEXP s_strings)
{
  tc_table *arg1 = (tc_table *) 0 ;
  char **arg2 = (char **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_table, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_table_strings_set" "', argument " "1"" of type '" "tc_table *""'"); 
  }
  arg1 = (tc_table *)(argp1);
  res2 = SWIG_R_ConvertPtr(s_strings, &argp2, SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_table_strings_set" "', argument " "2"" of type '" "char **""'"); 
  }
  arg2 = (char **)(argp2);
  if (arg1) (arg1)->strings = arg2;
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_table_strings_get ( SEXP self)
{
  char **result = 0 ;
  tc_table *arg1 = (tc_table *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_table, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_table_strings_get" "', argument " "1"" of type '" "tc_table *""'"); 
  }
  arg1 = (tc_table *)(argp1);
  result = (char **) ((arg1)->strings);
  r_ans = SWIG_R_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_char, R_SWIG_EXTERNAL |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_table_rownames_set ( SEXP self, SEXP s_rownames)
{
  tc_table *arg1 = (tc_table *) 0 ;
  tc_strings *arg2 = (tc_strings *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_table, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_table_rownames_set" "', argument " "1"" of type '" "tc_table *""'"); 
  }
  arg1 = (tc_table *)(argp1);
  res2 = SWIG_R_ConvertPtr(s_rownames, &argp2, SWIGTYPE_p_tc_strings, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_table_rownames_set" "', argument " "2"" of type '" "tc_strings *""'"); 
  }
  arg2 = (tc_strings *)(argp2);
  if (arg1) (arg1)->rownames = *arg2;
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_table_rownames_get ( SEXP self)
{
  tc_strings *result = 0 ;
  tc_table *arg1 = (tc_table *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_table, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_table_rownames_get" "', argument " "1"" of type '" "tc_table *""'"); 
  }
  arg1 = (tc_table *)(argp1);
  result = (tc_strings *)& ((arg1)->rownames);
  r_ans = SWIG_R_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tc_strings, R_SWIG_EXTERNAL |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_table_colnames_set ( SEXP self, SEXP s_colnames)
{
  tc_table *arg1 = (tc_table *) 0 ;
  tc_strings *arg2 = (tc_strings *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_table, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_table_colnames_set" "', argument " "1"" of type '" "tc_table *""'"); 
  }
  arg1 = (tc_table *)(argp1);
  res2 = SWIG_R_ConvertPtr(s_colnames, &argp2, SWIGTYPE_p_tc_strings, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_table_colnames_set" "', argument " "2"" of type '" "tc_strings *""'"); 
  }
  arg2 = (tc_strings *)(argp2);
  if (arg1) (arg1)->colnames = *arg2;
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_table_colnames_get ( SEXP self)
{
  tc_strings *result = 0 ;
  tc_table *arg1 = (tc_table *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_table, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_table_colnames_get" "', argument " "1"" of type '" "tc_table *""'"); 
  }
  arg1 = (tc_table *)(argp1);
  result = (tc_strings *)& ((arg1)->colnames);
  r_ans = SWIG_R_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tc_strings, R_SWIG_EXTERNAL |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_new_tc_table ( )
{
  tc_table *result = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = (tc_table *)calloc(1, sizeof(tc_table));
  r_ans = SWIG_R_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tc_table, R_SWIG_OWNER |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_delete_tc_table ( SEXP self)
{
  tc_table *arg1 = (tc_table *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_R_ConvertPtr(self, &argp1, SWIGTYPE_p_tc_table, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tc_table" "', argument " "1"" of type '" "tc_table *""'"); 
  }
  arg1 = (tc_table *)(argp1);
  free((char *) arg1);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  R_ClearExternalPtr(self);
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_createMatrix ( SEXP rows, SEXP cols, SEXP s_swig_copy)
{
  tc_matrix result;
  int arg1 ;
  int arg2 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (int)(INTEGER(rows)[0]);
  arg2 = (int)(INTEGER(cols)[0]);
  result = tc_createMatrix(arg1,arg2);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_createTable ( SEXP rows, SEXP cols, SEXP s_swig_copy)
{
  tc_table result;
  int arg1 ;
  int arg2 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (int)(INTEGER(rows)[0]);
  arg2 = (int)(INTEGER(cols)[0]);
  result = tc_createTable(arg1,arg2);
  r_ans = SWIG_R_NewPointerObj((tc_table *)memcpy((tc_table *)malloc(sizeof(tc_table)),&result,sizeof(tc_table)), SWIGTYPE_p_tc_table, SWIG_POINTER_OWN |  0 );
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_createStringsArray ( SEXP len, SEXP s_swig_copy)
{
  tc_strings result;
  int arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (int)(INTEGER(len)[0]);
  result = tc_createStringsArray(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_strings *)memcpy((tc_strings *)malloc(sizeof(tc_strings)),&result,sizeof(tc_strings)), SWIGTYPE_p_tc_strings, SWIG_POINTER_OWN |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_createItemsArray ( SEXP len, SEXP s_swig_copy)
{
  tc_items result;
  int arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (int)(INTEGER(len)[0]);
  result = tc_createItemsArray(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&result,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getMatrixValue ( SEXP M, SEXP i, SEXP j, SEXP s_swig_copy)
{
  double result;
  tc_matrix arg1 ;
  int arg2 ;
  int arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(M, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getMatrixValue" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getMatrixValue" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  arg2 = (int)(INTEGER(i)[0]);
  arg3 = (int)(INTEGER(j)[0]);
  result = (double)tc_getMatrixValue(arg1,arg2,arg3);
  r_ans = SWIG_From_double((double)(result));
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setMatrixValue ( SEXP M, SEXP i, SEXP j, SEXP d)
{
  tc_matrix arg1 ;
  int arg2 ;
  int arg3 ;
  double arg4 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(M, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_setMatrixValue" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setMatrixValue" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  arg2 = (int)(INTEGER(i)[0]);
  arg3 = (int)(INTEGER(j)[0]);
  arg4 = (double)(REAL(d)[0]);
  tc_setMatrixValue(arg1,arg2,arg3,arg4);
  r_ans = R_NilValue;
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getRowName ( SEXP M, SEXP i)
{
  char *result = 0 ;
  tc_matrix arg1 ;
  int arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(M, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getRowName" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getRowName" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  arg2 = (int)(INTEGER(i)[0]);
  result = (char *)tc_getRowName(arg1,arg2);
  r_ans = SWIG_FromCharPtr((const char *)result);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setRowName ( SEXP M, SEXP i, SEXP s)
{
  tc_matrix arg1 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(M, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_setRowName" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setRowName" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  arg2 = (int)(INTEGER(i)[0]);
  res3 = SWIG_AsCharPtrAndSize(s, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tc_setRowName" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = (char *)(buf3);
  tc_setRowName(arg1,arg2,(char const *)arg3);
  r_ans = R_NilValue;
  
  if (alloc3 == SWIG_NEWOBJ) free((char*)buf3);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getColumnName ( SEXP M, SEXP j)
{
  char *result = 0 ;
  tc_matrix arg1 ;
  int arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(M, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getColumnName" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getColumnName" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  arg2 = (int)(INTEGER(j)[0]);
  result = (char *)tc_getColumnName(arg1,arg2);
  r_ans = SWIG_FromCharPtr((const char *)result);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setColumnName ( SEXP M, SEXP j, SEXP s)
{
  tc_matrix arg1 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(M, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_setColumnName" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setColumnName" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  arg2 = (int)(INTEGER(j)[0]);
  res3 = SWIG_AsCharPtrAndSize(s, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tc_setColumnName" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = (char *)(buf3);
  tc_setColumnName(arg1,arg2,(char const *)arg3);
  r_ans = R_NilValue;
  
  if (alloc3 == SWIG_NEWOBJ) free((char*)buf3);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getTableValue ( SEXP S, SEXP i, SEXP j)
{
  char *result = 0 ;
  tc_table arg1 ;
  int arg2 ;
  int arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(S, &argp1, SWIGTYPE_p_tc_table,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getTableValue" "', argument " "1"" of type '" "tc_table""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getTableValue" "', argument " "1"" of type '" "tc_table""'");
    } else {
      arg1 = *((tc_table *)(argp1));
    }
  }
  arg2 = (int)(INTEGER(i)[0]);
  arg3 = (int)(INTEGER(j)[0]);
  result = (char *)tc_getTableValue(arg1,arg2,arg3);
  r_ans = SWIG_FromCharPtr((const char *)result);
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setTableValue ( SEXP S, SEXP i, SEXP j, SEXP s)
{
  tc_table arg1 ;
  int arg2 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(S, &argp1, SWIGTYPE_p_tc_table,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_setTableValue" "', argument " "1"" of type '" "tc_table""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setTableValue" "', argument " "1"" of type '" "tc_table""'");
    } else {
      arg1 = *((tc_table *)(argp1));
    }
  }
  arg2 = (int)(INTEGER(i)[0]);
  arg3 = (int)(INTEGER(j)[0]);
  res4 = SWIG_AsCharPtrAndSize(s, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "tc_setTableValue" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = (char *)(buf4);
  tc_setTableValue(arg1,arg2,arg3,(char const *)arg4);
  r_ans = R_NilValue;
  
  
  if (alloc4 == SWIG_NEWOBJ) free((char*)buf4);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getString ( SEXP S, SEXP i)
{
  char *result = 0 ;
  tc_strings arg1 ;
  int arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(S, &argp1, SWIGTYPE_p_tc_strings,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getString" "', argument " "1"" of type '" "tc_strings""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getString" "', argument " "1"" of type '" "tc_strings""'");
    } else {
      arg1 = *((tc_strings *)(argp1));
    }
  }
  arg2 = (int)(INTEGER(i)[0]);
  result = (char *)tc_getString(arg1,arg2);
  r_ans = SWIG_FromCharPtr((const char *)result);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setString ( SEXP S, SEXP i, SEXP c)
{
  tc_strings arg1 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(S, &argp1, SWIGTYPE_p_tc_strings,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_setString" "', argument " "1"" of type '" "tc_strings""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setString" "', argument " "1"" of type '" "tc_strings""'");
    } else {
      arg1 = *((tc_strings *)(argp1));
    }
  }
  arg2 = (int)(INTEGER(i)[0]);
  res3 = SWIG_AsCharPtrAndSize(c, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tc_setString" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = (char *)(buf3);
  tc_setString(arg1,arg2,(char const *)arg3);
  r_ans = R_NilValue;
  
  if (alloc3 == SWIG_NEWOBJ) free((char*)buf3);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getItem ( SEXP A, SEXP i, SEXP s_swig_copy)
{
  long result;
  tc_items arg1 ;
  int arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(A, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getItem" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getItem" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  arg2 = (int)(INTEGER(i)[0]);
  result = (long)tc_getItem(arg1,arg2);
  r_ans = Rf_ScalarInteger(result);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setItem ( SEXP A, SEXP i, SEXP o)
{
  tc_items arg1 ;
  int arg2 ;
  long arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(A, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_setItem" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setItem" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  arg2 = (int)(INTEGER(i)[0]);
  arg3 = (long)(INTEGER(o)[0]);
  tc_setItem(arg1,arg2,arg3);
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getStringIndex ( SEXP A, SEXP s, SEXP s_swig_copy)
{
  int result;
  tc_strings arg1 ;
  char *arg2 = (char *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(A, &argp1, SWIGTYPE_p_tc_strings,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getStringIndex" "', argument " "1"" of type '" "tc_strings""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getStringIndex" "', argument " "1"" of type '" "tc_strings""'");
    } else {
      arg1 = *((tc_strings *)(argp1));
    }
  }
  res2 = SWIG_AsCharPtrAndSize(s, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_getStringIndex" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  result = (int)tc_getStringIndex(arg1,(char const *)arg2);
  r_ans = Rf_ScalarInteger(result);
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getRowIndex ( SEXP s_arg1, SEXP s, SEXP s_swig_copy)
{
  int result;
  tc_matrix arg1 ;
  char *arg2 = (char *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(s_arg1, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getRowIndex" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getRowIndex" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  res2 = SWIG_AsCharPtrAndSize(s, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_getRowIndex" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  result = (int)tc_getRowIndex(arg1,(char const *)arg2);
  r_ans = Rf_ScalarInteger(result);
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getColumnIndex ( SEXP s_arg1, SEXP s, SEXP s_swig_copy)
{
  int result;
  tc_matrix arg1 ;
  char *arg2 = (char *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(s_arg1, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getColumnIndex" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getColumnIndex" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  res2 = SWIG_AsCharPtrAndSize(s, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_getColumnIndex" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  result = (int)tc_getColumnIndex(arg1,(char const *)arg2);
  r_ans = Rf_ScalarInteger(result);
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_deleteMatrix ( SEXP M)
{
  tc_matrix arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(M, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_deleteMatrix" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_deleteMatrix" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  tc_deleteMatrix(arg1);
  r_ans = R_NilValue;
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_deleteTable ( SEXP M)
{
  tc_table arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(M, &argp1, SWIGTYPE_p_tc_table,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_deleteTable" "', argument " "1"" of type '" "tc_table""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_deleteTable" "', argument " "1"" of type '" "tc_table""'");
    } else {
      arg1 = *((tc_table *)(argp1));
    }
  }
  tc_deleteTable(arg1);
  r_ans = R_NilValue;
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_deleteItemsArray ( SEXP A)
{
  tc_items arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(A, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_deleteItemsArray" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_deleteItemsArray" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  tc_deleteItemsArray(arg1);
  r_ans = R_NilValue;
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_deleteStringsArray ( SEXP C)
{
  tc_strings arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(C, &argp1, SWIGTYPE_p_tc_strings,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_deleteStringsArray" "', argument " "1"" of type '" "tc_strings""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_deleteStringsArray" "', argument " "1"" of type '" "tc_strings""'");
    } else {
      arg1 = *((tc_strings *)(argp1));
    }
  }
  tc_deleteStringsArray(arg1);
  r_ans = R_NilValue;
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_appendColumns ( SEXP A, SEXP B, SEXP s_swig_copy)
{
  tc_matrix result;
  tc_matrix arg1 ;
  tc_matrix arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(A, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_appendColumns" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_appendColumns" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  {
    res2 = SWIG_R_ConvertPtr(B, &argp2, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_appendColumns" "', argument " "2"" of type '" "tc_matrix""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_appendColumns" "', argument " "2"" of type '" "tc_matrix""'");
    } else {
      arg2 = *((tc_matrix *)(argp2));
    }
  }
  result = tc_appendColumns(arg1,arg2);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_appendRows ( SEXP A, SEXP B, SEXP s_swig_copy)
{
  tc_matrix result;
  tc_matrix arg1 ;
  tc_matrix arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(A, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_appendRows" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_appendRows" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  {
    res2 = SWIG_R_ConvertPtr(B, &argp2, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_appendRows" "', argument " "2"" of type '" "tc_matrix""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_appendRows" "', argument " "2"" of type '" "tc_matrix""'");
    } else {
      arg2 = *((tc_matrix *)(argp2));
    }
  }
  result = tc_appendRows(arg1,arg2);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_transpose ( SEXP A, SEXP s_swig_copy)
{
  tc_matrix result;
  tc_matrix arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(A, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_transpose" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_transpose" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  result = tc_transpose(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_printMatrixToFile ( SEXP file, SEXP M)
{
  char *arg1 = (char *) 0 ;
  tc_matrix arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(file, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_printMatrixToFile" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  {
    res2 = SWIG_R_ConvertPtr(M, &argp2, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_printMatrixToFile" "', argument " "2"" of type '" "tc_matrix""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_printMatrixToFile" "', argument " "2"" of type '" "tc_matrix""'");
    } else {
      arg2 = *((tc_matrix *)(argp2));
    }
  }
  tc_printMatrixToFile((char const *)arg1,arg2);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_printOutMatrix ( SEXP M)
{
  tc_matrix arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(M, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_printOutMatrix" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_printOutMatrix" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  tc_printOutMatrix(arg1);
  r_ans = R_NilValue;
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_printTableToFile ( SEXP file, SEXP M)
{
  char *arg1 = (char *) 0 ;
  tc_table arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(file, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_printTableToFile" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  {
    res2 = SWIG_R_ConvertPtr(M, &argp2, SWIGTYPE_p_tc_table,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_printTableToFile" "', argument " "2"" of type '" "tc_table""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_printTableToFile" "', argument " "2"" of type '" "tc_table""'");
    } else {
      arg2 = *((tc_table *)(argp2));
    }
  }
  tc_printTableToFile((char const *)arg1,arg2);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_printOutTable ( SEXP M)
{
  tc_table arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(M, &argp1, SWIGTYPE_p_tc_table,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_printOutTable" "', argument " "1"" of type '" "tc_table""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_printOutTable" "', argument " "1"" of type '" "tc_table""'");
    } else {
      arg1 = *((tc_table *)(argp1));
    }
  }
  tc_printOutTable(arg1);
  r_ans = R_NilValue;
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_allItems ( SEXP s_swig_copy)
{
  tc_items result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = tc_allItems();
  r_ans = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&result,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_selectedItems ( SEXP s_swig_copy)
{
  tc_items result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = tc_selectedItems();
  r_ans = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&result,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_itemsOfFamily ( SEXP family, SEXP s_swig_copy)
{
  tc_items result;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(family, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_itemsOfFamily" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  result = tc_itemsOfFamily((char const *)arg1);
  r_ans = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&result,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_itemsOfFamilyFrom ( SEXP family, SEXP itemsToSelectFrom, SEXP s_swig_copy)
{
  tc_items result;
  char *arg1 = (char *) 0 ;
  tc_items arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(family, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_itemsOfFamilyFrom" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  {
    res2 = SWIG_R_ConvertPtr(itemsToSelectFrom, &argp2, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_itemsOfFamilyFrom" "', argument " "2"" of type '" "tc_items""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_itemsOfFamilyFrom" "', argument " "2"" of type '" "tc_items""'");
    } else {
      arg2 = *((tc_items *)(argp2));
    }
  }
  result = tc_itemsOfFamilyFrom((char const *)arg1,arg2);
  r_ans = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&result,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_find ( SEXP name, SEXP s_swig_copy)
{
  long result;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(name, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_find" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  result = (long)tc_find((char const *)arg1);
  r_ans = Rf_ScalarInteger(result);
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_findItems ( SEXP names, SEXP s_swig_copy)
{
  tc_items result;
  tc_strings arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(names, &argp1, SWIGTYPE_p_tc_strings,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_findItems" "', argument " "1"" of type '" "tc_strings""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_findItems" "', argument " "1"" of type '" "tc_strings""'");
    } else {
      arg1 = *((tc_strings *)(argp1));
    }
  }
  result = tc_findItems(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&result,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_findItemsUsingRegexp ( SEXP names, SEXP s_swig_copy)
{
  tc_items result;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(names, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_findItemsUsingRegexp" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  result = tc_findItemsUsingRegexp((char const *)arg1);
  r_ans = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&result,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_select ( SEXP item)
{
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  tc_select(arg1);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_deselect ( )
{
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  tc_deselect();
  r_ans = R_NilValue;
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getName ( SEXP item)
{
  char *result = 0 ;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  result = (char *)tc_getName(arg1);
  r_ans = SWIG_FromCharPtr((const char *)result);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getUniqueName ( SEXP item)
{
  char *result = 0 ;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  result = (char *)tc_getUniqueName(arg1);
  r_ans = SWIG_FromCharPtr((const char *)result);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_rename ( SEXP item, SEXP name)
{
  long arg1 ;
  char *arg2 = (char *) 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  res2 = SWIG_AsCharPtrAndSize(name, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_rename" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  tc_rename(arg1,(char const *)arg2);
  r_ans = R_NilValue;
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getNames ( SEXP items, SEXP s_swig_copy)
{
  tc_strings result;
  tc_items arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(items, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getNames" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getNames" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  result = tc_getNames(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_strings *)memcpy((tc_strings *)malloc(sizeof(tc_strings)),&result,sizeof(tc_strings)), SWIGTYPE_p_tc_strings, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getUniqueNames ( SEXP items, SEXP s_swig_copy)
{
  tc_strings result;
  tc_items arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(items, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getUniqueNames" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getUniqueNames" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  result = tc_getUniqueNames(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_strings *)memcpy((tc_strings *)malloc(sizeof(tc_strings)),&result,sizeof(tc_strings)), SWIGTYPE_p_tc_strings, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getFamily ( SEXP item)
{
  char *result = 0 ;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  result = (char *)tc_getFamily(arg1);
  r_ans = SWIG_FromCharPtr((const char *)result);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_isA ( SEXP item, SEXP family, SEXP s_swig_copy)
{
  int result;
  long arg1 ;
  char *arg2 = (char *) 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  res2 = SWIG_AsCharPtrAndSize(family, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_isA" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  result = (int)tc_isA(arg1,(char const *)arg2);
  r_ans = Rf_ScalarInteger(result);
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_print ( SEXP text)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(text, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_print" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_print((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_openUrl ( SEXP url)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(url, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_openUrl" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_openUrl((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_errorReport ( SEXP text)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(text, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_errorReport" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_errorReport((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_printMatrix ( SEXP data)
{
  tc_matrix arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(data, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_printMatrix" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_printMatrix" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  tc_printMatrix(arg1);
  r_ans = R_NilValue;
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_printFile ( SEXP filename)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(filename, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_printFile" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_printFile((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_clear ( )
{
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  tc_clear();
  r_ans = R_NilValue;
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_remove ( SEXP item)
{
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  tc_remove(arg1);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_insert ( SEXP name, SEXP family, SEXP s_swig_copy)
{
  long result;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(name, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_insert" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  res2 = SWIG_AsCharPtrAndSize(family, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_insert" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  result = (long)tc_insert((char const *)arg1,(char const *)arg2);
  r_ans = Rf_ScalarInteger(result);
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_insertConnection ( SEXP parts, SEXP name, SEXP family, SEXP s_swig_copy)
{
  long result;
  tc_items arg1 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(parts, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_insertConnection" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_insertConnection" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  res2 = SWIG_AsCharPtrAndSize(name, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_insertConnection" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_AsCharPtrAndSize(family, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tc_insertConnection" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = (char *)(buf3);
  result = (long)tc_insertConnection(arg1,(char const *)arg2,(char const *)arg3);
  r_ans = Rf_ScalarInteger(result);
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  if (alloc3 == SWIG_NEWOBJ) free((char*)buf3);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getConnectedNodes ( SEXP connection, SEXP s_swig_copy)
{
  tc_items result;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(connection)[0]);
  result = tc_getConnectedNodes(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&result,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getConnections ( SEXP part, SEXP s_swig_copy)
{
  tc_items result;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(part)[0]);
  result = tc_getConnections(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&result,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getY ( SEXP item, SEXP s_swig_copy)
{
  double result;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  result = (double)tc_getY(arg1);
  r_ans = SWIG_From_double((double)(result));
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getX ( SEXP item, SEXP s_swig_copy)
{
  double result;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  result = (double)tc_getX(arg1);
  r_ans = SWIG_From_double((double)(result));
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getPos ( SEXP items, SEXP s_swig_copy)
{
  tc_matrix result;
  tc_items arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(items, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getPos" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getPos" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  result = tc_getPos(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setPos ( SEXP item, SEXP x, SEXP y)
{
  long arg1 ;
  double arg2 ;
  double arg3 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  arg2 = (double)(REAL(x)[0]);
  arg3 = (double)(REAL(y)[0]);
  tc_setPos(arg1,arg2,arg3);
  r_ans = R_NilValue;
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setPosMulti ( SEXP items, SEXP positions)
{
  tc_items arg1 ;
  tc_matrix arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(items, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_setPosMulti" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setPosMulti" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  {
    res2 = SWIG_R_ConvertPtr(positions, &argp2, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_setPosMulti" "', argument " "2"" of type '" "tc_matrix""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setPosMulti" "', argument " "2"" of type '" "tc_matrix""'");
    } else {
      arg2 = *((tc_matrix *)(argp2));
    }
  }
  tc_setPosMulti(arg1,arg2);
  r_ans = R_NilValue;
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_moveSelected ( SEXP dx, SEXP dy)
{
  double arg1 ;
  double arg2 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (double)(REAL(dx)[0]);
  arg2 = (double)(REAL(dy)[0]);
  tc_moveSelected(arg1,arg2);
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_isWindows ( SEXP s_swig_copy)
{
  int result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = (int)tc_isWindows();
  r_ans = Rf_ScalarInteger(result);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_isMac ( SEXP s_swig_copy)
{
  int result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = (int)tc_isMac();
  r_ans = Rf_ScalarInteger(result);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_isLinux ( SEXP s_swig_copy)
{
  int result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = (int)tc_isLinux();
  r_ans = Rf_ScalarInteger(result);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_appDir ( )
{
  char *result = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = (char *)tc_appDir();
  r_ans = SWIG_FromCharPtr((const char *)result);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_homeDir ( )
{
  char *result = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = (char *)tc_homeDir();
  r_ans = SWIG_FromCharPtr((const char *)result);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_createInputWindowForScript ( SEXP input, SEXP title, SEXP functionname)
{
  tc_matrix arg1 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(input, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_createInputWindowForScript" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_createInputWindowForScript" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  res2 = SWIG_AsCharPtrAndSize(title, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_createInputWindowForScript" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_AsCharPtrAndSize(functionname, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tc_createInputWindowForScript" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = (char *)(buf3);
  tc_createInputWindowForScript(arg1,(char const *)arg2,(char const *)arg3);
  r_ans = R_NilValue;
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  if (alloc3 == SWIG_NEWOBJ) free((char*)buf3);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


void _p_f_tc_matrix__void(tc_matrix s_arg1) {
  tc_matrix arg1 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&s_arg1,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_tc_matrix__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


SWIGEXPORT SEXP
R_swig_tc_createInputWindow ( SEXP input, SEXP title, SEXP f)
{
  tc_matrix arg1 ;
  char *arg2 = (char *) 0 ;
  void (*arg3)(tc_matrix) = (void (*)(tc_matrix)) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(input, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_createInputWindow" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_createInputWindow" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  res2 = SWIG_AsCharPtrAndSize(title, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_createInputWindow" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  if(TYPEOF(f) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(f, (void**)(&arg3), SWIGTYPE_p_f_tc_matrix__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_createInputWindow" "', argument " "3"" of type '" "void (*)(tc_matrix)""'"); 
      }
    }
  } else {
    arg3 = _p_f_tc_matrix__void;
    R_SWIG_pushCallbackFunctionData(f, NULL);
  }
  tc_createInputWindow(arg1,(char const *)arg2,arg3);
  r_ans = R_NilValue;
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_addInputWindowOptions ( SEXP title, SEXP i, SEXP j, SEXP options)
{
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int arg3 ;
  tc_strings arg4 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(title, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_addInputWindowOptions" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  arg2 = (int)(INTEGER(i)[0]);
  arg3 = (int)(INTEGER(j)[0]);
  {
    res4 = SWIG_R_ConvertPtr(options, &argp4, SWIGTYPE_p_tc_strings,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "tc_addInputWindowOptions" "', argument " "4"" of type '" "tc_strings""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_addInputWindowOptions" "', argument " "4"" of type '" "tc_strings""'");
    } else {
      arg4 = *((tc_strings *)(argp4));
    }
  }
  tc_addInputWindowOptions((char const *)arg1,arg2,arg3,arg4);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_addInputWindowCheckbox ( SEXP title, SEXP i, SEXP j)
{
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(title, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_addInputWindowCheckbox" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  arg2 = (int)(INTEGER(i)[0]);
  arg3 = (int)(INTEGER(j)[0]);
  tc_addInputWindowCheckbox((char const *)arg1,arg2,arg3);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_openNewWindow ( SEXP title)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(title, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_openNewWindow" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_openNewWindow((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getChildren ( SEXP o, SEXP s_swig_copy)
{
  tc_items result;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(o)[0]);
  result = tc_getChildren(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&result,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getParent ( SEXP o, SEXP s_swig_copy)
{
  long result;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(o)[0]);
  result = (long)tc_getParent(arg1);
  r_ans = Rf_ScalarInteger(result);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getNumericalData ( SEXP item, SEXP data, SEXP s_swig_copy)
{
  tc_matrix result;
  long arg1 ;
  char *arg2 = (char *) 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  res2 = SWIG_AsCharPtrAndSize(data, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_getNumericalData" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  result = tc_getNumericalData(arg1,(char const *)arg2);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setNumericalData ( SEXP o, SEXP title, SEXP data)
{
  long arg1 ;
  char *arg2 = (char *) 0 ;
  tc_matrix arg3 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(o)[0]);
  res2 = SWIG_AsCharPtrAndSize(title, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_setNumericalData" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  {
    res3 = SWIG_R_ConvertPtr(data, &argp3, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tc_setNumericalData" "', argument " "3"" of type '" "tc_matrix""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setNumericalData" "', argument " "3"" of type '" "tc_matrix""'");
    } else {
      arg3 = *((tc_matrix *)(argp3));
    }
  }
  tc_setNumericalData(arg1,(char const *)arg2,arg3);
  r_ans = R_NilValue;
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setNumericalValues ( SEXP data)
{
  tc_matrix arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(data, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_setNumericalValues" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setNumericalValues" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  tc_setNumericalValues(arg1);
  r_ans = R_NilValue;
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setNumericalValue ( SEXP name, SEXP value)
{
  char *arg1 = (char *) 0 ;
  double arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(name, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_setNumericalValue" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  arg2 = (double)(REAL(value)[0]);
  tc_setNumericalValue((char const *)arg1,arg2);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getTextData ( SEXP item, SEXP data, SEXP s_swig_copy)
{
  tc_table result;
  long arg1 ;
  char *arg2 = (char *) 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  res2 = SWIG_AsCharPtrAndSize(data, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_getTextData" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  result = tc_getTextData(arg1,(char const *)arg2);
  r_ans = SWIG_R_NewPointerObj((tc_table *)memcpy((tc_table *)malloc(sizeof(tc_table)),&result,sizeof(tc_table)), SWIGTYPE_p_tc_table, SWIG_POINTER_OWN |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setTextData ( SEXP o, SEXP title, SEXP data)
{
  long arg1 ;
  char *arg2 = (char *) 0 ;
  tc_table arg3 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(o)[0]);
  res2 = SWIG_AsCharPtrAndSize(title, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_setTextData" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  {
    res3 = SWIG_R_ConvertPtr(data, &argp3, SWIGTYPE_p_tc_table,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tc_setTextData" "', argument " "3"" of type '" "tc_table""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setTextData" "', argument " "3"" of type '" "tc_table""'");
    } else {
      arg3 = *((tc_table *)(argp3));
    }
  }
  tc_setTextData(arg1,(char const *)arg2,arg3);
  r_ans = R_NilValue;
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setTextValues ( SEXP data)
{
  tc_table arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(data, &argp1, SWIGTYPE_p_tc_table,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_setTextValues" "', argument " "1"" of type '" "tc_table""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setTextValues" "', argument " "1"" of type '" "tc_table""'");
    } else {
      arg1 = *((tc_table *)(argp1));
    }
  }
  tc_setTextValues(arg1);
  r_ans = R_NilValue;
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getNumericalValue ( SEXP name, SEXP s_swig_copy)
{
  double result;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(name, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getNumericalValue" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  result = (double)tc_getNumericalValue((char const *)arg1);
  r_ans = SWIG_From_double((double)(result));
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getNumericalValueUsingRegexp ( SEXP regex, SEXP s_swig_copy)
{
  tc_matrix result;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(regex, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getNumericalValueUsingRegexp" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  result = tc_getNumericalValueUsingRegexp((char const *)arg1);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getTextValue ( SEXP name)
{
  char *result = 0 ;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(name, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getTextValue" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  result = (char *)tc_getTextValue((char const *)arg1);
  r_ans = SWIG_FromCharPtr((const char *)result);
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getTextValueUsingRegexp ( SEXP regex, SEXP s_swig_copy)
{
  tc_table result;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(regex, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getTextValueUsingRegexp" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  result = tc_getTextValueUsingRegexp((char const *)arg1);
  r_ans = SWIG_R_NewPointerObj((tc_table *)memcpy((tc_table *)malloc(sizeof(tc_table)),&result,sizeof(tc_table)), SWIGTYPE_p_tc_table, SWIG_POINTER_OWN |  0 );
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setTextValue ( SEXP name, SEXP value)
{
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(name, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_setTextValue" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_setTextValue" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  tc_setTextValue((char const *)arg1,(char const *)arg2);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getNumericalDataNames ( SEXP o, SEXP s_swig_copy)
{
  tc_strings result;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(o)[0]);
  result = tc_getNumericalDataNames(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_strings *)memcpy((tc_strings *)malloc(sizeof(tc_strings)),&result,sizeof(tc_strings)), SWIGTYPE_p_tc_strings, SWIG_POINTER_OWN |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getTextDataNames ( SEXP o, SEXP s_swig_copy)
{
  tc_strings result;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(o)[0]);
  result = tc_getTextDataNames(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_strings *)memcpy((tc_strings *)malloc(sizeof(tc_strings)),&result,sizeof(tc_strings)), SWIGTYPE_p_tc_strings, SWIG_POINTER_OWN |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_zoom ( SEXP factor)
{
  double arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (double)(REAL(factor)[0]);
  tc_zoom(arg1);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_viewWindow ( SEXP name)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(name, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_viewWindow" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_viewWindow((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getStringDialog ( SEXP title)
{
  char *result = 0 ;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(title, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getStringDialog" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  result = (char *)tc_getStringDialog((char const *)arg1);
  r_ans = SWIG_FromCharPtr((const char *)result);
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getFilename ( )
{
  char *result = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = (char *)tc_getFilename();
  r_ans = SWIG_FromCharPtr((const char *)result);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getStringFromList ( SEXP title, SEXP list, SEXP selectedString, SEXP s_swig_copy)
{
  int result;
  char *arg1 = (char *) 0 ;
  tc_strings arg2 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(title, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getStringFromList" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  {
    res2 = SWIG_R_ConvertPtr(list, &argp2, SWIGTYPE_p_tc_strings,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_getStringFromList" "', argument " "2"" of type '" "tc_strings""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getStringFromList" "', argument " "2"" of type '" "tc_strings""'");
    } else {
      arg2 = *((tc_strings *)(argp2));
    }
  }
  res3 = SWIG_AsCharPtrAndSize(selectedString, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tc_getStringFromList" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = (char *)(buf3);
  result = (int)tc_getStringFromList((char const *)arg1,arg2,(char const *)arg3);
  r_ans = Rf_ScalarInteger(result);
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  if (alloc3 == SWIG_NEWOBJ) free((char*)buf3);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getNumber ( SEXP title, SEXP s_swig_copy)
{
  double result;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(title, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getNumber" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  result = (double)tc_getNumber((char const *)arg1);
  r_ans = SWIG_From_double((double)(result));
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getNumbers ( SEXP labels, SEXP s_swig_copy)
{
  tc_matrix result;
  tc_strings arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(labels, &argp1, SWIGTYPE_p_tc_strings,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getNumbers" "', argument " "1"" of type '" "tc_strings""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getNumbers" "', argument " "1"" of type '" "tc_strings""'");
    } else {
      arg1 = *((tc_strings *)(argp1));
    }
  }
  result = tc_getNumbers(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_askQuestion ( SEXP message, SEXP s_swig_copy)
{
  int result;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(message, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_askQuestion" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  result = (int)tc_askQuestion((char const *)arg1);
  r_ans = Rf_ScalarInteger(result);
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_messageDialog ( SEXP message)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(message, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_messageDialog" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_messageDialog((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_openFile ( SEXP file)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(file, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_openFile" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_openFile((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_saveToFile ( SEXP file)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(file, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_saveToFile" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_saveToFile((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_thisThread ( SEXP s_swig_copy)
{
  long result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = (long)tc_thisThread();
  r_ans = Rf_ScalarInteger(result);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_createSliders ( SEXP input, SEXP f)
{
  tc_matrix arg1 ;
  void (*arg2)(tc_matrix) = (void (*)(tc_matrix)) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(input, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_createSliders" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_createSliders" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  if(TYPEOF(f) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(f, (void**)(&arg2), SWIGTYPE_p_f_tc_matrix__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_createSliders" "', argument " "2"" of type '" "void (*)(tc_matrix)""'"); 
      }
    }
  } else {
    arg2 = _p_f_tc_matrix__void;
    R_SWIG_pushCallbackFunctionData(f, NULL);
  }
  tc_createSliders(arg1,arg2);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_createSlidersForScript ( SEXP input, SEXP s_arg2)
{
  tc_matrix arg1 ;
  char *arg2 = (char *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(input, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_createSlidersForScript" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_createSlidersForScript" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  res2 = SWIG_AsCharPtrAndSize(s_arg2, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_createSlidersForScript" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  tc_createSlidersForScript(arg1,(char const *)arg2);
  r_ans = R_NilValue;
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getColor ( SEXP item)
{
  char *result = 0 ;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  result = (char *)tc_getColor(arg1);
  r_ans = SWIG_FromCharPtr((const char *)result);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setColor ( SEXP item, SEXP name, SEXP permanent)
{
  long arg1 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  res2 = SWIG_AsCharPtrAndSize(name, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_setColor" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  arg3 = (int)(INTEGER(permanent)[0]);
  tc_setColor(arg1,(char const *)arg2,arg3);
  r_ans = R_NilValue;
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_changeNodeImage ( SEXP item, SEXP filename)
{
  long arg1 ;
  char *arg2 = (char *) 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  res2 = SWIG_AsCharPtrAndSize(filename, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_changeNodeImage" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  tc_changeNodeImage(arg1,(char const *)arg2);
  r_ans = R_NilValue;
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_changeArrowHead ( SEXP connection, SEXP filename)
{
  long arg1 ;
  char *arg2 = (char *) 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(connection)[0]);
  res2 = SWIG_AsCharPtrAndSize(filename, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_changeArrowHead" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  tc_changeArrowHead(arg1,(char const *)arg2);
  r_ans = R_NilValue;
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setSize ( SEXP item, SEXP width, SEXP height)
{
  long arg1 ;
  double arg2 ;
  double arg3 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  arg2 = (double)(REAL(width)[0]);
  arg3 = (double)(REAL(height)[0]);
  tc_setSize(arg1,arg2,arg3);
  r_ans = R_NilValue;
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getWidth ( SEXP item, SEXP s_swig_copy)
{
  double result;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  result = (double)tc_getWidth(arg1);
  r_ans = SWIG_From_double((double)(result));
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getHeight ( SEXP item, SEXP s_swig_copy)
{
  double result;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  result = (double)tc_getHeight(arg1);
  r_ans = SWIG_From_double((double)(result));
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_rotate ( SEXP item, SEXP t)
{
  long arg1 ;
  double arg2 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  arg2 = (double)(REAL(t)[0]);
  tc_rotate(arg1,arg2);
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_screenshot ( SEXP filename, SEXP width, SEXP height)
{
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(filename, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_screenshot" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  arg2 = (int)(INTEGER(width)[0]);
  arg3 = (int)(INTEGER(height)[0]);
  tc_screenshot((char const *)arg1,arg2,arg3);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_screenWidth ( SEXP s_swig_copy)
{
  int result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = (int)tc_screenWidth();
  r_ans = Rf_ScalarInteger(result);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_screenHeight ( SEXP s_swig_copy)
{
  int result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = (int)tc_screenHeight();
  r_ans = Rf_ScalarInteger(result);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_screenX ( SEXP s_swig_copy)
{
  int result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = (int)tc_screenX();
  r_ans = Rf_ScalarInteger(result);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_screenY ( SEXP s_swig_copy)
{
  int result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = (int)tc_screenY();
  r_ans = Rf_ScalarInteger(result);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_annotations ( )
{
  char *result = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = (char *)tc_annotations();
  r_ans = SWIG_FromCharPtr((const char *)result);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_insertAnnotations ( SEXP s_arg1, SEXP s_arg2, SEXP s_arg3)
{
  char *arg1 = (char *) 0 ;
  double arg2 ;
  double arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(s_arg1, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_insertAnnotations" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  arg2 = (double)(REAL(s_arg2)[0]);
  arg3 = (double)(REAL(s_arg3)[0]);
  tc_insertAnnotations((char const *)arg1,arg2,arg3);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getControlPointX ( SEXP connection, SEXP part, SEXP whichPoint, SEXP s_swig_copy)
{
  double result;
  long arg1 ;
  long arg2 ;
  int arg3 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(connection)[0]);
  arg2 = (long)(INTEGER(part)[0]);
  arg3 = (int)(INTEGER(whichPoint)[0]);
  result = (double)tc_getControlPointX(arg1,arg2,arg3);
  r_ans = SWIG_From_double((double)(result));
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getControlPointY ( SEXP connection, SEXP part, SEXP whichPoint, SEXP s_swig_copy)
{
  double result;
  long arg1 ;
  long arg2 ;
  int arg3 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(connection)[0]);
  arg2 = (long)(INTEGER(part)[0]);
  arg3 = (int)(INTEGER(whichPoint)[0]);
  result = (double)tc_getControlPointY(arg1,arg2,arg3);
  r_ans = SWIG_From_double((double)(result));
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setControlPoint ( SEXP connection, SEXP part, SEXP whichPoint, SEXP x, SEXP y)
{
  long arg1 ;
  long arg2 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(connection)[0]);
  arg2 = (long)(INTEGER(part)[0]);
  arg3 = (int)(INTEGER(whichPoint)[0]);
  arg4 = (double)(REAL(x)[0]);
  arg5 = (double)(REAL(y)[0]);
  tc_setControlPoint(arg1,arg2,arg3,arg4,arg5);
  r_ans = R_NilValue;
  
  
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setCenterPoint ( SEXP connection, SEXP y, SEXP x)
{
  long arg1 ;
  double arg2 ;
  double arg3 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(connection)[0]);
  arg2 = (double)(REAL(y)[0]);
  arg3 = (double)(REAL(x)[0]);
  tc_setCenterPoint(arg1,arg2,arg3);
  r_ans = R_NilValue;
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getCenterPointX ( SEXP connection, SEXP s_swig_copy)
{
  double result;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(connection)[0]);
  result = (double)tc_getCenterPointX(arg1);
  r_ans = SWIG_From_double((double)(result));
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getCenterPointY ( SEXP connection, SEXP s_swig_copy)
{
  double result;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(connection)[0]);
  result = (double)tc_getCenterPointY(arg1);
  r_ans = SWIG_From_double((double)(result));
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setStraight ( SEXP item, SEXP straight)
{
  long arg1 ;
  int arg2 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  arg2 = (int)(INTEGER(straight)[0]);
  tc_setStraight(arg1,arg2);
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setAllStraight ( SEXP straight)
{
  int arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (int)(INTEGER(straight)[0]);
  tc_setAllStraight(arg1);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setLineWidth ( SEXP item, SEXP width, SEXP permanent)
{
  long arg1 ;
  double arg2 ;
  int arg3 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  arg2 = (double)(REAL(width)[0]);
  arg3 = (int)(INTEGER(permanent)[0]);
  tc_setLineWidth(arg1,arg2,arg3);
  r_ans = R_NilValue;
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


tc_items _p_f___tc_items() {
  tc_items result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 1));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f___tc_items)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_items""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_items""'");
    } else {
      result = *((tc_items *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


tc_items _p_f_p_q_const__char__tc_items(char const * s_arg1) {
  char *arg1 = (char *) 0 ;
  tc_items result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char__tc_items)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_items""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_items""'");
    } else {
      result = *((tc_items *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


tc_items _p_f_p_q_const__char_tc_items__tc_items(char const * s_arg1, tc_items s_arg2) {
  char *arg1 = (char *) 0 ;
  tc_items arg2 ;
  tc_items result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&s_arg2,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char_tc_items__tc_items)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_items""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_items""'");
    } else {
      result = *((tc_items *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


long _p_f_p_q_const__char__long(char const * s_arg1) {
  char *arg1 = (char *) 0 ;
  long result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char__long)");
  }
  result = (long)(INTEGER(r_swig_cb_data->retValue)[0]);
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


tc_items _p_f_tc_strings__tc_items(tc_strings s_arg1) {
  tc_strings arg1 ;
  tc_items result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_strings *)memcpy((tc_strings *)malloc(sizeof(tc_strings)),&s_arg1,sizeof(tc_strings)), SWIGTYPE_p_tc_strings, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_tc_strings__tc_items)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_items""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_items""'");
    } else {
      result = *((tc_items *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


void _p_f_long__void(long s_arg1) {
  long arg1 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


void _p_f___void() {
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 1));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f___void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


char const * _p_f_long__p_char(long s_arg1) {
  long arg1 ;
  char *result = 0 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  int res ;
  char *buf = 0 ;
  int alloc = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long__p_char)");
  }
  res = SWIG_AsCharPtrAndSize(r_swig_cb_data->retValue, &buf, NULL, &alloc);
  if (!SWIG_IsOK(res)) {
    SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "char const *""'");
  }
  result = (char *)(buf);
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


void _p_f_long_p_q_const__char__void(long s_arg1, char const * s_arg2) {
  long arg1 ;
  char *arg2 = (char *) 0 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_p_q_const__char__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


tc_strings _p_f_tc_items__tc_strings(tc_items s_arg1) {
  tc_items arg1 ;
  tc_strings result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&s_arg1,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_tc_items__tc_strings)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_strings,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_strings""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_strings""'");
    } else {
      result = *((tc_strings *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


int _p_f_long_p_q_const__char__int(long s_arg1, char const * s_arg2) {
  long arg1 ;
  char *arg2 = (char *) 0 ;
  int result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_p_q_const__char__int)");
  }
  result = (int)(INTEGER(r_swig_cb_data->retValue)[0]);
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


void _p_f_p_q_const__char__void(char const * s_arg1) {
  char *arg1 = (char *) 0 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


long _p_f_p_q_const__char_p_q_const__char__long(char const * s_arg1, char const * s_arg2) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  long result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char_p_q_const__char__long)");
  }
  result = (long)(INTEGER(r_swig_cb_data->retValue)[0]);
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


long _p_f_tc_items_p_q_const__char_p_q_const__char__long(tc_items s_arg1, char const * s_arg2, char const * s_arg3) {
  tc_items arg1 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  long result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 4));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&s_arg1,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg3);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_tc_items_p_q_const__char_p_q_const__char__long)");
  }
  result = (long)(INTEGER(r_swig_cb_data->retValue)[0]);
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


tc_items _p_f_long__tc_items(long s_arg1) {
  long arg1 ;
  tc_items result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long__tc_items)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_items""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_items""'");
    } else {
      result = *((tc_items *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


double _p_f_long__double(long s_arg1) {
  long arg1 ;
  double result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long__double)");
  }
  result = (double)(REAL(r_swig_cb_data->retValue)[0]);
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


tc_matrix _p_f_tc_items__tc_matrix(tc_items s_arg1) {
  tc_items arg1 ;
  tc_matrix result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&s_arg1,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_tc_items__tc_matrix)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_matrix""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_matrix""'");
    } else {
      result = *((tc_matrix *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


void _p_f_long_double_double__void(long s_arg1, double s_arg2, double s_arg3) {
  long arg1 ;
  double arg2 ;
  double arg3 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 4));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg2));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg3));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_double_double__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


void _p_f_tc_items_tc_matrix__void(tc_items s_arg1, tc_matrix s_arg2) {
  tc_items arg1 ;
  tc_matrix arg2 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&s_arg1,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&s_arg2,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_tc_items_tc_matrix__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


void _p_f_double_double__void(double s_arg1, double s_arg2) {
  double arg1 ;
  double arg2 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg1));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg2));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_double_double__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


int _p_f___int() {
  int result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 1));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f___int)");
  }
  result = (int)(INTEGER(r_swig_cb_data->retValue)[0]);
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


char const * _p_f___p_char() {
  char *result = 0 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  int res ;
  char *buf = 0 ;
  int alloc = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 1));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f___p_char)");
  }
  res = SWIG_AsCharPtrAndSize(r_swig_cb_data->retValue, &buf, NULL, &alloc);
  if (!SWIG_IsOK(res)) {
    SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "char const *""'");
  }
  result = (char *)(buf);
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


void _p_f_tc_matrix_p_q_const__char_p_q_const__char__void(tc_matrix s_arg1, char const * s_arg2, char const * s_arg3) {
  tc_matrix arg1 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 4));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&s_arg1,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg3);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_tc_matrix_p_q_const__char_p_q_const__char__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


void _p_f_long_tc_matrix_p_q_const__char_p_f_tc_matrix__void__void(long s_arg1, tc_matrix s_arg2, char const * s_arg3, void (*)(tc_matrix) s_arg4) {
  long arg1 ;
  tc_matrix arg2 ;
  char *arg3 = (char *) 0 ;
  void (*arg4)(tc_matrix) = (void (*)(tc_matrix)) 0 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 5));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&s_arg2,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg3);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((void *)(s_arg4), SWIGTYPE_p_f_tc_matrix__void, 0);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_tc_matrix_p_q_const__char_p_f_tc_matrix__void__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


void _p_f_long_tc_matrix_p_f_tc_matrix__void__void(long s_arg1, tc_matrix s_arg2, void (*)(tc_matrix) s_arg3) {
  long arg1 ;
  tc_matrix arg2 ;
  void (*arg3)(tc_matrix) = (void (*)(tc_matrix)) 0 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 4));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&s_arg2,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((void *)(s_arg3), SWIGTYPE_p_f_tc_matrix__void, 0);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_tc_matrix_p_f_tc_matrix__void__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


void _p_f_tc_matrix_p_q_const__char__void(tc_matrix s_arg1, char const * s_arg2) {
  tc_matrix arg1 ;
  char *arg2 = (char *) 0 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&s_arg1,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_tc_matrix_p_q_const__char__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


void _p_f_p_q_const__char_int_int_tc_strings__void(char const * s_arg1, int s_arg2, int s_arg3, tc_strings s_arg4) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int arg3 ;
  tc_strings arg4 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 5));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg3);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_strings *)memcpy((tc_strings *)malloc(sizeof(tc_strings)),&s_arg4,sizeof(tc_strings)), SWIGTYPE_p_tc_strings, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char_int_int_tc_strings__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


void _p_f_p_q_const__char_int_int__void(char const * s_arg1, int s_arg2, int s_arg3) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int arg3 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 4));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg3);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char_int_int__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


long _p_f_long__long(long s_arg1) {
  long arg1 ;
  long result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long__long)");
  }
  result = (long)(INTEGER(r_swig_cb_data->retValue)[0]);
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


tc_matrix _p_f_long_p_q_const__char__tc_matrix(long s_arg1, char const * s_arg2) {
  long arg1 ;
  char *arg2 = (char *) 0 ;
  tc_matrix result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_p_q_const__char__tc_matrix)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_matrix""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_matrix""'");
    } else {
      result = *((tc_matrix *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


void _p_f_long_p_q_const__char_tc_matrix__void(long s_arg1, char const * s_arg2, tc_matrix s_arg3) {
  long arg1 ;
  char *arg2 = (char *) 0 ;
  tc_matrix arg3 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 4));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&s_arg3,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_p_q_const__char_tc_matrix__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


tc_table _p_f_long_p_q_const__char__tc_table(long s_arg1, char const * s_arg2) {
  long arg1 ;
  char *arg2 = (char *) 0 ;
  tc_table result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_p_q_const__char__tc_table)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_table,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_table""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_table""'");
    } else {
      result = *((tc_table *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


void _p_f_long_p_q_const__char_tc_table__void(long s_arg1, char const * s_arg2, tc_table s_arg3) {
  long arg1 ;
  char *arg2 = (char *) 0 ;
  tc_table arg3 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 4));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_table *)memcpy((tc_table *)malloc(sizeof(tc_table)),&s_arg3,sizeof(tc_table)), SWIGTYPE_p_tc_table, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_p_q_const__char_tc_table__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


tc_strings _p_f_long__tc_strings(long s_arg1) {
  long arg1 ;
  tc_strings result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long__tc_strings)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_strings,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_strings""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_strings""'");
    } else {
      result = *((tc_strings *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


void _p_f_double__void(double s_arg1) {
  double arg1 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg1));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_double__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


char const * _p_f_p_q_const__char__p_char(char const * s_arg1) {
  char *arg1 = (char *) 0 ;
  char *result = 0 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  int res ;
  char *buf = 0 ;
  int alloc = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char__p_char)");
  }
  res = SWIG_AsCharPtrAndSize(r_swig_cb_data->retValue, &buf, NULL, &alloc);
  if (!SWIG_IsOK(res)) {
    SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "char const *""'");
  }
  result = (char *)(buf);
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


int _p_f_p_q_const__char_tc_strings_p_q_const__char__int(char const * s_arg1, tc_strings s_arg2, char const * s_arg3) {
  char *arg1 = (char *) 0 ;
  tc_strings arg2 ;
  char *arg3 = (char *) 0 ;
  int result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 4));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_strings *)memcpy((tc_strings *)malloc(sizeof(tc_strings)),&s_arg2,sizeof(tc_strings)), SWIGTYPE_p_tc_strings, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg3);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char_tc_strings_p_q_const__char__int)");
  }
  result = (int)(INTEGER(r_swig_cb_data->retValue)[0]);
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


double _p_f_p_q_const__char__double(char const * s_arg1) {
  char *arg1 = (char *) 0 ;
  double result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char__double)");
  }
  result = (double)(REAL(r_swig_cb_data->retValue)[0]);
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


tc_matrix _p_f_tc_strings__tc_matrix(tc_strings s_arg1) {
  tc_strings arg1 ;
  tc_matrix result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_strings *)memcpy((tc_strings *)malloc(sizeof(tc_strings)),&s_arg1,sizeof(tc_strings)), SWIGTYPE_p_tc_strings, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_tc_strings__tc_matrix)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_matrix""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_matrix""'");
    } else {
      result = *((tc_matrix *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


int _p_f_p_q_const__char__int(char const * s_arg1) {
  char *arg1 = (char *) 0 ;
  int result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char__int)");
  }
  result = (int)(INTEGER(r_swig_cb_data->retValue)[0]);
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


void _p_f_long_double_double_int__void(long s_arg1, double s_arg2, double s_arg3, int s_arg4) {
  long arg1 ;
  double arg2 ;
  double arg3 ;
  int arg4 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 5));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg2));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg3));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg4);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_double_double_int__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


void _p_f_long_double_int__void(long s_arg1, double s_arg2, int s_arg3) {
  long arg1 ;
  double arg2 ;
  int arg3 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 4));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg2));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg3);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_double_int__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


void _p_f_long_p_q_const__char_int__void(long s_arg1, char const * s_arg2, int s_arg3) {
  long arg1 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 4));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg3);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_p_q_const__char_int__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


void _p_f_p_q_const__char_double_double__void(char const * s_arg1, double s_arg2, double s_arg3) {
  char *arg1 = (char *) 0 ;
  double arg2 ;
  double arg3 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 4));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg2));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg3));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char_double_double__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


void _p_f_p_q_const__char_double__void(char const * s_arg1, double s_arg2) {
  char *arg1 = (char *) 0 ;
  double arg2 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg2));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char_double__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


void _p_f_tc_table__void(tc_table s_arg1) {
  tc_table arg1 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_table *)memcpy((tc_table *)malloc(sizeof(tc_table)),&s_arg1,sizeof(tc_table)), SWIGTYPE_p_tc_table, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_tc_table__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


void _p_f_p_q_const__char_p_q_const__char__void(char const * s_arg1, char const * s_arg2) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char_p_q_const__char__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


tc_matrix _p_f_p_q_const__char__tc_matrix(char const * s_arg1) {
  char *arg1 = (char *) 0 ;
  tc_matrix result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char__tc_matrix)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_matrix""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_matrix""'");
    } else {
      result = *((tc_matrix *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


tc_table _p_f_p_q_const__char__tc_table(char const * s_arg1) {
  char *arg1 = (char *) 0 ;
  tc_table result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char__tc_table)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_table,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_table""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_table""'");
    } else {
      result = *((tc_table *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


double _p_f_long_long_int__double(long s_arg1, long s_arg2, int s_arg3) {
  long arg1 ;
  long arg2 ;
  int arg3 ;
  double result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 4));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg3);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_long_int__double)");
  }
  result = (double)(REAL(r_swig_cb_data->retValue)[0]);
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


void _p_f_long_long_int_double_double__void(long s_arg1, long s_arg2, int s_arg3, double s_arg4, double s_arg5) {
  long arg1 ;
  long arg2 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 6));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg3);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg4));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg5));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_long_int_double_double__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


void _p_f_long_int__void(long s_arg1, int s_arg2) {
  long arg1 ;
  int arg2 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_int__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


void _p_f_int__void(int s_arg1) {
  int arg1 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_int__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


SWIGEXPORT SEXP
R_swig_tc_Main_api_initialize ( SEXP tc_allItems0, SEXP tc_selectedItems0, SEXP tc_itemsOfFamily0, SEXP tc_itemsOfFamily1, SEXP tc_find0, SEXP tc_findItems0, SEXP tc_findItemsUsingRegexp0, SEXP tc_select0, SEXP tc_deselect0, SEXP tc_getName0, SEXP tc_getUniqueName0, SEXP tc_setName0, SEXP tc_getNames0, SEXP tc_getUniqueNames0, SEXP tc_getFamily0, SEXP tc_isA0, SEXP tc_clearText, SEXP tc_outputText0, SEXP tc_errorReport0, SEXP tc_outputTable0, SEXP tc_printFile0, SEXP tc_removeItem0, SEXP insertItem, SEXP insertConnection, SEXP getConnectedParts, SEXP getConnections, SEXP tc_getY0, SEXP tc_getX0, SEXP tc_getPos0, SEXP tc_setPos0, SEXP tc_setPos1, SEXP tc_moveSelected0, SEXP tc_isWindows0, SEXP tc_isMac0, SEXP tc_isLinux0, SEXP tc_appDir0, SEXP tc_homeDir0, SEXP tc_createInputWindow0, SEXP tc_createInputWindow1, SEXP createSliders1, SEXP createSliders2, SEXP tc_addInputWindowOptions0, SEXP tc_addInputWindowCheckbox0, SEXP tc_openNewWindow0, SEXP tc_getChildren0, SEXP tc_getParent0, SEXP tc_getNumericalData0, SEXP tc_setNumericalData0, SEXP tc_getTextData0, SEXP tc_setTextData0, SEXP tc_getNumericalDataNames0, SEXP tc_getTextDataNames0, SEXP tc_zoom0, SEXP tc_viewWindow0, SEXP tc_getStringDialog0, SEXP getSelectedString, SEXP getNumber, SEXP getNumbers, SEXP getFilename, SEXP askQuestion, SEXP messageDialog, SEXP openFile, SEXP saveToFile, SEXP setSize0, SEXP getWidth0, SEXP getHeight0, SEXP setAngle0, SEXP getColor, SEXP setColor0, SEXP changeGraphics0, SEXP changeArrowHead0, SEXP screenshot, SEXP screenHeight, SEXP screenWidth, SEXP screenX, SEXP screenY, SEXP annotations, SEXP insertAnnotations, SEXP setNumericalValues, SEXP setNumericalValue, SEXP setTextValues, SEXP setTextValue, SEXP getNumericalValue, SEXP getTextValue, SEXP getNumericalValueUsingRegexp, SEXP getTextValueUsingRegexp, SEXP openUrl, SEXP getControlPointX, SEXP getControlPointY, SEXP setControlPoint, SEXP setCenterPoint, SEXP getCenterPointX, SEXP getCenterPointY, SEXP setStraight, SEXP setAllStraight, SEXP setLineWidth)
{
  tc_items (*arg1)() = (tc_items (*)()) 0 ;
  tc_items (*arg2)() = (tc_items (*)()) 0 ;
  tc_items (*arg3)(char const *) = (tc_items (*)(char const *)) 0 ;
  tc_items (*arg4)(char const *,tc_items) = (tc_items (*)(char const *,tc_items)) 0 ;
  long (*arg5)(char const *) = (long (*)(char const *)) 0 ;
  tc_items (*arg6)(tc_strings) = (tc_items (*)(tc_strings)) 0 ;
  tc_items (*arg7)(char const *) = (tc_items (*)(char const *)) 0 ;
  void (*arg8)(long) = (void (*)(long)) 0 ;
  void (*arg9)() = (void (*)()) 0 ;
  char *(*arg10)(long) = (char *(*)(long)) 0 ;
  char *(*arg11)(long) = (char *(*)(long)) 0 ;
  void (*arg12)(long,char const *) = (void (*)(long,char const *)) 0 ;
  tc_strings (*arg13)(tc_items) = (tc_strings (*)(tc_items)) 0 ;
  tc_strings (*arg14)(tc_items) = (tc_strings (*)(tc_items)) 0 ;
  char *(*arg15)(long) = (char *(*)(long)) 0 ;
  int (*arg16)(long,char const *) = (int (*)(long,char const *)) 0 ;
  void (*arg17)() = (void (*)()) 0 ;
  void (*arg18)(char const *) = (void (*)(char const *)) 0 ;
  void (*arg19)(char const *) = (void (*)(char const *)) 0 ;
  void (*arg20)(tc_matrix) = (void (*)(tc_matrix)) 0 ;
  void (*arg21)(char const *) = (void (*)(char const *)) 0 ;
  void (*arg22)(long) = (void (*)(long)) 0 ;
  long (*arg23)(char const *,char const *) = (long (*)(char const *,char const *)) 0 ;
  long (*arg24)(tc_items,char const *,char const *) = (long (*)(tc_items,char const *,char const *)) 0 ;
  tc_items (*arg25)(long) = (tc_items (*)(long)) 0 ;
  tc_items (*arg26)(long) = (tc_items (*)(long)) 0 ;
  double (*arg27)(long) = (double (*)(long)) 0 ;
  double (*arg28)(long) = (double (*)(long)) 0 ;
  tc_matrix (*arg29)(tc_items) = (tc_matrix (*)(tc_items)) 0 ;
  void (*arg30)(long,double,double) = (void (*)(long,double,double)) 0 ;
  void (*arg31)(tc_items,tc_matrix) = (void (*)(tc_items,tc_matrix)) 0 ;
  void (*arg32)(double,double) = (void (*)(double,double)) 0 ;
  int (*arg33)() = (int (*)()) 0 ;
  int (*arg34)() = (int (*)()) 0 ;
  int (*arg35)() = (int (*)()) 0 ;
  char *(*arg36)() = (char *(*)()) 0 ;
  char *(*arg37)() = (char *(*)()) 0 ;
  void (*arg38)(tc_matrix,char const *,char const *) = (void (*)(tc_matrix,char const *,char const *)) 0 ;
  void (*arg39)(long,tc_matrix,char const *,void (*)(tc_matrix)) = (void (*)(long,tc_matrix,char const *,void (*)(tc_matrix))) 0 ;
  void (*arg40)(long,tc_matrix,void (*)(tc_matrix)) = (void (*)(long,tc_matrix,void (*)(tc_matrix))) 0 ;
  void (*arg41)(tc_matrix,char const *) = (void (*)(tc_matrix,char const *)) 0 ;
  void (*arg42)(char const *,int,int,tc_strings) = (void (*)(char const *,int,int,tc_strings)) 0 ;
  void (*arg43)(char const *,int,int) = (void (*)(char const *,int,int)) 0 ;
  void (*arg44)(char const *) = (void (*)(char const *)) 0 ;
  tc_items (*arg45)(long) = (tc_items (*)(long)) 0 ;
  long (*arg46)(long) = (long (*)(long)) 0 ;
  tc_matrix (*arg47)(long,char const *) = (tc_matrix (*)(long,char const *)) 0 ;
  void (*arg48)(long,char const *,tc_matrix) = (void (*)(long,char const *,tc_matrix)) 0 ;
  tc_table (*arg49)(long,char const *) = (tc_table (*)(long,char const *)) 0 ;
  void (*arg50)(long,char const *,tc_table) = (void (*)(long,char const *,tc_table)) 0 ;
  tc_strings (*arg51)(long) = (tc_strings (*)(long)) 0 ;
  tc_strings (*arg52)(long) = (tc_strings (*)(long)) 0 ;
  void (*arg53)(double) = (void (*)(double)) 0 ;
  void (*arg54)(char const *) = (void (*)(char const *)) 0 ;
  char *(*arg55)(char const *) = (char *(*)(char const *)) 0 ;
  int (*arg56)(char const *,tc_strings,char const *) = (int (*)(char const *,tc_strings,char const *)) 0 ;
  double (*arg57)(char const *) = (double (*)(char const *)) 0 ;
  tc_matrix (*arg58)(tc_strings) = (tc_matrix (*)(tc_strings)) 0 ;
  char *(*arg59)() = (char *(*)()) 0 ;
  int (*arg60)(char const *) = (int (*)(char const *)) 0 ;
  void (*arg61)(char const *) = (void (*)(char const *)) 0 ;
  void (*arg62)(char const *) = (void (*)(char const *)) 0 ;
  void (*arg63)(char const *) = (void (*)(char const *)) 0 ;
  void (*arg64)(long,double,double,int) = (void (*)(long,double,double,int)) 0 ;
  double (*arg65)(long) = (double (*)(long)) 0 ;
  double (*arg66)(long) = (double (*)(long)) 0 ;
  void (*arg67)(long,double,int) = (void (*)(long,double,int)) 0 ;
  char *(*arg68)(long) = (char *(*)(long)) 0 ;
  void (*arg69)(long,char const *,int) = (void (*)(long,char const *,int)) 0 ;
  void (*arg70)(long,char const *) = (void (*)(long,char const *)) 0 ;
  void (*arg71)(long,char const *) = (void (*)(long,char const *)) 0 ;
  void (*arg72)(char const *,int,int) = (void (*)(char const *,int,int)) 0 ;
  int (*arg73)() = (int (*)()) 0 ;
  int (*arg74)() = (int (*)()) 0 ;
  int (*arg75)() = (int (*)()) 0 ;
  int (*arg76)() = (int (*)()) 0 ;
  char *(*arg77)() = (char *(*)()) 0 ;
  void (*arg78)(char const *,double,double) = (void (*)(char const *,double,double)) 0 ;
  void (*arg79)(tc_matrix) = (void (*)(tc_matrix)) 0 ;
  void (*arg80)(char const *,double) = (void (*)(char const *,double)) 0 ;
  void (*arg81)(tc_table) = (void (*)(tc_table)) 0 ;
  void (*arg82)(char const *,char const *) = (void (*)(char const *,char const *)) 0 ;
  double (*arg83)(char const *) = (double (*)(char const *)) 0 ;
  char *(*arg84)(char const *) = (char *(*)(char const *)) 0 ;
  tc_matrix (*arg85)(char const *) = (tc_matrix (*)(char const *)) 0 ;
  tc_table (*arg86)(char const *) = (tc_table (*)(char const *)) 0 ;
  void (*arg87)() = (void (*)()) 0 ;
  double (*arg88)(long,long,int) = (double (*)(long,long,int)) 0 ;
  double (*arg89)(long,long,int) = (double (*)(long,long,int)) 0 ;
  void (*arg90)(long,long,int,double,double) = (void (*)(long,long,int,double,double)) 0 ;
  void (*arg91)(long,double,double) = (void (*)(long,double,double)) 0 ;
  double (*arg92)(long) = (double (*)(long)) 0 ;
  double (*arg93)(long) = (double (*)(long)) 0 ;
  void (*arg94)(long,int) = (void (*)(long,int)) 0 ;
  void (*arg95)(int) = (void (*)(int)) 0 ;
  void (*arg96)(long,double,int) = (void (*)(long,double,int)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(tc_allItems0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_allItems0, (void**)(&arg1), SWIGTYPE_p_f___tc_items, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "1"" of type '" "tc_items (*)()""'"); 
      }
    }
  } else {
    arg1 = _p_f___tc_items;
    R_SWIG_pushCallbackFunctionData(tc_allItems0, NULL);
  }
  if(TYPEOF(tc_selectedItems0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_selectedItems0, (void**)(&arg2), SWIGTYPE_p_f___tc_items, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "2"" of type '" "tc_items (*)()""'"); 
      }
    }
  } else {
    arg2 = _p_f___tc_items;
    R_SWIG_pushCallbackFunctionData(tc_selectedItems0, NULL);
  }
  if(TYPEOF(tc_itemsOfFamily0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_itemsOfFamily0, (void**)(&arg3), SWIGTYPE_p_f_p_q_const__char__tc_items, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "3"" of type '" "tc_items (*)(char const *)""'"); 
      }
    }
  } else {
    arg3 = _p_f_p_q_const__char__tc_items;
    R_SWIG_pushCallbackFunctionData(tc_itemsOfFamily0, NULL);
  }
  if(TYPEOF(tc_itemsOfFamily1) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_itemsOfFamily1, (void**)(&arg4), SWIGTYPE_p_f_p_q_const__char_tc_items__tc_items, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "4"" of type '" "tc_items (*)(char const *,tc_items)""'"); 
      }
    }
  } else {
    arg4 = _p_f_p_q_const__char_tc_items__tc_items;
    R_SWIG_pushCallbackFunctionData(tc_itemsOfFamily1, NULL);
  }
  if(TYPEOF(tc_find0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_find0, (void**)(&arg5), SWIGTYPE_p_f_p_q_const__char__long, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "5"" of type '" "long (*)(char const *)""'"); 
      }
    }
  } else {
    arg5 = _p_f_p_q_const__char__long;
    R_SWIG_pushCallbackFunctionData(tc_find0, NULL);
  }
  if(TYPEOF(tc_findItems0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_findItems0, (void**)(&arg6), SWIGTYPE_p_f_tc_strings__tc_items, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "6"" of type '" "tc_items (*)(tc_strings)""'"); 
      }
    }
  } else {
    arg6 = _p_f_tc_strings__tc_items;
    R_SWIG_pushCallbackFunctionData(tc_findItems0, NULL);
  }
  if(TYPEOF(tc_findItemsUsingRegexp0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_findItemsUsingRegexp0, (void**)(&arg7), SWIGTYPE_p_f_p_q_const__char__tc_items, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "7"" of type '" "tc_items (*)(char const *)""'"); 
      }
    }
  } else {
    arg7 = _p_f_p_q_const__char__tc_items;
    R_SWIG_pushCallbackFunctionData(tc_findItemsUsingRegexp0, NULL);
  }
  if(TYPEOF(tc_select0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_select0, (void**)(&arg8), SWIGTYPE_p_f_long__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "8"" of type '" "void (*)(long)""'"); 
      }
    }
  } else {
    arg8 = _p_f_long__void;
    R_SWIG_pushCallbackFunctionData(tc_select0, NULL);
  }
  if(TYPEOF(tc_deselect0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_deselect0, (void**)(&arg9), SWIGTYPE_p_f___void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "9"" of type '" "void (*)()""'"); 
      }
    }
  } else {
    arg9 = _p_f___void;
    R_SWIG_pushCallbackFunctionData(tc_deselect0, NULL);
  }
  if(TYPEOF(tc_getName0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_getName0, (void**)(&arg10), SWIGTYPE_p_f_long__p_char, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "10"" of type '" "char const *(*)(long)""'"); 
      }
    }
  } else {
    arg10 = _p_f_long__p_char;
    R_SWIG_pushCallbackFunctionData(tc_getName0, NULL);
  }
  if(TYPEOF(tc_getUniqueName0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_getUniqueName0, (void**)(&arg11), SWIGTYPE_p_f_long__p_char, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "11"" of type '" "char const *(*)(long)""'"); 
      }
    }
  } else {
    arg11 = _p_f_long__p_char;
    R_SWIG_pushCallbackFunctionData(tc_getUniqueName0, NULL);
  }
  if(TYPEOF(tc_setName0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_setName0, (void**)(&arg12), SWIGTYPE_p_f_long_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "12"" of type '" "void (*)(long,char const *)""'"); 
      }
    }
  } else {
    arg12 = _p_f_long_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(tc_setName0, NULL);
  }
  if(TYPEOF(tc_getNames0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_getNames0, (void**)(&arg13), SWIGTYPE_p_f_tc_items__tc_strings, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "13"" of type '" "tc_strings (*)(tc_items)""'"); 
      }
    }
  } else {
    arg13 = _p_f_tc_items__tc_strings;
    R_SWIG_pushCallbackFunctionData(tc_getNames0, NULL);
  }
  if(TYPEOF(tc_getUniqueNames0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_getUniqueNames0, (void**)(&arg14), SWIGTYPE_p_f_tc_items__tc_strings, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "14"" of type '" "tc_strings (*)(tc_items)""'"); 
      }
    }
  } else {
    arg14 = _p_f_tc_items__tc_strings;
    R_SWIG_pushCallbackFunctionData(tc_getUniqueNames0, NULL);
  }
  if(TYPEOF(tc_getFamily0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_getFamily0, (void**)(&arg15), SWIGTYPE_p_f_long__p_char, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "15"" of type '" "char const *(*)(long)""'"); 
      }
    }
  } else {
    arg15 = _p_f_long__p_char;
    R_SWIG_pushCallbackFunctionData(tc_getFamily0, NULL);
  }
  if(TYPEOF(tc_isA0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_isA0, (void**)(&arg16), SWIGTYPE_p_f_long_p_q_const__char__int, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "16"" of type '" "int (*)(long,char const *)""'"); 
      }
    }
  } else {
    arg16 = _p_f_long_p_q_const__char__int;
    R_SWIG_pushCallbackFunctionData(tc_isA0, NULL);
  }
  if(TYPEOF(tc_clearText) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_clearText, (void**)(&arg17), SWIGTYPE_p_f___void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "17"" of type '" "void (*)()""'"); 
      }
    }
  } else {
    arg17 = _p_f___void;
    R_SWIG_pushCallbackFunctionData(tc_clearText, NULL);
  }
  if(TYPEOF(tc_outputText0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_outputText0, (void**)(&arg18), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "18"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg18 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(tc_outputText0, NULL);
  }
  if(TYPEOF(tc_errorReport0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_errorReport0, (void**)(&arg19), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "19"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg19 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(tc_errorReport0, NULL);
  }
  if(TYPEOF(tc_outputTable0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_outputTable0, (void**)(&arg20), SWIGTYPE_p_f_tc_matrix__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "20"" of type '" "void (*)(tc_matrix)""'"); 
      }
    }
  } else {
    arg20 = _p_f_tc_matrix__void;
    R_SWIG_pushCallbackFunctionData(tc_outputTable0, NULL);
  }
  if(TYPEOF(tc_printFile0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_printFile0, (void**)(&arg21), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "21"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg21 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(tc_printFile0, NULL);
  }
  if(TYPEOF(tc_removeItem0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_removeItem0, (void**)(&arg22), SWIGTYPE_p_f_long__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "22"" of type '" "void (*)(long)""'"); 
      }
    }
  } else {
    arg22 = _p_f_long__void;
    R_SWIG_pushCallbackFunctionData(tc_removeItem0, NULL);
  }
  if(TYPEOF(insertItem) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(insertItem, (void**)(&arg23), SWIGTYPE_p_f_p_q_const__char_p_q_const__char__long, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "23"" of type '" "long (*)(char const *,char const *)""'"); 
      }
    }
  } else {
    arg23 = _p_f_p_q_const__char_p_q_const__char__long;
    R_SWIG_pushCallbackFunctionData(insertItem, NULL);
  }
  if(TYPEOF(insertConnection) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(insertConnection, (void**)(&arg24), SWIGTYPE_p_f_tc_items_p_q_const__char_p_q_const__char__long, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "24"" of type '" "long (*)(tc_items,char const *,char const *)""'"); 
      }
    }
  } else {
    arg24 = _p_f_tc_items_p_q_const__char_p_q_const__char__long;
    R_SWIG_pushCallbackFunctionData(insertConnection, NULL);
  }
  if(TYPEOF(getConnectedParts) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getConnectedParts, (void**)(&arg25), SWIGTYPE_p_f_long__tc_items, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "25"" of type '" "tc_items (*)(long)""'"); 
      }
    }
  } else {
    arg25 = _p_f_long__tc_items;
    R_SWIG_pushCallbackFunctionData(getConnectedParts, NULL);
  }
  if(TYPEOF(getConnections) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getConnections, (void**)(&arg26), SWIGTYPE_p_f_long__tc_items, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "26"" of type '" "tc_items (*)(long)""'"); 
      }
    }
  } else {
    arg26 = _p_f_long__tc_items;
    R_SWIG_pushCallbackFunctionData(getConnections, NULL);
  }
  if(TYPEOF(tc_getY0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_getY0, (void**)(&arg27), SWIGTYPE_p_f_long__double, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "27"" of type '" "double (*)(long)""'"); 
      }
    }
  } else {
    arg27 = _p_f_long__double;
    R_SWIG_pushCallbackFunctionData(tc_getY0, NULL);
  }
  if(TYPEOF(tc_getX0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_getX0, (void**)(&arg28), SWIGTYPE_p_f_long__double, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "28"" of type '" "double (*)(long)""'"); 
      }
    }
  } else {
    arg28 = _p_f_long__double;
    R_SWIG_pushCallbackFunctionData(tc_getX0, NULL);
  }
  if(TYPEOF(tc_getPos0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_getPos0, (void**)(&arg29), SWIGTYPE_p_f_tc_items__tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "29"" of type '" "tc_matrix (*)(tc_items)""'"); 
      }
    }
  } else {
    arg29 = _p_f_tc_items__tc_matrix;
    R_SWIG_pushCallbackFunctionData(tc_getPos0, NULL);
  }
  if(TYPEOF(tc_setPos0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_setPos0, (void**)(&arg30), SWIGTYPE_p_f_long_double_double__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "30"" of type '" "void (*)(long,double,double)""'"); 
      }
    }
  } else {
    arg30 = _p_f_long_double_double__void;
    R_SWIG_pushCallbackFunctionData(tc_setPos0, NULL);
  }
  if(TYPEOF(tc_setPos1) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_setPos1, (void**)(&arg31), SWIGTYPE_p_f_tc_items_tc_matrix__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "31"" of type '" "void (*)(tc_items,tc_matrix)""'"); 
      }
    }
  } else {
    arg31 = _p_f_tc_items_tc_matrix__void;
    R_SWIG_pushCallbackFunctionData(tc_setPos1, NULL);
  }
  if(TYPEOF(tc_moveSelected0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_moveSelected0, (void**)(&arg32), SWIGTYPE_p_f_double_double__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "32"" of type '" "void (*)(double,double)""'"); 
      }
    }
  } else {
    arg32 = _p_f_double_double__void;
    R_SWIG_pushCallbackFunctionData(tc_moveSelected0, NULL);
  }
  if(TYPEOF(tc_isWindows0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_isWindows0, (void**)(&arg33), SWIGTYPE_p_f___int, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "33"" of type '" "int (*)()""'"); 
      }
    }
  } else {
    arg33 = _p_f___int;
    R_SWIG_pushCallbackFunctionData(tc_isWindows0, NULL);
  }
  if(TYPEOF(tc_isMac0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_isMac0, (void**)(&arg34), SWIGTYPE_p_f___int, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "34"" of type '" "int (*)()""'"); 
      }
    }
  } else {
    arg34 = _p_f___int;
    R_SWIG_pushCallbackFunctionData(tc_isMac0, NULL);
  }
  if(TYPEOF(tc_isLinux0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_isLinux0, (void**)(&arg35), SWIGTYPE_p_f___int, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "35"" of type '" "int (*)()""'"); 
      }
    }
  } else {
    arg35 = _p_f___int;
    R_SWIG_pushCallbackFunctionData(tc_isLinux0, NULL);
  }
  if(TYPEOF(tc_appDir0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_appDir0, (void**)(&arg36), SWIGTYPE_p_f___p_char, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "36"" of type '" "char const *(*)()""'"); 
      }
    }
  } else {
    arg36 = _p_f___p_char;
    R_SWIG_pushCallbackFunctionData(tc_appDir0, NULL);
  }
  if(TYPEOF(tc_homeDir0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_homeDir0, (void**)(&arg37), SWIGTYPE_p_f___p_char, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "37"" of type '" "char const *(*)()""'"); 
      }
    }
  } else {
    arg37 = _p_f___p_char;
    R_SWIG_pushCallbackFunctionData(tc_homeDir0, NULL);
  }
  if(TYPEOF(tc_createInputWindow0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_createInputWindow0, (void**)(&arg38), SWIGTYPE_p_f_tc_matrix_p_q_const__char_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "38"" of type '" "void (*)(tc_matrix,char const *,char const *)""'"); 
      }
    }
  } else {
    arg38 = _p_f_tc_matrix_p_q_const__char_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(tc_createInputWindow0, NULL);
  }
  if(TYPEOF(tc_createInputWindow1) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_createInputWindow1, (void**)(&arg39), SWIGTYPE_p_f_long_tc_matrix_p_q_const__char_p_f_tc_matrix__void__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "39"" of type '" "void (*)(long,tc_matrix,char const *,void (*)(tc_matrix))""'"); 
      }
    }
  } else {
    arg39 = _p_f_long_tc_matrix_p_q_const__char_p_f_tc_matrix__void__void;
    R_SWIG_pushCallbackFunctionData(tc_createInputWindow1, NULL);
  }
  if(TYPEOF(createSliders1) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(createSliders1, (void**)(&arg40), SWIGTYPE_p_f_long_tc_matrix_p_f_tc_matrix__void__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "40"" of type '" "void (*)(long,tc_matrix,void (*)(tc_matrix))""'"); 
      }
    }
  } else {
    arg40 = _p_f_long_tc_matrix_p_f_tc_matrix__void__void;
    R_SWIG_pushCallbackFunctionData(createSliders1, NULL);
  }
  if(TYPEOF(createSliders2) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(createSliders2, (void**)(&arg41), SWIGTYPE_p_f_tc_matrix_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "41"" of type '" "void (*)(tc_matrix,char const *)""'"); 
      }
    }
  } else {
    arg41 = _p_f_tc_matrix_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(createSliders2, NULL);
  }
  if(TYPEOF(tc_addInputWindowOptions0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_addInputWindowOptions0, (void**)(&arg42), SWIGTYPE_p_f_p_q_const__char_int_int_tc_strings__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "42"" of type '" "void (*)(char const *,int,int,tc_strings)""'"); 
      }
    }
  } else {
    arg42 = _p_f_p_q_const__char_int_int_tc_strings__void;
    R_SWIG_pushCallbackFunctionData(tc_addInputWindowOptions0, NULL);
  }
  if(TYPEOF(tc_addInputWindowCheckbox0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_addInputWindowCheckbox0, (void**)(&arg43), SWIGTYPE_p_f_p_q_const__char_int_int__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "43"" of type '" "void (*)(char const *,int,int)""'"); 
      }
    }
  } else {
    arg43 = _p_f_p_q_const__char_int_int__void;
    R_SWIG_pushCallbackFunctionData(tc_addInputWindowCheckbox0, NULL);
  }
  if(TYPEOF(tc_openNewWindow0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_openNewWindow0, (void**)(&arg44), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "44"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg44 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(tc_openNewWindow0, NULL);
  }
  if(TYPEOF(tc_getChildren0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_getChildren0, (void**)(&arg45), SWIGTYPE_p_f_long__tc_items, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "45"" of type '" "tc_items (*)(long)""'"); 
      }
    }
  } else {
    arg45 = _p_f_long__tc_items;
    R_SWIG_pushCallbackFunctionData(tc_getChildren0, NULL);
  }
  if(TYPEOF(tc_getParent0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_getParent0, (void**)(&arg46), SWIGTYPE_p_f_long__long, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "46"" of type '" "long (*)(long)""'"); 
      }
    }
  } else {
    arg46 = _p_f_long__long;
    R_SWIG_pushCallbackFunctionData(tc_getParent0, NULL);
  }
  if(TYPEOF(tc_getNumericalData0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_getNumericalData0, (void**)(&arg47), SWIGTYPE_p_f_long_p_q_const__char__tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "47"" of type '" "tc_matrix (*)(long,char const *)""'"); 
      }
    }
  } else {
    arg47 = _p_f_long_p_q_const__char__tc_matrix;
    R_SWIG_pushCallbackFunctionData(tc_getNumericalData0, NULL);
  }
  if(TYPEOF(tc_setNumericalData0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_setNumericalData0, (void**)(&arg48), SWIGTYPE_p_f_long_p_q_const__char_tc_matrix__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "48"" of type '" "void (*)(long,char const *,tc_matrix)""'"); 
      }
    }
  } else {
    arg48 = _p_f_long_p_q_const__char_tc_matrix__void;
    R_SWIG_pushCallbackFunctionData(tc_setNumericalData0, NULL);
  }
  if(TYPEOF(tc_getTextData0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_getTextData0, (void**)(&arg49), SWIGTYPE_p_f_long_p_q_const__char__tc_table, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "49"" of type '" "tc_table (*)(long,char const *)""'"); 
      }
    }
  } else {
    arg49 = _p_f_long_p_q_const__char__tc_table;
    R_SWIG_pushCallbackFunctionData(tc_getTextData0, NULL);
  }
  if(TYPEOF(tc_setTextData0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_setTextData0, (void**)(&arg50), SWIGTYPE_p_f_long_p_q_const__char_tc_table__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "50"" of type '" "void (*)(long,char const *,tc_table)""'"); 
      }
    }
  } else {
    arg50 = _p_f_long_p_q_const__char_tc_table__void;
    R_SWIG_pushCallbackFunctionData(tc_setTextData0, NULL);
  }
  if(TYPEOF(tc_getNumericalDataNames0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_getNumericalDataNames0, (void**)(&arg51), SWIGTYPE_p_f_long__tc_strings, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "51"" of type '" "tc_strings (*)(long)""'"); 
      }
    }
  } else {
    arg51 = _p_f_long__tc_strings;
    R_SWIG_pushCallbackFunctionData(tc_getNumericalDataNames0, NULL);
  }
  if(TYPEOF(tc_getTextDataNames0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_getTextDataNames0, (void**)(&arg52), SWIGTYPE_p_f_long__tc_strings, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "52"" of type '" "tc_strings (*)(long)""'"); 
      }
    }
  } else {
    arg52 = _p_f_long__tc_strings;
    R_SWIG_pushCallbackFunctionData(tc_getTextDataNames0, NULL);
  }
  if(TYPEOF(tc_zoom0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_zoom0, (void**)(&arg53), SWIGTYPE_p_f_double__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "53"" of type '" "void (*)(double)""'"); 
      }
    }
  } else {
    arg53 = _p_f_double__void;
    R_SWIG_pushCallbackFunctionData(tc_zoom0, NULL);
  }
  if(TYPEOF(tc_viewWindow0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_viewWindow0, (void**)(&arg54), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "54"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg54 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(tc_viewWindow0, NULL);
  }
  if(TYPEOF(tc_getStringDialog0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_getStringDialog0, (void**)(&arg55), SWIGTYPE_p_f_p_q_const__char__p_char, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "55"" of type '" "char const *(*)(char const *)""'"); 
      }
    }
  } else {
    arg55 = _p_f_p_q_const__char__p_char;
    R_SWIG_pushCallbackFunctionData(tc_getStringDialog0, NULL);
  }
  if(TYPEOF(getSelectedString) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getSelectedString, (void**)(&arg56), SWIGTYPE_p_f_p_q_const__char_tc_strings_p_q_const__char__int, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "56"" of type '" "int (*)(char const *,tc_strings,char const *)""'"); 
      }
    }
  } else {
    arg56 = _p_f_p_q_const__char_tc_strings_p_q_const__char__int;
    R_SWIG_pushCallbackFunctionData(getSelectedString, NULL);
  }
  if(TYPEOF(getNumber) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getNumber, (void**)(&arg57), SWIGTYPE_p_f_p_q_const__char__double, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "57"" of type '" "double (*)(char const *)""'"); 
      }
    }
  } else {
    arg57 = _p_f_p_q_const__char__double;
    R_SWIG_pushCallbackFunctionData(getNumber, NULL);
  }
  if(TYPEOF(getNumbers) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getNumbers, (void**)(&arg58), SWIGTYPE_p_f_tc_strings__tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "58"" of type '" "tc_matrix (*)(tc_strings)""'"); 
      }
    }
  } else {
    arg58 = _p_f_tc_strings__tc_matrix;
    R_SWIG_pushCallbackFunctionData(getNumbers, NULL);
  }
  if(TYPEOF(getFilename) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getFilename, (void**)(&arg59), SWIGTYPE_p_f___p_char, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "59"" of type '" "char const *(*)()""'"); 
      }
    }
  } else {
    arg59 = _p_f___p_char;
    R_SWIG_pushCallbackFunctionData(getFilename, NULL);
  }
  if(TYPEOF(askQuestion) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(askQuestion, (void**)(&arg60), SWIGTYPE_p_f_p_q_const__char__int, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "60"" of type '" "int (*)(char const *)""'"); 
      }
    }
  } else {
    arg60 = _p_f_p_q_const__char__int;
    R_SWIG_pushCallbackFunctionData(askQuestion, NULL);
  }
  if(TYPEOF(messageDialog) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(messageDialog, (void**)(&arg61), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "61"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg61 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(messageDialog, NULL);
  }
  if(TYPEOF(openFile) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(openFile, (void**)(&arg62), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "62"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg62 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(openFile, NULL);
  }
  if(TYPEOF(saveToFile) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(saveToFile, (void**)(&arg63), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "63"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg63 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(saveToFile, NULL);
  }
  if(TYPEOF(setSize0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(setSize0, (void**)(&arg64), SWIGTYPE_p_f_long_double_double_int__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "64"" of type '" "void (*)(long,double,double,int)""'"); 
      }
    }
  } else {
    arg64 = _p_f_long_double_double_int__void;
    R_SWIG_pushCallbackFunctionData(setSize0, NULL);
  }
  if(TYPEOF(getWidth0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getWidth0, (void**)(&arg65), SWIGTYPE_p_f_long__double, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "65"" of type '" "double (*)(long)""'"); 
      }
    }
  } else {
    arg65 = _p_f_long__double;
    R_SWIG_pushCallbackFunctionData(getWidth0, NULL);
  }
  if(TYPEOF(getHeight0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getHeight0, (void**)(&arg66), SWIGTYPE_p_f_long__double, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "66"" of type '" "double (*)(long)""'"); 
      }
    }
  } else {
    arg66 = _p_f_long__double;
    R_SWIG_pushCallbackFunctionData(getHeight0, NULL);
  }
  if(TYPEOF(setAngle0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(setAngle0, (void**)(&arg67), SWIGTYPE_p_f_long_double_int__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "67"" of type '" "void (*)(long,double,int)""'"); 
      }
    }
  } else {
    arg67 = _p_f_long_double_int__void;
    R_SWIG_pushCallbackFunctionData(setAngle0, NULL);
  }
  if(TYPEOF(getColor) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getColor, (void**)(&arg68), SWIGTYPE_p_f_long__p_char, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "68"" of type '" "char const *(*)(long)""'"); 
      }
    }
  } else {
    arg68 = _p_f_long__p_char;
    R_SWIG_pushCallbackFunctionData(getColor, NULL);
  }
  if(TYPEOF(setColor0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(setColor0, (void**)(&arg69), SWIGTYPE_p_f_long_p_q_const__char_int__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "69"" of type '" "void (*)(long,char const *,int)""'"); 
      }
    }
  } else {
    arg69 = _p_f_long_p_q_const__char_int__void;
    R_SWIG_pushCallbackFunctionData(setColor0, NULL);
  }
  if(TYPEOF(changeGraphics0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(changeGraphics0, (void**)(&arg70), SWIGTYPE_p_f_long_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "70"" of type '" "void (*)(long,char const *)""'"); 
      }
    }
  } else {
    arg70 = _p_f_long_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(changeGraphics0, NULL);
  }
  if(TYPEOF(changeArrowHead0) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(changeArrowHead0, (void**)(&arg71), SWIGTYPE_p_f_long_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "71"" of type '" "void (*)(long,char const *)""'"); 
      }
    }
  } else {
    arg71 = _p_f_long_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(changeArrowHead0, NULL);
  }
  if(TYPEOF(screenshot) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(screenshot, (void**)(&arg72), SWIGTYPE_p_f_p_q_const__char_int_int__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "72"" of type '" "void (*)(char const *,int,int)""'"); 
      }
    }
  } else {
    arg72 = _p_f_p_q_const__char_int_int__void;
    R_SWIG_pushCallbackFunctionData(screenshot, NULL);
  }
  if(TYPEOF(screenHeight) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(screenHeight, (void**)(&arg73), SWIGTYPE_p_f___int, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "73"" of type '" "int (*)()""'"); 
      }
    }
  } else {
    arg73 = _p_f___int;
    R_SWIG_pushCallbackFunctionData(screenHeight, NULL);
  }
  if(TYPEOF(screenWidth) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(screenWidth, (void**)(&arg74), SWIGTYPE_p_f___int, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "74"" of type '" "int (*)()""'"); 
      }
    }
  } else {
    arg74 = _p_f___int;
    R_SWIG_pushCallbackFunctionData(screenWidth, NULL);
  }
  if(TYPEOF(screenX) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(screenX, (void**)(&arg75), SWIGTYPE_p_f___int, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "75"" of type '" "int (*)()""'"); 
      }
    }
  } else {
    arg75 = _p_f___int;
    R_SWIG_pushCallbackFunctionData(screenX, NULL);
  }
  if(TYPEOF(screenY) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(screenY, (void**)(&arg76), SWIGTYPE_p_f___int, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "76"" of type '" "int (*)()""'"); 
      }
    }
  } else {
    arg76 = _p_f___int;
    R_SWIG_pushCallbackFunctionData(screenY, NULL);
  }
  if(TYPEOF(annotations) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(annotations, (void**)(&arg77), SWIGTYPE_p_f___p_char, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "77"" of type '" "char const *(*)()""'"); 
      }
    }
  } else {
    arg77 = _p_f___p_char;
    R_SWIG_pushCallbackFunctionData(annotations, NULL);
  }
  if(TYPEOF(insertAnnotations) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(insertAnnotations, (void**)(&arg78), SWIGTYPE_p_f_p_q_const__char_double_double__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "78"" of type '" "void (*)(char const *,double,double)""'"); 
      }
    }
  } else {
    arg78 = _p_f_p_q_const__char_double_double__void;
    R_SWIG_pushCallbackFunctionData(insertAnnotations, NULL);
  }
  if(TYPEOF(setNumericalValues) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(setNumericalValues, (void**)(&arg79), SWIGTYPE_p_f_tc_matrix__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "79"" of type '" "void (*)(tc_matrix)""'"); 
      }
    }
  } else {
    arg79 = _p_f_tc_matrix__void;
    R_SWIG_pushCallbackFunctionData(setNumericalValues, NULL);
  }
  if(TYPEOF(setNumericalValue) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(setNumericalValue, (void**)(&arg80), SWIGTYPE_p_f_p_q_const__char_double__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "80"" of type '" "void (*)(char const *,double)""'"); 
      }
    }
  } else {
    arg80 = _p_f_p_q_const__char_double__void;
    R_SWIG_pushCallbackFunctionData(setNumericalValue, NULL);
  }
  if(TYPEOF(setTextValues) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(setTextValues, (void**)(&arg81), SWIGTYPE_p_f_tc_table__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "81"" of type '" "void (*)(tc_table)""'"); 
      }
    }
  } else {
    arg81 = _p_f_tc_table__void;
    R_SWIG_pushCallbackFunctionData(setTextValues, NULL);
  }
  if(TYPEOF(setTextValue) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(setTextValue, (void**)(&arg82), SWIGTYPE_p_f_p_q_const__char_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "82"" of type '" "void (*)(char const *,char const *)""'"); 
      }
    }
  } else {
    arg82 = _p_f_p_q_const__char_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(setTextValue, NULL);
  }
  if(TYPEOF(getNumericalValue) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getNumericalValue, (void**)(&arg83), SWIGTYPE_p_f_p_q_const__char__double, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "83"" of type '" "double (*)(char const *)""'"); 
      }
    }
  } else {
    arg83 = _p_f_p_q_const__char__double;
    R_SWIG_pushCallbackFunctionData(getNumericalValue, NULL);
  }
  if(TYPEOF(getTextValue) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getTextValue, (void**)(&arg84), SWIGTYPE_p_f_p_q_const__char__p_char, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "84"" of type '" "char const *(*)(char const *)""'"); 
      }
    }
  } else {
    arg84 = _p_f_p_q_const__char__p_char;
    R_SWIG_pushCallbackFunctionData(getTextValue, NULL);
  }
  if(TYPEOF(getNumericalValueUsingRegexp) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getNumericalValueUsingRegexp, (void**)(&arg85), SWIGTYPE_p_f_p_q_const__char__tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "85"" of type '" "tc_matrix (*)(char const *)""'"); 
      }
    }
  } else {
    arg85 = _p_f_p_q_const__char__tc_matrix;
    R_SWIG_pushCallbackFunctionData(getNumericalValueUsingRegexp, NULL);
  }
  if(TYPEOF(getTextValueUsingRegexp) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getTextValueUsingRegexp, (void**)(&arg86), SWIGTYPE_p_f_p_q_const__char__tc_table, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "86"" of type '" "tc_table (*)(char const *)""'"); 
      }
    }
  } else {
    arg86 = _p_f_p_q_const__char__tc_table;
    R_SWIG_pushCallbackFunctionData(getTextValueUsingRegexp, NULL);
  }
  if(TYPEOF(openUrl) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(openUrl, (void**)(&arg87), SWIGTYPE_p_f___void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "87"" of type '" "void (*)()""'"); 
      }
    }
  } else {
    arg87 = _p_f___void;
    R_SWIG_pushCallbackFunctionData(openUrl, NULL);
  }
  if(TYPEOF(getControlPointX) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getControlPointX, (void**)(&arg88), SWIGTYPE_p_f_long_long_int__double, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "88"" of type '" "double (*)(long,long,int)""'"); 
      }
    }
  } else {
    arg88 = _p_f_long_long_int__double;
    R_SWIG_pushCallbackFunctionData(getControlPointX, NULL);
  }
  if(TYPEOF(getControlPointY) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getControlPointY, (void**)(&arg89), SWIGTYPE_p_f_long_long_int__double, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "89"" of type '" "double (*)(long,long,int)""'"); 
      }
    }
  } else {
    arg89 = _p_f_long_long_int__double;
    R_SWIG_pushCallbackFunctionData(getControlPointY, NULL);
  }
  if(TYPEOF(setControlPoint) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(setControlPoint, (void**)(&arg90), SWIGTYPE_p_f_long_long_int_double_double__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "90"" of type '" "void (*)(long,long,int,double,double)""'"); 
      }
    }
  } else {
    arg90 = _p_f_long_long_int_double_double__void;
    R_SWIG_pushCallbackFunctionData(setControlPoint, NULL);
  }
  if(TYPEOF(setCenterPoint) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(setCenterPoint, (void**)(&arg91), SWIGTYPE_p_f_long_double_double__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "91"" of type '" "void (*)(long,double,double)""'"); 
      }
    }
  } else {
    arg91 = _p_f_long_double_double__void;
    R_SWIG_pushCallbackFunctionData(setCenterPoint, NULL);
  }
  if(TYPEOF(getCenterPointX) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getCenterPointX, (void**)(&arg92), SWIGTYPE_p_f_long__double, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "92"" of type '" "double (*)(long)""'"); 
      }
    }
  } else {
    arg92 = _p_f_long__double;
    R_SWIG_pushCallbackFunctionData(getCenterPointX, NULL);
  }
  if(TYPEOF(getCenterPointY) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getCenterPointY, (void**)(&arg93), SWIGTYPE_p_f_long__double, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "93"" of type '" "double (*)(long)""'"); 
      }
    }
  } else {
    arg93 = _p_f_long__double;
    R_SWIG_pushCallbackFunctionData(getCenterPointY, NULL);
  }
  if(TYPEOF(setStraight) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(setStraight, (void**)(&arg94), SWIGTYPE_p_f_long_int__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "94"" of type '" "void (*)(long,int)""'"); 
      }
    }
  } else {
    arg94 = _p_f_long_int__void;
    R_SWIG_pushCallbackFunctionData(setStraight, NULL);
  }
  if(TYPEOF(setAllStraight) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(setAllStraight, (void**)(&arg95), SWIGTYPE_p_f_int__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "95"" of type '" "void (*)(int)""'"); 
      }
    }
  } else {
    arg95 = _p_f_int__void;
    R_SWIG_pushCallbackFunctionData(setAllStraight, NULL);
  }
  if(TYPEOF(setLineWidth) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(setLineWidth, (void**)(&arg96), SWIGTYPE_p_f_long_double_int__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_Main_api_initialize" "', argument " "96"" of type '" "void (*)(long,double,int)""'"); 
      }
    }
  } else {
    arg96 = _p_f_long_double_int__void;
    R_SWIG_pushCallbackFunctionData(setLineWidth, NULL);
  }
  tc_Main_api_initialize(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,(char const *(*)(long))arg10,(char const *(*)(long))arg11,arg12,arg13,arg14,(char const *(*)(long))arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22,arg23,arg24,arg25,arg26,arg27,arg28,arg29,arg30,arg31,arg32,arg33,arg34,arg35,(char const *(*)())arg36,(char const *(*)())arg37,arg38,arg39,arg40,arg41,arg42,arg43,arg44,arg45,arg46,arg47,arg48,arg49,arg50,arg51,arg52,arg53,arg54,(char const *(*)(char const *))arg55,arg56,arg57,arg58,(char const *(*)())arg59,arg60,arg61,arg62,arg63,arg64,arg65,arg66,arg67,(char const *(*)(long))arg68,arg69,arg70,arg71,arg72,arg73,arg74,arg75,arg76,(char const *(*)())arg77,arg78,arg79,arg80,arg81,arg82,arg83,(char const *(*)(char const *))arg84,arg85,arg86,arg87,arg88,arg89,arg90,arg91,arg92,arg93,arg94,arg95,arg96);
  r_ans = R_NilValue;
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_showProgress ( SEXP title, SEXP progress)
{
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(title, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_showProgress" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  arg2 = (int)(INTEGER(progress)[0]);
  tc_showProgress((char const *)arg1,arg2);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


void _p_f_void__void(void ) {
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = R_NilValue;
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_void__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


SWIGEXPORT SEXP
R_swig_tc_callback ( SEXP f)
{
  void (*arg1)(void) = (void (*)(void)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(f) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(f, (void**)(&arg1), SWIGTYPE_p_f_void__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_callback" "', argument " "1"" of type '" "void (*)(void)""'"); 
      }
    }
  } else {
    arg1 = _p_f_void__void;
    R_SWIG_pushCallbackFunctionData(f, NULL);
  }
  tc_callback(arg1);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_callWhenExiting ( SEXP f)
{
  void (*arg1)(void) = (void (*)(void)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(f) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(f, (void**)(&arg1), SWIGTYPE_p_f_void__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_callWhenExiting" "', argument " "1"" of type '" "void (*)(void)""'"); 
      }
    }
  } else {
    arg1 = _p_f_void__void;
    R_SWIG_pushCallbackFunctionData(f, NULL);
  }
  tc_callWhenExiting(arg1);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


void _p_f_long_p_f_void__void__void(long s_arg1, void (*)(void) s_arg2) {
  long arg1 ;
  void (*arg2)(void) = (void (*)(void)) 0 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((void *)(s_arg2), SWIGTYPE_p_f_void__void, 0);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_p_f_void__void__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


SWIGEXPORT SEXP
R_swig_tc_CThread_api_initialize ( SEXP cthread, SEXP callback, SEXP callWhenExiting, SEXP showProgress)
{
  long arg1 ;
  void (*arg2)(long,void (*)(void)) = (void (*)(long,void (*)(void))) 0 ;
  void (*arg3)(long,void (*)(void)) = (void (*)(long,void (*)(void))) 0 ;
  void (*arg4)(long,char const *,int) = (void (*)(long,char const *,int)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(cthread)[0]);
  if(TYPEOF(callback) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(callback, (void**)(&arg2), SWIGTYPE_p_f_long_p_f_void__void__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_CThread_api_initialize" "', argument " "2"" of type '" "void (*)(long,void (*)(void))""'"); 
      }
    }
  } else {
    arg2 = _p_f_long_p_f_void__void__void;
    R_SWIG_pushCallbackFunctionData(callback, NULL);
  }
  if(TYPEOF(callWhenExiting) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(callWhenExiting, (void**)(&arg3), SWIGTYPE_p_f_long_p_f_void__void__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_CThread_api_initialize" "', argument " "3"" of type '" "void (*)(long,void (*)(void))""'"); 
      }
    }
  } else {
    arg3 = _p_f_long_p_f_void__void__void;
    R_SWIG_pushCallbackFunctionData(callWhenExiting, NULL);
  }
  if(TYPEOF(showProgress) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(showProgress, (void**)(&arg4), SWIGTYPE_p_f_long_p_q_const__char_int__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_CThread_api_initialize" "', argument " "4"" of type '" "void (*)(long,char const *,int)""'"); 
      }
    }
  } else {
    arg4 = _p_f_long_p_q_const__char_int__void;
    R_SWIG_pushCallbackFunctionData(showProgress, NULL);
  }
  tc_CThread_api_initialize(arg1,arg2,arg3,arg4);
  r_ans = R_NilValue;
  
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_displayText ( SEXP item, SEXP text)
{
  long arg1 ;
  char *arg2 = (char *) 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  res2 = SWIG_AsCharPtrAndSize(text, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_displayText" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  tc_displayText(arg1,(char const *)arg2);
  r_ans = R_NilValue;
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_displayNumber ( SEXP item, SEXP number)
{
  long arg1 ;
  double arg2 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  arg2 = (double)(REAL(number)[0]);
  tc_displayNumber(arg1,arg2);
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setDisplayLabelColor ( SEXP color1, SEXP color2)
{
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(color1, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_setDisplayLabelColor" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  res2 = SWIG_AsCharPtrAndSize(color2, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_setDisplayLabelColor" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  tc_setDisplayLabelColor((char const *)arg1,(char const *)arg2);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_highlight ( SEXP item, SEXP color)
{
  long arg1 ;
  char *arg2 = (char *) 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  res2 = SWIG_AsCharPtrAndSize(color, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_highlight" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  tc_highlight(arg1,(char const *)arg2);
  r_ans = R_NilValue;
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_burn ( SEXP item, SEXP intensity)
{
  long arg1 ;
  double arg2 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  arg2 = (double)(REAL(intensity)[0]);
  tc_burn(arg1,arg2);
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setAlpha ( SEXP item, SEXP alpha)
{
  long arg1 ;
  double arg2 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  arg2 = (double)(REAL(alpha)[0]);
  tc_setAlpha(arg1,arg2);
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


void _p_f_long_double__void(long s_arg1, double s_arg2) {
  long arg1 ;
  double arg2 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg2));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_double__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


SWIGEXPORT SEXP
R_swig_tc_LabelingTool_api ( SEXP displayText, SEXP displayNumber, SEXP setDisplayLabelColor, SEXP highlight, SEXP burn, SEXP setalpha)
{
  void (*arg1)(long,char const *) = (void (*)(long,char const *)) 0 ;
  void (*arg2)(long,double) = (void (*)(long,double)) 0 ;
  void (*arg3)(char const *,char const *) = (void (*)(char const *,char const *)) 0 ;
  void (*arg4)(long,char const *) = (void (*)(long,char const *)) 0 ;
  void (*arg5)(long,double) = (void (*)(long,double)) 0 ;
  void (*arg6)(long,double) = (void (*)(long,double)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(displayText) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(displayText, (void**)(&arg1), SWIGTYPE_p_f_long_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_LabelingTool_api" "', argument " "1"" of type '" "void (*)(long,char const *)""'"); 
      }
    }
  } else {
    arg1 = _p_f_long_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(displayText, NULL);
  }
  if(TYPEOF(displayNumber) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(displayNumber, (void**)(&arg2), SWIGTYPE_p_f_long_double__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_LabelingTool_api" "', argument " "2"" of type '" "void (*)(long,double)""'"); 
      }
    }
  } else {
    arg2 = _p_f_long_double__void;
    R_SWIG_pushCallbackFunctionData(displayNumber, NULL);
  }
  if(TYPEOF(setDisplayLabelColor) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(setDisplayLabelColor, (void**)(&arg3), SWIGTYPE_p_f_p_q_const__char_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_LabelingTool_api" "', argument " "3"" of type '" "void (*)(char const *,char const *)""'"); 
      }
    }
  } else {
    arg3 = _p_f_p_q_const__char_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(setDisplayLabelColor, NULL);
  }
  if(TYPEOF(highlight) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(highlight, (void**)(&arg4), SWIGTYPE_p_f_long_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_LabelingTool_api" "', argument " "4"" of type '" "void (*)(long,char const *)""'"); 
      }
    }
  } else {
    arg4 = _p_f_long_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(highlight, NULL);
  }
  if(TYPEOF(burn) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(burn, (void**)(&arg5), SWIGTYPE_p_f_long_double__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_LabelingTool_api" "', argument " "5"" of type '" "void (*)(long,double)""'"); 
      }
    }
  } else {
    arg5 = _p_f_long_double__void;
    R_SWIG_pushCallbackFunctionData(burn, NULL);
  }
  if(TYPEOF(setalpha) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(setalpha, (void**)(&arg6), SWIGTYPE_p_f_long_double__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_LabelingTool_api" "', argument " "6"" of type '" "void (*)(long,double)""'"); 
      }
    }
  } else {
    arg6 = _p_f_long_double__void;
    R_SWIG_pushCallbackFunctionData(setalpha, NULL);
  }
  tc_LabelingTool_api(arg1,arg2,arg3,arg4,arg5,arg6);
  r_ans = R_NilValue;
  
  
  
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_ApplySpringForce ( SEXP nodes, SEXP connections, SEXP spring, SEXP charge, SEXP damping, SEXP s_swig_copy)
{
  double result;
  tc_matrix arg1 ;
  tc_matrix arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(nodes, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ApplySpringForce" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ApplySpringForce" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  {
    res2 = SWIG_R_ConvertPtr(connections, &argp2, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ApplySpringForce" "', argument " "2"" of type '" "tc_matrix""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ApplySpringForce" "', argument " "2"" of type '" "tc_matrix""'");
    } else {
      arg2 = *((tc_matrix *)(argp2));
    }
  }
  arg3 = (double)(REAL(spring)[0]);
  arg4 = (double)(REAL(charge)[0]);
  arg5 = (double)(REAL(damping)[0]);
  result = (double)ApplySpringForce(arg1,arg2,arg3,arg4,arg5);
  r_ans = SWIG_From_double((double)(result));
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getParameters ( SEXP a, SEXP s_swig_copy)
{
  tc_matrix result;
  tc_items arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(a, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getParameters" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getParameters" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  result = tc_getParameters(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getInitialValues ( SEXP a, SEXP s_swig_copy)
{
  tc_matrix result;
  tc_items arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(a, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getInitialValues" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getInitialValues" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  result = tc_getInitialValues(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setInitialValues ( SEXP items, SEXP values)
{
  tc_items arg1 ;
  tc_matrix arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(items, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_setInitialValues" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setInitialValues" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  {
    res2 = SWIG_R_ConvertPtr(values, &argp2, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_setInitialValues" "', argument " "2"" of type '" "tc_matrix""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setInitialValues" "', argument " "2"" of type '" "tc_matrix""'");
    } else {
      arg2 = *((tc_matrix *)(argp2));
    }
  }
  tc_setInitialValues(arg1,arg2);
  r_ans = R_NilValue;
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getFixedVariables ( SEXP a, SEXP s_swig_copy)
{
  tc_matrix result;
  tc_items arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(a, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getFixedVariables" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getFixedVariables" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  result = tc_getFixedVariables(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getParametersAndFixedVariables ( SEXP a, SEXP s_swig_copy)
{
  tc_matrix result;
  tc_items arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(a, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getParametersAndFixedVariables" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getParametersAndFixedVariables" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  result = tc_getParametersAndFixedVariables(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getTextAttribute ( SEXP item, SEXP attribute)
{
  char *result = 0 ;
  long arg1 ;
  char *arg2 = (char *) 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  res2 = SWIG_AsCharPtrAndSize(attribute, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_getTextAttribute" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  result = (char *)tc_getTextAttribute(arg1,(char const *)arg2);
  r_ans = SWIG_FromCharPtr((const char *)result);
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getParameter ( SEXP item, SEXP attribute, SEXP s_swig_copy)
{
  double result;
  long arg1 ;
  char *arg2 = (char *) 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  res2 = SWIG_AsCharPtrAndSize(attribute, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_getParameter" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  result = (double)tc_getParameter(arg1,(char const *)arg2);
  r_ans = SWIG_From_double((double)(result));
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getParametersNamed ( SEXP a, SEXP attibutes, SEXP s_swig_copy)
{
  tc_matrix result;
  tc_items arg1 ;
  tc_strings arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(a, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getParametersNamed" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getParametersNamed" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  {
    res2 = SWIG_R_ConvertPtr(attibutes, &argp2, SWIGTYPE_p_tc_strings,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_getParametersNamed" "', argument " "2"" of type '" "tc_strings""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getParametersNamed" "', argument " "2"" of type '" "tc_strings""'");
    } else {
      arg2 = *((tc_strings *)(argp2));
    }
  }
  result = tc_getParametersNamed(arg1,arg2);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getParametersExcept ( SEXP a, SEXP attributes, SEXP s_swig_copy)
{
  tc_matrix result;
  tc_items arg1 ;
  tc_strings arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(a, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getParametersExcept" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getParametersExcept" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  {
    res2 = SWIG_R_ConvertPtr(attributes, &argp2, SWIGTYPE_p_tc_strings,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_getParametersExcept" "', argument " "2"" of type '" "tc_strings""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getParametersExcept" "', argument " "2"" of type '" "tc_strings""'");
    } else {
      arg2 = *((tc_strings *)(argp2));
    }
  }
  result = tc_getParametersExcept(arg1,arg2);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getAllTextNamed ( SEXP a, SEXP attributes, SEXP s_swig_copy)
{
  tc_strings result;
  tc_items arg1 ;
  tc_strings arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(a, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getAllTextNamed" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getAllTextNamed" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  {
    res2 = SWIG_R_ConvertPtr(attributes, &argp2, SWIGTYPE_p_tc_strings,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_getAllTextNamed" "', argument " "2"" of type '" "tc_strings""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getAllTextNamed" "', argument " "2"" of type '" "tc_strings""'");
    } else {
      arg2 = *((tc_strings *)(argp2));
    }
  }
  result = tc_getAllTextNamed(arg1,arg2);
  r_ans = SWIG_R_NewPointerObj((tc_strings *)memcpy((tc_strings *)malloc(sizeof(tc_strings)),&result,sizeof(tc_strings)), SWIGTYPE_p_tc_strings, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setTextAttribute ( SEXP item, SEXP attribute, SEXP value)
{
  long arg1 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  res2 = SWIG_AsCharPtrAndSize(attribute, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_setTextAttribute" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_AsCharPtrAndSize(value, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tc_setTextAttribute" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = (char *)(buf3);
  tc_setTextAttribute(arg1,(char const *)arg2,(char const *)arg3);
  r_ans = R_NilValue;
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  if (alloc3 == SWIG_NEWOBJ) free((char*)buf3);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setParameter ( SEXP item, SEXP attribute, SEXP value)
{
  long arg1 ;
  char *arg2 = (char *) 0 ;
  double arg3 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  res2 = SWIG_AsCharPtrAndSize(attribute, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_setParameter" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  arg3 = (double)(REAL(value)[0]);
  tc_setParameter(arg1,(char const *)arg2,arg3);
  r_ans = R_NilValue;
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setTextAttributeByName ( SEXP attribute, SEXP value)
{
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(attribute, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_setTextAttributeByName" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_setTextAttributeByName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  tc_setTextAttributeByName((char const *)arg1,(char const *)arg2);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setParameterByName ( SEXP attribute, SEXP value)
{
  char *arg1 = (char *) 0 ;
  double arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(attribute, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_setParameterByName" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  arg2 = (double)(REAL(value)[0]);
  tc_setParameterByName((char const *)arg1,arg2);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setTextAttributes ( SEXP s_arg1)
{
  tc_table arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(s_arg1, &argp1, SWIGTYPE_p_tc_table,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_setTextAttributes" "', argument " "1"" of type '" "tc_table""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setTextAttributes" "', argument " "1"" of type '" "tc_table""'");
    } else {
      arg1 = *((tc_table *)(argp1));
    }
  }
  tc_setTextAttributes(arg1);
  r_ans = R_NilValue;
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setParameters ( SEXP parameters, SEXP permanentOrTemporary)
{
  tc_matrix arg1 ;
  int arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(parameters, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_setParameters" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setParameters" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  arg2 = (int)(INTEGER(permanentOrTemporary)[0]);
  tc_setParameters(arg1,arg2);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


char const * _p_f_long_p_q_const__char__p_char(long s_arg1, char const * s_arg2) {
  long arg1 ;
  char *arg2 = (char *) 0 ;
  char *result = 0 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  int res ;
  char *buf = 0 ;
  int alloc = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_p_q_const__char__p_char)");
  }
  res = SWIG_AsCharPtrAndSize(r_swig_cb_data->retValue, &buf, NULL, &alloc);
  if (!SWIG_IsOK(res)) {
    SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "char const *""'");
  }
  result = (char *)(buf);
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


tc_strings _p_f_tc_items_tc_strings__tc_strings(tc_items s_arg1, tc_strings s_arg2) {
  tc_items arg1 ;
  tc_strings arg2 ;
  tc_strings result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&s_arg1,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_strings *)memcpy((tc_strings *)malloc(sizeof(tc_strings)),&s_arg2,sizeof(tc_strings)), SWIGTYPE_p_tc_strings, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_tc_items_tc_strings__tc_strings)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_strings,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_strings""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_strings""'");
    } else {
      result = *((tc_strings *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


void _p_f_long_p_q_const__char_p_q_const__char__void(long s_arg1, char const * s_arg2, char const * s_arg3) {
  long arg1 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 4));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg3);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_p_q_const__char_p_q_const__char__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


SWIGEXPORT SEXP
R_swig_tc_ParametersTool_Text_api ( SEXP getTextData, SEXP getAllTextDataNamed, SEXP setTextData)
{
  char *(*arg1)(long,char const *) = (char *(*)(long,char const *)) 0 ;
  tc_strings (*arg2)(tc_items,tc_strings) = (tc_strings (*)(tc_items,tc_strings)) 0 ;
  void (*arg3)(long,char const *,char const *) = (void (*)(long,char const *,char const *)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(getTextData) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getTextData, (void**)(&arg1), SWIGTYPE_p_f_long_p_q_const__char__p_char, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_ParametersTool_Text_api" "', argument " "1"" of type '" "char const *(*)(long,char const *)""'"); 
      }
    }
  } else {
    arg1 = _p_f_long_p_q_const__char__p_char;
    R_SWIG_pushCallbackFunctionData(getTextData, NULL);
  }
  if(TYPEOF(getAllTextDataNamed) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getAllTextDataNamed, (void**)(&arg2), SWIGTYPE_p_f_tc_items_tc_strings__tc_strings, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_ParametersTool_Text_api" "', argument " "2"" of type '" "tc_strings (*)(tc_items,tc_strings)""'"); 
      }
    }
  } else {
    arg2 = _p_f_tc_items_tc_strings__tc_strings;
    R_SWIG_pushCallbackFunctionData(getAllTextDataNamed, NULL);
  }
  if(TYPEOF(setTextData) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(setTextData, (void**)(&arg3), SWIGTYPE_p_f_long_p_q_const__char_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_ParametersTool_Text_api" "', argument " "3"" of type '" "void (*)(long,char const *,char const *)""'"); 
      }
    }
  } else {
    arg3 = _p_f_long_p_q_const__char_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(setTextData, NULL);
  }
  tc_ParametersTool_Text_api((char const *(*)(long,char const *))arg1,arg2,arg3);
  r_ans = R_NilValue;
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


double _p_f_long_p_q_const__char__double(long s_arg1, char const * s_arg2) {
  long arg1 ;
  char *arg2 = (char *) 0 ;
  double result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_p_q_const__char__double)");
  }
  result = (double)(REAL(r_swig_cb_data->retValue)[0]);
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


tc_matrix _p_f_tc_items_tc_strings__tc_matrix(tc_items s_arg1, tc_strings s_arg2) {
  tc_items arg1 ;
  tc_strings arg2 ;
  tc_matrix result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&s_arg1,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_strings *)memcpy((tc_strings *)malloc(sizeof(tc_strings)),&s_arg2,sizeof(tc_strings)), SWIGTYPE_p_tc_strings, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_tc_items_tc_strings__tc_matrix)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_matrix""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_matrix""'");
    } else {
      result = *((tc_matrix *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


void _p_f_long_p_q_const__char_double__void(long s_arg1, char const * s_arg2, double s_arg3) {
  long arg1 ;
  char *arg2 = (char *) 0 ;
  double arg3 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 4));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg3));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_p_q_const__char_double__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


SWIGEXPORT SEXP
R_swig_tc_ParametersTool_Numeric_api ( SEXP getInitialValues, SEXP setInitialValues, SEXP getParameters, SEXP getFixedVariabes, SEXP getParametersAndFixedVariabes, SEXP getNumericalData, SEXP getParametersNamed, SEXP getParametersExcept, SEXP setNumericalData)
{
  tc_matrix (*arg1)(tc_items) = (tc_matrix (*)(tc_items)) 0 ;
  void (*arg2)(tc_items,tc_matrix) = (void (*)(tc_items,tc_matrix)) 0 ;
  tc_matrix (*arg3)(tc_items) = (tc_matrix (*)(tc_items)) 0 ;
  tc_matrix (*arg4)(tc_items) = (tc_matrix (*)(tc_items)) 0 ;
  tc_matrix (*arg5)(tc_items) = (tc_matrix (*)(tc_items)) 0 ;
  double (*arg6)(long,char const *) = (double (*)(long,char const *)) 0 ;
  tc_matrix (*arg7)(tc_items,tc_strings) = (tc_matrix (*)(tc_items,tc_strings)) 0 ;
  tc_matrix (*arg8)(tc_items,tc_strings) = (tc_matrix (*)(tc_items,tc_strings)) 0 ;
  void (*arg9)(long,char const *,double) = (void (*)(long,char const *,double)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(getInitialValues) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getInitialValues, (void**)(&arg1), SWIGTYPE_p_f_tc_items__tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_ParametersTool_Numeric_api" "', argument " "1"" of type '" "tc_matrix (*)(tc_items)""'"); 
      }
    }
  } else {
    arg1 = _p_f_tc_items__tc_matrix;
    R_SWIG_pushCallbackFunctionData(getInitialValues, NULL);
  }
  if(TYPEOF(setInitialValues) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(setInitialValues, (void**)(&arg2), SWIGTYPE_p_f_tc_items_tc_matrix__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_ParametersTool_Numeric_api" "', argument " "2"" of type '" "void (*)(tc_items,tc_matrix)""'"); 
      }
    }
  } else {
    arg2 = _p_f_tc_items_tc_matrix__void;
    R_SWIG_pushCallbackFunctionData(setInitialValues, NULL);
  }
  if(TYPEOF(getParameters) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getParameters, (void**)(&arg3), SWIGTYPE_p_f_tc_items__tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_ParametersTool_Numeric_api" "', argument " "3"" of type '" "tc_matrix (*)(tc_items)""'"); 
      }
    }
  } else {
    arg3 = _p_f_tc_items__tc_matrix;
    R_SWIG_pushCallbackFunctionData(getParameters, NULL);
  }
  if(TYPEOF(getFixedVariabes) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getFixedVariabes, (void**)(&arg4), SWIGTYPE_p_f_tc_items__tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_ParametersTool_Numeric_api" "', argument " "4"" of type '" "tc_matrix (*)(tc_items)""'"); 
      }
    }
  } else {
    arg4 = _p_f_tc_items__tc_matrix;
    R_SWIG_pushCallbackFunctionData(getFixedVariabes, NULL);
  }
  if(TYPEOF(getParametersAndFixedVariabes) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getParametersAndFixedVariabes, (void**)(&arg5), SWIGTYPE_p_f_tc_items__tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_ParametersTool_Numeric_api" "', argument " "5"" of type '" "tc_matrix (*)(tc_items)""'"); 
      }
    }
  } else {
    arg5 = _p_f_tc_items__tc_matrix;
    R_SWIG_pushCallbackFunctionData(getParametersAndFixedVariabes, NULL);
  }
  if(TYPEOF(getNumericalData) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getNumericalData, (void**)(&arg6), SWIGTYPE_p_f_long_p_q_const__char__double, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_ParametersTool_Numeric_api" "', argument " "6"" of type '" "double (*)(long,char const *)""'"); 
      }
    }
  } else {
    arg6 = _p_f_long_p_q_const__char__double;
    R_SWIG_pushCallbackFunctionData(getNumericalData, NULL);
  }
  if(TYPEOF(getParametersNamed) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getParametersNamed, (void**)(&arg7), SWIGTYPE_p_f_tc_items_tc_strings__tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_ParametersTool_Numeric_api" "', argument " "7"" of type '" "tc_matrix (*)(tc_items,tc_strings)""'"); 
      }
    }
  } else {
    arg7 = _p_f_tc_items_tc_strings__tc_matrix;
    R_SWIG_pushCallbackFunctionData(getParametersNamed, NULL);
  }
  if(TYPEOF(getParametersExcept) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getParametersExcept, (void**)(&arg8), SWIGTYPE_p_f_tc_items_tc_strings__tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_ParametersTool_Numeric_api" "', argument " "8"" of type '" "tc_matrix (*)(tc_items,tc_strings)""'"); 
      }
    }
  } else {
    arg8 = _p_f_tc_items_tc_strings__tc_matrix;
    R_SWIG_pushCallbackFunctionData(getParametersExcept, NULL);
  }
  if(TYPEOF(setNumericalData) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(setNumericalData, (void**)(&arg9), SWIGTYPE_p_f_long_p_q_const__char_double__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_ParametersTool_Numeric_api" "', argument " "9"" of type '" "void (*)(long,char const *,double)""'"); 
      }
    }
  } else {
    arg9 = _p_f_long_p_q_const__char_double__void;
    R_SWIG_pushCallbackFunctionData(setNumericalData, NULL);
  }
  tc_ParametersTool_Numeric_api(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  r_ans = R_NilValue;
  
  
  
  
  
  
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getConnectedNodesWithRole ( SEXP connection, SEXP role, SEXP s_swig_copy)
{
  tc_items result;
  long arg1 ;
  char *arg2 = (char *) 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(connection)[0]);
  res2 = SWIG_AsCharPtrAndSize(role, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_getConnectedNodesWithRole" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  result = tc_getConnectedNodesWithRole(arg1,(char const *)arg2);
  r_ans = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&result,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getConnectionsWithRole ( SEXP part, SEXP role, SEXP s_swig_copy)
{
  tc_items result;
  long arg1 ;
  char *arg2 = (char *) 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(part)[0]);
  res2 = SWIG_AsCharPtrAndSize(role, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_getConnectionsWithRole" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  result = tc_getConnectionsWithRole(arg1,(char const *)arg2);
  r_ans = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&result,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


tc_items _p_f_long_p_q_const__char__tc_items(long s_arg1, char const * s_arg2) {
  long arg1 ;
  char *arg2 = (char *) 0 ;
  tc_items result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_p_q_const__char__tc_items)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_items""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_items""'");
    } else {
      result = *((tc_items *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


SWIGEXPORT SEXP
R_swig_tc_ConnectionInsertion_api ( SEXP getConnectedPartsWithRole, SEXP getConnectionsWithRole)
{
  tc_items (*arg1)(long,char const *) = (tc_items (*)(long,char const *)) 0 ;
  tc_items (*arg2)(long,char const *) = (tc_items (*)(long,char const *)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(getConnectedPartsWithRole) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getConnectedPartsWithRole, (void**)(&arg1), SWIGTYPE_p_f_long_p_q_const__char__tc_items, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_ConnectionInsertion_api" "', argument " "1"" of type '" "tc_items (*)(long,char const *)""'"); 
      }
    }
  } else {
    arg1 = _p_f_long_p_q_const__char__tc_items;
    R_SWIG_pushCallbackFunctionData(getConnectedPartsWithRole, NULL);
  }
  if(TYPEOF(getConnectionsWithRole) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getConnectionsWithRole, (void**)(&arg2), SWIGTYPE_p_f_long_p_q_const__char__tc_items, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_ConnectionInsertion_api" "', argument " "2"" of type '" "tc_items (*)(long,char const *)""'"); 
      }
    }
  } else {
    arg2 = _p_f_long_p_q_const__char__tc_items;
    R_SWIG_pushCallbackFunctionData(getConnectionsWithRole, NULL);
  }
  tc_ConnectionInsertion_api(arg1,arg2);
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_merge ( SEXP parts)
{
  tc_items arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(parts, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_merge" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_merge" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  tc_merge(arg1);
  r_ans = R_NilValue;
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_separate ( SEXP part)
{
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(part)[0]);
  tc_separate(arg1);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


void _p_f_tc_items__void(tc_items s_arg1) {
  tc_items arg1 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&s_arg1,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_tc_items__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


SWIGEXPORT SEXP
R_swig_tc_GroupHandlerTool_api ( SEXP merge, SEXP separate)
{
  void (*arg1)(tc_items) = (void (*)(tc_items)) 0 ;
  void (*arg2)(long) = (void (*)(long)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(merge) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(merge, (void**)(&arg1), SWIGTYPE_p_f_tc_items__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_GroupHandlerTool_api" "', argument " "1"" of type '" "void (*)(tc_items)""'"); 
      }
    }
  } else {
    arg1 = _p_f_tc_items__void;
    R_SWIG_pushCallbackFunctionData(merge, NULL);
  }
  if(TYPEOF(separate) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(separate, (void**)(&arg2), SWIGTYPE_p_f_long__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_GroupHandlerTool_api" "', argument " "2"" of type '" "void (*)(long)""'"); 
      }
    }
  } else {
    arg2 = _p_f_long__void;
    R_SWIG_pushCallbackFunctionData(separate, NULL);
  }
  tc_GroupHandlerTool_api(arg1,arg2);
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getStoichiometry ( SEXP A, SEXP s_swig_copy)
{
  tc_matrix result;
  tc_items arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(A, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getStoichiometry" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getStoichiometry" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  result = tc_getStoichiometry(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setStoichiometry ( SEXP A, SEXP N)
{
  tc_items arg1 ;
  tc_matrix arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(A, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_setStoichiometry" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setStoichiometry" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  {
    res2 = SWIG_R_ConvertPtr(N, &argp2, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_setStoichiometry" "', argument " "2"" of type '" "tc_matrix""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setStoichiometry" "', argument " "2"" of type '" "tc_matrix""'");
    } else {
      arg2 = *((tc_matrix *)(argp2));
    }
  }
  tc_setStoichiometry(arg1,arg2);
  r_ans = R_NilValue;
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getRates ( SEXP A, SEXP s_swig_copy)
{
  tc_strings result;
  tc_items arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(A, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getRates" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getRates" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  result = tc_getRates(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_strings *)memcpy((tc_strings *)malloc(sizeof(tc_strings)),&result,sizeof(tc_strings)), SWIGTYPE_p_tc_strings, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setRates ( SEXP A, SEXP rates)
{
  tc_items arg1 ;
  tc_strings arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(A, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_setRates" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setRates" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  {
    res2 = SWIG_R_ConvertPtr(rates, &argp2, SWIGTYPE_p_tc_strings,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_setRates" "', argument " "2"" of type '" "tc_strings""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setRates" "', argument " "2"" of type '" "tc_strings""'");
    } else {
      arg2 = *((tc_strings *)(argp2));
    }
  }
  tc_setRates(arg1,arg2);
  r_ans = R_NilValue;
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getStoichiometryFor ( SEXP x, SEXP s_swig_copy)
{
  tc_matrix result;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(x)[0]);
  result = tc_getStoichiometryFor(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getRate ( SEXP x)
{
  char *result = 0 ;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(x)[0]);
  result = (char *)tc_getRate(arg1);
  r_ans = SWIG_FromCharPtr((const char *)result);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setRate ( SEXP x, SEXP r)
{
  long arg1 ;
  char *arg2 = (char *) 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(x)[0]);
  res2 = SWIG_AsCharPtrAndSize(r, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_setRate" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  tc_setRate(arg1,(char const *)arg2);
  r_ans = R_NilValue;
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setStoichiometryFor ( SEXP x, SEXP N)
{
  long arg1 ;
  tc_matrix arg2 ;
  void *argp2 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(x)[0]);
  {
    res2 = SWIG_R_ConvertPtr(N, &argp2, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_setStoichiometryFor" "', argument " "2"" of type '" "tc_matrix""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_setStoichiometryFor" "', argument " "2"" of type '" "tc_matrix""'");
    } else {
      arg2 = *((tc_matrix *)(argp2));
    }
  }
  tc_setStoichiometryFor(arg1,arg2);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


void _p_f_tc_items_tc_strings__void(tc_items s_arg1, tc_strings s_arg2) {
  tc_items arg1 ;
  tc_strings arg2 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&s_arg1,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_strings *)memcpy((tc_strings *)malloc(sizeof(tc_strings)),&s_arg2,sizeof(tc_strings)), SWIGTYPE_p_tc_strings, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_tc_items_tc_strings__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


SWIGEXPORT SEXP
R_swig_tc_StoichiometryTool_api ( SEXP getStoichiometry, SEXP setStoichiometry, SEXP getRates, SEXP setRates)
{
  tc_matrix (*arg1)(tc_items) = (tc_matrix (*)(tc_items)) 0 ;
  void (*arg2)(tc_items,tc_matrix) = (void (*)(tc_items,tc_matrix)) 0 ;
  tc_strings (*arg3)(tc_items) = (tc_strings (*)(tc_items)) 0 ;
  void (*arg4)(tc_items,tc_strings) = (void (*)(tc_items,tc_strings)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(getStoichiometry) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getStoichiometry, (void**)(&arg1), SWIGTYPE_p_f_tc_items__tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_StoichiometryTool_api" "', argument " "1"" of type '" "tc_matrix (*)(tc_items)""'"); 
      }
    }
  } else {
    arg1 = _p_f_tc_items__tc_matrix;
    R_SWIG_pushCallbackFunctionData(getStoichiometry, NULL);
  }
  if(TYPEOF(setStoichiometry) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(setStoichiometry, (void**)(&arg2), SWIGTYPE_p_f_tc_items_tc_matrix__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_StoichiometryTool_api" "', argument " "2"" of type '" "void (*)(tc_items,tc_matrix)""'"); 
      }
    }
  } else {
    arg2 = _p_f_tc_items_tc_matrix__void;
    R_SWIG_pushCallbackFunctionData(setStoichiometry, NULL);
  }
  if(TYPEOF(getRates) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getRates, (void**)(&arg3), SWIGTYPE_p_f_tc_items__tc_strings, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_StoichiometryTool_api" "', argument " "3"" of type '" "tc_strings (*)(tc_items)""'"); 
      }
    }
  } else {
    arg3 = _p_f_tc_items__tc_strings;
    R_SWIG_pushCallbackFunctionData(getRates, NULL);
  }
  if(TYPEOF(setRates) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(setRates, (void**)(&arg4), SWIGTYPE_p_f_tc_items_tc_strings__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_StoichiometryTool_api" "', argument " "4"" of type '" "void (*)(tc_items,tc_strings)""'"); 
      }
    }
  } else {
    arg4 = _p_f_tc_items_tc_strings__void;
    R_SWIG_pushCallbackFunctionData(setRates, NULL);
  }
  tc_StoichiometryTool_api(arg1,arg2,arg3,arg4);
  r_ans = R_NilValue;
  
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_compileAndRun ( SEXP command, SEXP s_args, SEXP s_swig_copy)
{
  int result;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(command, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_compileAndRun" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  res2 = SWIG_AsCharPtrAndSize(s_args, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_compileAndRun" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  result = (int)tc_compileAndRun((char const *)arg1,(char const *)arg2);
  r_ans = Rf_ScalarInteger(result);
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_compileBuildLoad ( SEXP filename, SEXP s_arg2, SEXP title, SEXP s_swig_copy)
{
  int result;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(filename, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_compileBuildLoad" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  res2 = SWIG_AsCharPtrAndSize(s_arg2, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_compileBuildLoad" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_AsCharPtrAndSize(title, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tc_compileBuildLoad" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = (char *)(buf3);
  result = (int)tc_compileBuildLoad((char const *)arg1,(char const *)arg2,(char const *)arg3);
  r_ans = Rf_ScalarInteger(result);
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  if (alloc3 == SWIG_NEWOBJ) free((char*)buf3);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_compileBuildLoadSliders ( SEXP filename, SEXP s_arg2, SEXP title, SEXP inputs, SEXP s_swig_copy)
{
  int result;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  tc_matrix arg4 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(filename, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_compileBuildLoadSliders" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  res2 = SWIG_AsCharPtrAndSize(s_arg2, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_compileBuildLoadSliders" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_AsCharPtrAndSize(title, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tc_compileBuildLoadSliders" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = (char *)(buf3);
  {
    res4 = SWIG_R_ConvertPtr(inputs, &argp4, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "tc_compileBuildLoadSliders" "', argument " "4"" of type '" "tc_matrix""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_compileBuildLoadSliders" "', argument " "4"" of type '" "tc_matrix""'");
    } else {
      arg4 = *((tc_matrix *)(argp4));
    }
  }
  result = (int)tc_compileBuildLoadSliders((char const *)arg1,(char const *)arg2,(char const *)arg3,arg4);
  r_ans = Rf_ScalarInteger(result);
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  if (alloc3 == SWIG_NEWOBJ) free((char*)buf3);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_runPythonCode ( SEXP code)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(code, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_runPythonCode" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_runPythonCode((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_runPythonFile ( SEXP filename)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(filename, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_runPythonFile" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_runPythonFile((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_addPythonPlugin ( SEXP file, SEXP name, SEXP description, SEXP category, SEXP icon)
{
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(file, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_addPythonPlugin" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  res2 = SWIG_AsCharPtrAndSize(name, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_addPythonPlugin" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_AsCharPtrAndSize(description, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tc_addPythonPlugin" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = (char *)(buf3);
  res4 = SWIG_AsCharPtrAndSize(category, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "tc_addPythonPlugin" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = (char *)(buf4);
  res5 = SWIG_AsCharPtrAndSize(icon, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "tc_addPythonPlugin" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = (char *)(buf5);
  tc_addPythonPlugin((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  if (alloc3 == SWIG_NEWOBJ) free((char*)buf3);
  if (alloc4 == SWIG_NEWOBJ) free((char*)buf4);
  if (alloc5 == SWIG_NEWOBJ) free((char*)buf5);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_callFunction ( SEXP functionTitle)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(functionTitle, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_callFunction" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_callFunction((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_displayCode ( SEXP code)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(code, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_displayCode" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_displayCode((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_loadLibrary ( SEXP filename)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(filename, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_loadLibrary" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_loadLibrary((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


void _p_f_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char__void(char const * s_arg1, char const * s_arg2, char const * s_arg3, char const * s_arg4, char const * s_arg5) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 6));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg3);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg4);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg5);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


SWIGEXPORT SEXP
R_swig_tc_OctaveTool_api ( SEXP runOctaveCode, SEXP runOctaveFile, SEXP addOctavePlugin)
{
  void (*arg1)(char const *) = (void (*)(char const *)) 0 ;
  void (*arg2)(char const *) = (void (*)(char const *)) 0 ;
  void (*arg3)(char const *,char const *,char const *,char const *,char const *) = (void (*)(char const *,char const *,char const *,char const *,char const *)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(runOctaveCode) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(runOctaveCode, (void**)(&arg1), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_OctaveTool_api" "', argument " "1"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg1 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(runOctaveCode, NULL);
  }
  if(TYPEOF(runOctaveFile) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(runOctaveFile, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_OctaveTool_api" "', argument " "2"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg2 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(runOctaveFile, NULL);
  }
  if(TYPEOF(addOctavePlugin) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(addOctavePlugin, (void**)(&arg3), SWIGTYPE_p_f_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_OctaveTool_api" "', argument " "3"" of type '" "void (*)(char const *,char const *,char const *,char const *,char const *)""'"); 
      }
    }
  } else {
    arg3 = _p_f_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(addOctavePlugin, NULL);
  }
  tc_OctaveTool_api(arg1,arg2,arg3);
  r_ans = R_NilValue;
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_addFunction ( SEXP f, SEXP title, SEXP description, SEXP category, SEXP iconFile, SEXP target_family, SEXP show_menu, SEXP in_tool_menu, SEXP make_default)
{
  void (*arg1)() = (void (*)()) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  char *buf6 = 0 ;
  int alloc6 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(f) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(f, (void**)(&arg1), SWIGTYPE_p_f___void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_addFunction" "', argument " "1"" of type '" "void (*)()""'"); 
      }
    }
  } else {
    arg1 = _p_f___void;
    R_SWIG_pushCallbackFunctionData(f, NULL);
  }
  res2 = SWIG_AsCharPtrAndSize(title, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_addFunction" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_AsCharPtrAndSize(description, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tc_addFunction" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = (char *)(buf3);
  res4 = SWIG_AsCharPtrAndSize(category, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "tc_addFunction" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = (char *)(buf4);
  res5 = SWIG_AsCharPtrAndSize(iconFile, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "tc_addFunction" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = (char *)(buf5);
  res6 = SWIG_AsCharPtrAndSize(target_family, &buf6, NULL, &alloc6);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "tc_addFunction" "', argument " "6"" of type '" "char const *""'");
  }
  arg6 = (char *)(buf6);
  arg7 = (int)(INTEGER(show_menu)[0]);
  arg8 = (int)(INTEGER(in_tool_menu)[0]);
  arg9 = (int)(INTEGER(make_default)[0]);
  tc_addFunction(arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(char const *)arg6,arg7,arg8,arg9);
  r_ans = R_NilValue;
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  if (alloc3 == SWIG_NEWOBJ) free((char*)buf3);
  if (alloc4 == SWIG_NEWOBJ) free((char*)buf4);
  if (alloc5 == SWIG_NEWOBJ) free((char*)buf5);
  if (alloc6 == SWIG_NEWOBJ) free((char*)buf6);
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_runOctaveCode ( SEXP code)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(code, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_runOctaveCode" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_runOctaveCode((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_runOctaveFile ( SEXP filename)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(filename, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_runOctaveFile" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_runOctaveFile((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_addOctavePlugin ( SEXP file, SEXP name, SEXP description, SEXP category, SEXP icon)
{
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(file, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_addOctavePlugin" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  res2 = SWIG_AsCharPtrAndSize(name, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_addOctavePlugin" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_AsCharPtrAndSize(description, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tc_addOctavePlugin" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = (char *)(buf3);
  res4 = SWIG_AsCharPtrAndSize(category, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "tc_addOctavePlugin" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = (char *)(buf4);
  res5 = SWIG_AsCharPtrAndSize(icon, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "tc_addOctavePlugin" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = (char *)(buf5);
  tc_addOctavePlugin((char const *)arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  if (alloc3 == SWIG_NEWOBJ) free((char*)buf3);
  if (alloc4 == SWIG_NEWOBJ) free((char*)buf4);
  if (alloc5 == SWIG_NEWOBJ) free((char*)buf5);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_DynamicLibraryMenu_api ( SEXP callFunction)
{
  void (*arg1)(char const *) = (void (*)(char const *)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(callFunction) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(callFunction, (void**)(&arg1), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_DynamicLibraryMenu_api" "', argument " "1"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg1 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(callFunction, NULL);
  }
  tc_DynamicLibraryMenu_api(arg1);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


int _p_f_p_q_const__char_p_q_const__char__int(char const * s_arg1, char const * s_arg2) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char_p_q_const__char__int)");
  }
  result = (int)(INTEGER(r_swig_cb_data->retValue)[0]);
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


int _p_f_p_q_const__char_p_q_const__char_p_q_const__char__int(char const * s_arg1, char const * s_arg2, char const * s_arg3) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 4));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg3);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char_p_q_const__char_p_q_const__char__int)");
  }
  result = (int)(INTEGER(r_swig_cb_data->retValue)[0]);
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


int _p_f_p_q_const__char_p_q_const__char_p_q_const__char_tc_matrix__int(char const * s_arg1, char const * s_arg2, char const * s_arg3, tc_matrix s_arg4) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  tc_matrix arg4 ;
  int result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 5));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg3);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&s_arg4,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char_p_q_const__char_p_q_const__char_tc_matrix__int)");
  }
  result = (int)(INTEGER(r_swig_cb_data->retValue)[0]);
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


void _p_f_p_f___void_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_int_int_int__void(void (*)() s_arg1, char const * s_arg2, char const * s_arg3, char const * s_arg4, char const * s_arg5, char const * s_arg6, int s_arg7, int s_arg8, int s_arg9) {
  void (*arg1)() = (void (*)()) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 10));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((void *)(s_arg1), SWIGTYPE_p_f___void, 0);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg3);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg4);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg5);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg6);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg7);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg8);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg9);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_f___void_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_int_int_int__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


SWIGEXPORT SEXP
R_swig_tc_LoadCLibraries_api ( SEXP compileAndRun, SEXP compileBuildLoad, SEXP compileBuildLoadSliders, SEXP loadLibrary, SEXP addFunction, SEXP displayCode)
{
  int (*arg1)(char const *,char const *) = (int (*)(char const *,char const *)) 0 ;
  int (*arg2)(char const *,char const *,char const *) = (int (*)(char const *,char const *,char const *)) 0 ;
  int (*arg3)(char const *,char const *,char const *,tc_matrix) = (int (*)(char const *,char const *,char const *,tc_matrix)) 0 ;
  void (*arg4)(char const *) = (void (*)(char const *)) 0 ;
  void (*arg5)(void (*)(),char const *,char const *,char const *,char const *,char const *,int,int,int) = (void (*)(void (*)(),char const *,char const *,char const *,char const *,char const *,int,int,int)) 0 ;
  void (*arg6)(char const *) = (void (*)(char const *)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(compileAndRun) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(compileAndRun, (void**)(&arg1), SWIGTYPE_p_f_p_q_const__char_p_q_const__char__int, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_LoadCLibraries_api" "', argument " "1"" of type '" "int (*)(char const *,char const *)""'"); 
      }
    }
  } else {
    arg1 = _p_f_p_q_const__char_p_q_const__char__int;
    R_SWIG_pushCallbackFunctionData(compileAndRun, NULL);
  }
  if(TYPEOF(compileBuildLoad) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(compileBuildLoad, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char_p_q_const__char_p_q_const__char__int, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_LoadCLibraries_api" "', argument " "2"" of type '" "int (*)(char const *,char const *,char const *)""'"); 
      }
    }
  } else {
    arg2 = _p_f_p_q_const__char_p_q_const__char_p_q_const__char__int;
    R_SWIG_pushCallbackFunctionData(compileBuildLoad, NULL);
  }
  if(TYPEOF(compileBuildLoadSliders) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(compileBuildLoadSliders, (void**)(&arg3), SWIGTYPE_p_f_p_q_const__char_p_q_const__char_p_q_const__char_tc_matrix__int, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_LoadCLibraries_api" "', argument " "3"" of type '" "int (*)(char const *,char const *,char const *,tc_matrix)""'"); 
      }
    }
  } else {
    arg3 = _p_f_p_q_const__char_p_q_const__char_p_q_const__char_tc_matrix__int;
    R_SWIG_pushCallbackFunctionData(compileBuildLoadSliders, NULL);
  }
  if(TYPEOF(loadLibrary) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(loadLibrary, (void**)(&arg4), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_LoadCLibraries_api" "', argument " "4"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg4 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(loadLibrary, NULL);
  }
  if(TYPEOF(addFunction) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(addFunction, (void**)(&arg5), SWIGTYPE_p_f_p_f___void_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_int_int_int__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_LoadCLibraries_api" "', argument " "5"" of type '" "void (*)(void (*)(),char const *,char const *,char const *,char const *,char const *,int,int,int)""'"); 
      }
    }
  } else {
    arg5 = _p_f_p_f___void_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_int_int_int__void;
    R_SWIG_pushCallbackFunctionData(addFunction, NULL);
  }
  if(TYPEOF(displayCode) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(displayCode, (void**)(&arg6), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_LoadCLibraries_api" "', argument " "6"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg6 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(displayCode, NULL);
  }
  tc_LoadCLibraries_api(arg1,arg2,arg3,arg4,arg5,arg6);
  r_ans = R_NilValue;
  
  
  
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_PythonTool_api ( SEXP runPythonCode, SEXP runPythonFile, SEXP addPythonPlugin)
{
  void (*arg1)(char const *) = (void (*)(char const *)) 0 ;
  void (*arg2)(char const *) = (void (*)(char const *)) 0 ;
  void (*arg3)(char const *,char const *,char const *,char const *,char const *) = (void (*)(char const *,char const *,char const *,char const *,char const *)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(runPythonCode) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(runPythonCode, (void**)(&arg1), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_PythonTool_api" "', argument " "1"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg1 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(runPythonCode, NULL);
  }
  if(TYPEOF(runPythonFile) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(runPythonFile, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_PythonTool_api" "', argument " "2"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg2 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(runPythonFile, NULL);
  }
  if(TYPEOF(addPythonPlugin) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(addPythonPlugin, (void**)(&arg3), SWIGTYPE_p_f_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_PythonTool_api" "', argument " "3"" of type '" "void (*)(char const *,char const *,char const *,char const *,char const *)""'"); 
      }
    }
  } else {
    arg3 = _p_f_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(addPythonPlugin, NULL);
  }
  tc_PythonTool_api(arg1,arg2,arg3);
  r_ans = R_NilValue;
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_surface ( SEXP z, SEXP title)
{
  tc_matrix arg1 ;
  char *arg2 = (char *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(z, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_surface" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_surface" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  res2 = SWIG_AsCharPtrAndSize(title, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_surface" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  tc_surface(arg1,(char const *)arg2);
  r_ans = R_NilValue;
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_plot ( SEXP data, SEXP title)
{
  tc_matrix arg1 ;
  char *arg2 = (char *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(data, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_plot" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_plot" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  res2 = SWIG_AsCharPtrAndSize(title, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_plot" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  tc_plot(arg1,(char const *)arg2);
  r_ans = R_NilValue;
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_scatterplot ( SEXP data, SEXP title)
{
  tc_matrix arg1 ;
  char *arg2 = (char *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(data, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_scatterplot" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_scatterplot" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  res2 = SWIG_AsCharPtrAndSize(title, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_scatterplot" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  tc_scatterplot(arg1,(char const *)arg2);
  r_ans = R_NilValue;
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_errorBars ( SEXP data, SEXP title)
{
  tc_matrix arg1 ;
  char *arg2 = (char *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(data, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_errorBars" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_errorBars" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  res2 = SWIG_AsCharPtrAndSize(title, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_errorBars" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  tc_errorBars(arg1,(char const *)arg2);
  r_ans = R_NilValue;
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_hist ( SEXP data, SEXP title)
{
  tc_matrix arg1 ;
  char *arg2 = (char *) 0 ;
  void *argp1 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(data, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_hist" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_hist" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  res2 = SWIG_AsCharPtrAndSize(title, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_hist" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  tc_hist(arg1,(char const *)arg2);
  r_ans = R_NilValue;
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_closePlots ( )
{
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  tc_closePlots();
  r_ans = R_NilValue;
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_multiplot ( SEXP rows, SEXP cols)
{
  int arg1 ;
  int arg2 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (int)(INTEGER(rows)[0]);
  arg2 = (int)(INTEGER(cols)[0]);
  tc_multiplot(arg1,arg2);
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_holdPlot ( SEXP on)
{
  int arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (int)(INTEGER(on)[0]);
  tc_holdPlot(arg1);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_clusterPlots ( SEXP clusters, SEXP s_swig_copy)
{
  tc_matrix result;
  int arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (int)(INTEGER(clusters)[0]);
  result = tc_clusterPlots(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getPlotData ( SEXP whichPlot, SEXP s_swig_copy)
{
  tc_matrix result;
  int arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (int)(INTEGER(whichPlot)[0]);
  result = tc_getPlotData(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_gnuplot ( SEXP s_arg1)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(s_arg1, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_gnuplot" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_gnuplot((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_savePlot ( SEXP filename)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(filename, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_savePlot" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_savePlot((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setLogScale ( SEXP s_arg1)
{
  int arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (int)(INTEGER(s_arg1)[0]);
  tc_setLogScale(arg1);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


void _p_f_int_int__void(int s_arg1, int s_arg2) {
  int arg1 ;
  int arg2 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg2);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_int_int__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


tc_matrix _p_f_int__tc_matrix(int s_arg1) {
  int arg1 ;
  tc_matrix result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 2));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_int__tc_matrix)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_matrix""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_matrix""'");
    } else {
      result = *((tc_matrix *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


SWIGEXPORT SEXP
R_swig_tc_PlotTool_api ( SEXP plot, SEXP surface, SEXP hist, SEXP errorBars, SEXP scatterplot, SEXP multiplot, SEXP hold, SEXP enableClustering, SEXP plotData, SEXP gnuplot, SEXP savePlotImage, SEXP logscale)
{
  void (*arg1)(tc_matrix,char const *) = (void (*)(tc_matrix,char const *)) 0 ;
  void (*arg2)(tc_matrix,char const *) = (void (*)(tc_matrix,char const *)) 0 ;
  void (*arg3)(tc_matrix,char const *) = (void (*)(tc_matrix,char const *)) 0 ;
  void (*arg4)(tc_matrix,char const *) = (void (*)(tc_matrix,char const *)) 0 ;
  void (*arg5)(tc_matrix,char const *) = (void (*)(tc_matrix,char const *)) 0 ;
  void (*arg6)(int,int) = (void (*)(int,int)) 0 ;
  void (*arg7)(int) = (void (*)(int)) 0 ;
  tc_matrix (*arg8)(int) = (tc_matrix (*)(int)) 0 ;
  tc_matrix (*arg9)(int) = (tc_matrix (*)(int)) 0 ;
  void (*arg10)(char const *) = (void (*)(char const *)) 0 ;
  void (*arg11)(char const *) = (void (*)(char const *)) 0 ;
  void (*arg12)(int) = (void (*)(int)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(plot) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(plot, (void**)(&arg1), SWIGTYPE_p_f_tc_matrix_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_PlotTool_api" "', argument " "1"" of type '" "void (*)(tc_matrix,char const *)""'"); 
      }
    }
  } else {
    arg1 = _p_f_tc_matrix_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(plot, NULL);
  }
  if(TYPEOF(surface) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(surface, (void**)(&arg2), SWIGTYPE_p_f_tc_matrix_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_PlotTool_api" "', argument " "2"" of type '" "void (*)(tc_matrix,char const *)""'"); 
      }
    }
  } else {
    arg2 = _p_f_tc_matrix_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(surface, NULL);
  }
  if(TYPEOF(hist) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(hist, (void**)(&arg3), SWIGTYPE_p_f_tc_matrix_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_PlotTool_api" "', argument " "3"" of type '" "void (*)(tc_matrix,char const *)""'"); 
      }
    }
  } else {
    arg3 = _p_f_tc_matrix_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(hist, NULL);
  }
  if(TYPEOF(errorBars) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(errorBars, (void**)(&arg4), SWIGTYPE_p_f_tc_matrix_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_PlotTool_api" "', argument " "4"" of type '" "void (*)(tc_matrix,char const *)""'"); 
      }
    }
  } else {
    arg4 = _p_f_tc_matrix_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(errorBars, NULL);
  }
  if(TYPEOF(scatterplot) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(scatterplot, (void**)(&arg5), SWIGTYPE_p_f_tc_matrix_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_PlotTool_api" "', argument " "5"" of type '" "void (*)(tc_matrix,char const *)""'"); 
      }
    }
  } else {
    arg5 = _p_f_tc_matrix_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(scatterplot, NULL);
  }
  if(TYPEOF(multiplot) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(multiplot, (void**)(&arg6), SWIGTYPE_p_f_int_int__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_PlotTool_api" "', argument " "6"" of type '" "void (*)(int,int)""'"); 
      }
    }
  } else {
    arg6 = _p_f_int_int__void;
    R_SWIG_pushCallbackFunctionData(multiplot, NULL);
  }
  if(TYPEOF(hold) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(hold, (void**)(&arg7), SWIGTYPE_p_f_int__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_PlotTool_api" "', argument " "7"" of type '" "void (*)(int)""'"); 
      }
    }
  } else {
    arg7 = _p_f_int__void;
    R_SWIG_pushCallbackFunctionData(hold, NULL);
  }
  if(TYPEOF(enableClustering) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(enableClustering, (void**)(&arg8), SWIGTYPE_p_f_int__tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_PlotTool_api" "', argument " "8"" of type '" "tc_matrix (*)(int)""'"); 
      }
    }
  } else {
    arg8 = _p_f_int__tc_matrix;
    R_SWIG_pushCallbackFunctionData(enableClustering, NULL);
  }
  if(TYPEOF(plotData) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(plotData, (void**)(&arg9), SWIGTYPE_p_f_int__tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_PlotTool_api" "', argument " "9"" of type '" "tc_matrix (*)(int)""'"); 
      }
    }
  } else {
    arg9 = _p_f_int__tc_matrix;
    R_SWIG_pushCallbackFunctionData(plotData, NULL);
  }
  if(TYPEOF(gnuplot) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(gnuplot, (void**)(&arg10), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_PlotTool_api" "', argument " "10"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg10 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(gnuplot, NULL);
  }
  if(TYPEOF(savePlotImage) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(savePlotImage, (void**)(&arg11), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_PlotTool_api" "', argument " "11"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg11 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(savePlotImage, NULL);
  }
  if(TYPEOF(logscale) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(logscale, (void**)(&arg12), SWIGTYPE_p_f_int__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_PlotTool_api" "', argument " "12"" of type '" "void (*)(int)""'"); 
      }
    }
  } else {
    arg12 = _p_f_int__void;
    R_SWIG_pushCallbackFunctionData(logscale, NULL);
  }
  tc_PlotTool_api(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  r_ans = R_NilValue;
  
  
  
  
  
  
  
  
  
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_writeModel ( SEXP file, SEXP items, SEXP s_swig_copy)
{
  int result;
  char *arg1 = (char *) 0 ;
  tc_items arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(file, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_writeModel" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  {
    res2 = SWIG_R_ConvertPtr(items, &argp2, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_writeModel" "', argument " "2"" of type '" "tc_items""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_writeModel" "', argument " "2"" of type '" "tc_items""'");
    } else {
      arg2 = *((tc_items *)(argp2));
    }
  }
  result = (int)tc_writeModel((char const *)arg1,arg2);
  r_ans = Rf_ScalarInteger(result);
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


int _p_f_p_q_const__char_tc_items__int(char const * s_arg1, tc_items s_arg2) {
  char *arg1 = (char *) 0 ;
  tc_items arg2 ;
  int result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&s_arg2,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char_tc_items__int)");
  }
  result = (int)(INTEGER(r_swig_cb_data->retValue)[0]);
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


SWIGEXPORT SEXP
R_swig_tc_ModelFileGenerator_api ( SEXP modelgen)
{
  int (*arg1)(char const *,tc_items) = (int (*)(char const *,tc_items)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(modelgen) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(modelgen, (void**)(&arg1), SWIGTYPE_p_f_p_q_const__char_tc_items__int, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_ModelFileGenerator_api" "', argument " "1"" of type '" "int (*)(char const *,tc_items)""'"); 
      }
    }
  } else {
    arg1 = _p_f_p_q_const__char_tc_items__int;
    R_SWIG_pushCallbackFunctionData(modelgen, NULL);
  }
  tc_ModelFileGenerator_api(arg1);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getEventTriggers ( SEXP s_swig_copy)
{
  tc_strings result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = tc_getEventTriggers();
  r_ans = SWIG_R_NewPointerObj((tc_strings *)memcpy((tc_strings *)malloc(sizeof(tc_strings)),&result,sizeof(tc_strings)), SWIGTYPE_p_tc_strings, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getEventResponses ( SEXP s_swig_copy)
{
  tc_strings result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = tc_getEventResponses();
  r_ans = SWIG_R_NewPointerObj((tc_strings *)memcpy((tc_strings *)malloc(sizeof(tc_strings)),&result,sizeof(tc_strings)), SWIGTYPE_p_tc_strings, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_addEvent ( SEXP trigger, SEXP event)
{
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(trigger, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_addEvent" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  res2 = SWIG_AsCharPtrAndSize(event, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_addEvent" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  tc_addEvent((char const *)arg1,(char const *)arg2);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


tc_strings _p_f___tc_strings() {
  tc_strings result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 1));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f___tc_strings)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_strings,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_strings""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_strings""'");
    } else {
      result = *((tc_strings *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


SWIGEXPORT SEXP
R_swig_tc_SimulationEventsTool_api ( SEXP getEventTriggers, SEXP getEventResponses, SEXP addEvent)
{
  tc_strings (*arg1)() = (tc_strings (*)()) 0 ;
  tc_strings (*arg2)() = (tc_strings (*)()) 0 ;
  void (*arg3)(char const *,char const *) = (void (*)(char const *,char const *)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(getEventTriggers) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getEventTriggers, (void**)(&arg1), SWIGTYPE_p_f___tc_strings, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_SimulationEventsTool_api" "', argument " "1"" of type '" "tc_strings (*)()""'"); 
      }
    }
  } else {
    arg1 = _p_f___tc_strings;
    R_SWIG_pushCallbackFunctionData(getEventTriggers, NULL);
  }
  if(TYPEOF(getEventResponses) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getEventResponses, (void**)(&arg2), SWIGTYPE_p_f___tc_strings, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_SimulationEventsTool_api" "', argument " "2"" of type '" "tc_strings (*)()""'"); 
      }
    }
  } else {
    arg2 = _p_f___tc_strings;
    R_SWIG_pushCallbackFunctionData(getEventResponses, NULL);
  }
  if(TYPEOF(addEvent) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(addEvent, (void**)(&arg3), SWIGTYPE_p_f_p_q_const__char_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_SimulationEventsTool_api" "', argument " "3"" of type '" "void (*)(char const *,char const *)""'"); 
      }
    }
  } else {
    arg3 = _p_f_p_q_const__char_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(addEvent, NULL);
  }
  tc_SimulationEventsTool_api(arg1,arg2,arg3);
  r_ans = R_NilValue;
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getForcingFunctionNames ( SEXP a, SEXP s_swig_copy)
{
  tc_strings result;
  tc_items arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(a, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getForcingFunctionNames" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getForcingFunctionNames" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  result = tc_getForcingFunctionNames(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_strings *)memcpy((tc_strings *)malloc(sizeof(tc_strings)),&result,sizeof(tc_strings)), SWIGTYPE_p_tc_strings, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getForcingFunctionAssignments ( SEXP a, SEXP s_swig_copy)
{
  tc_strings result;
  tc_items arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(a, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_getForcingFunctionAssignments" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_getForcingFunctionAssignments" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  result = tc_getForcingFunctionAssignments(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_strings *)memcpy((tc_strings *)malloc(sizeof(tc_strings)),&result,sizeof(tc_strings)), SWIGTYPE_p_tc_strings, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_addForcingFunction ( SEXP item, SEXP variable, SEXP formula)
{
  long arg1 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  res2 = SWIG_AsCharPtrAndSize(variable, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_addForcingFunction" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  res3 = SWIG_AsCharPtrAndSize(formula, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tc_addForcingFunction" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = (char *)(buf3);
  tc_addForcingFunction(arg1,(char const *)arg2,(char const *)arg3);
  r_ans = R_NilValue;
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  if (alloc3 == SWIG_NEWOBJ) free((char*)buf3);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_AssignmentFunctionsTool_api ( SEXP getForcingFunctionNames, SEXP getForcingFunctionAssignments, SEXP addForcingFunction)
{
  tc_strings (*arg1)(tc_items) = (tc_strings (*)(tc_items)) 0 ;
  tc_strings (*arg2)(tc_items) = (tc_strings (*)(tc_items)) 0 ;
  void (*arg3)(long,char const *,char const *) = (void (*)(long,char const *,char const *)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(getForcingFunctionNames) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getForcingFunctionNames, (void**)(&arg1), SWIGTYPE_p_f_tc_items__tc_strings, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_AssignmentFunctionsTool_api" "', argument " "1"" of type '" "tc_strings (*)(tc_items)""'"); 
      }
    }
  } else {
    arg1 = _p_f_tc_items__tc_strings;
    R_SWIG_pushCallbackFunctionData(getForcingFunctionNames, NULL);
  }
  if(TYPEOF(getForcingFunctionAssignments) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getForcingFunctionAssignments, (void**)(&arg2), SWIGTYPE_p_f_tc_items__tc_strings, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_AssignmentFunctionsTool_api" "', argument " "2"" of type '" "tc_strings (*)(tc_items)""'"); 
      }
    }
  } else {
    arg2 = _p_f_tc_items__tc_strings;
    R_SWIG_pushCallbackFunctionData(getForcingFunctionAssignments, NULL);
  }
  if(TYPEOF(addForcingFunction) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(addForcingFunction, (void**)(&arg3), SWIGTYPE_p_f_long_p_q_const__char_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_AssignmentFunctionsTool_api" "', argument " "3"" of type '" "void (*)(long,char const *,char const *)""'"); 
      }
    }
  } else {
    arg3 = _p_f_long_p_q_const__char_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(addForcingFunction, NULL);
  }
  tc_AssignmentFunctionsTool_api(arg1,arg2,arg3);
  r_ans = R_NilValue;
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_partsIn ( SEXP o, SEXP s_swig_copy)
{
  tc_items result;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(o)[0]);
  result = tc_partsIn(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&result,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_partsUpstream ( SEXP o, SEXP s_swig_copy)
{
  tc_items result;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(o)[0]);
  result = tc_partsUpstream(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&result,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_partsDownstream ( SEXP o, SEXP s_swig_copy)
{
  tc_items result;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(o)[0]);
  result = tc_partsDownstream(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&result,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_alignParts ( SEXP a)
{
  tc_items arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(a, &argp1, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_alignParts" "', argument " "1"" of type '" "tc_items""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_alignParts" "', argument " "1"" of type '" "tc_items""'");
    } else {
      arg1 = *((tc_items *)(argp1));
    }
  }
  tc_alignParts(arg1);
  r_ans = R_NilValue;
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_alignPartsOnPlasmid ( SEXP s_arg1, SEXP s_arg2)
{
  long arg1 ;
  tc_items arg2 ;
  void *argp2 ;
  int res2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(s_arg1)[0]);
  {
    res2 = SWIG_R_ConvertPtr(s_arg2, &argp2, SWIGTYPE_p_tc_items,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_alignPartsOnPlasmid" "', argument " "2"" of type '" "tc_items""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_alignPartsOnPlasmid" "', argument " "2"" of type '" "tc_items""'");
    } else {
      arg2 = *((tc_items *)(argp2));
    }
  }
  tc_alignPartsOnPlasmid(arg1,arg2);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_setSequence ( SEXP o, SEXP s_arg2)
{
  long arg1 ;
  char *arg2 = (char *) 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(o)[0]);
  res2 = SWIG_AsCharPtrAndSize(s_arg2, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_setSequence" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  tc_setSequence(arg1,(char const *)arg2);
  r_ans = R_NilValue;
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


void _p_f_long_tc_items__void(long s_arg1, tc_items s_arg2) {
  long arg1 ;
  tc_items arg2 ;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 3));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_R_NewPointerObj((tc_items *)memcpy((tc_items *)malloc(sizeof(tc_items)),&s_arg2,sizeof(tc_items)), SWIGTYPE_p_tc_items, SWIG_POINTER_OWN |  0 );
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_long_tc_items__void)");
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  
}


SWIGEXPORT SEXP
R_swig_tc_AutoGeneRegulatoryTool_api ( SEXP f1, SEXP f2, SEXP f3, SEXP f4, SEXP f5)
{
  tc_items (*arg1)(long) = (tc_items (*)(long)) 0 ;
  tc_items (*arg2)(long) = (tc_items (*)(long)) 0 ;
  tc_items (*arg3)(long) = (tc_items (*)(long)) 0 ;
  void (*arg4)(tc_items) = (void (*)(tc_items)) 0 ;
  void (*arg5)(long,tc_items) = (void (*)(long,tc_items)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(f1) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(f1, (void**)(&arg1), SWIGTYPE_p_f_long__tc_items, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_AutoGeneRegulatoryTool_api" "', argument " "1"" of type '" "tc_items (*)(long)""'"); 
      }
    }
  } else {
    arg1 = _p_f_long__tc_items;
    R_SWIG_pushCallbackFunctionData(f1, NULL);
  }
  if(TYPEOF(f2) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(f2, (void**)(&arg2), SWIGTYPE_p_f_long__tc_items, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_AutoGeneRegulatoryTool_api" "', argument " "2"" of type '" "tc_items (*)(long)""'"); 
      }
    }
  } else {
    arg2 = _p_f_long__tc_items;
    R_SWIG_pushCallbackFunctionData(f2, NULL);
  }
  if(TYPEOF(f3) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(f3, (void**)(&arg3), SWIGTYPE_p_f_long__tc_items, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_AutoGeneRegulatoryTool_api" "', argument " "3"" of type '" "tc_items (*)(long)""'"); 
      }
    }
  } else {
    arg3 = _p_f_long__tc_items;
    R_SWIG_pushCallbackFunctionData(f3, NULL);
  }
  if(TYPEOF(f4) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(f4, (void**)(&arg4), SWIGTYPE_p_f_tc_items__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_AutoGeneRegulatoryTool_api" "', argument " "4"" of type '" "void (*)(tc_items)""'"); 
      }
    }
  } else {
    arg4 = _p_f_tc_items__void;
    R_SWIG_pushCallbackFunctionData(f4, NULL);
  }
  if(TYPEOF(f5) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(f5, (void**)(&arg5), SWIGTYPE_p_f_long_tc_items__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_AutoGeneRegulatoryTool_api" "', argument " "5"" of type '" "void (*)(long,tc_items)""'"); 
      }
    }
  } else {
    arg5 = _p_f_long_tc_items__void;
    R_SWIG_pushCallbackFunctionData(f5, NULL);
  }
  tc_AutoGeneRegulatoryTool_api(arg1,arg2,arg3,arg4,arg5);
  r_ans = R_NilValue;
  
  
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_exportSBML ( SEXP file)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(file, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_exportSBML" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_exportSBML((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getSBMLString ( )
{
  char *result = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = (char *)tc_getSBMLString();
  r_ans = SWIG_FromCharPtr((const char *)result);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getAntimonyString ( )
{
  char *result = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = (char *)tc_getAntimonyString();
  r_ans = SWIG_FromCharPtr((const char *)result);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_importSBML ( SEXP file)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(file, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_importSBML" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_importSBML((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_exportAntimony ( SEXP file)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(file, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_exportAntimony" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_exportAntimony((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_importAntimony ( SEXP file)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(file, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_importAntimony" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_importAntimony((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_exportMatlab ( SEXP file)
{
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(file, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_exportMatlab" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  tc_exportMatlab((char const *)arg1);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_SBML_api ( SEXP exportSBML, SEXP importSBML, SEXP exportText, SEXP importText, SEXP exportMath, SEXP sbmlString, SEXP antimonyString)
{
  void (*arg1)(char const *) = (void (*)(char const *)) 0 ;
  void (*arg2)(char const *) = (void (*)(char const *)) 0 ;
  void (*arg3)(char const *) = (void (*)(char const *)) 0 ;
  void (*arg4)(char const *) = (void (*)(char const *)) 0 ;
  void (*arg5)(char const *) = (void (*)(char const *)) 0 ;
  char *(*arg6)() = (char *(*)()) 0 ;
  char *(*arg7)() = (char *(*)()) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(exportSBML) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(exportSBML, (void**)(&arg1), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_SBML_api" "', argument " "1"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg1 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(exportSBML, NULL);
  }
  if(TYPEOF(importSBML) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(importSBML, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_SBML_api" "', argument " "2"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg2 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(importSBML, NULL);
  }
  if(TYPEOF(exportText) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(exportText, (void**)(&arg3), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_SBML_api" "', argument " "3"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg3 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(exportText, NULL);
  }
  if(TYPEOF(importText) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(importText, (void**)(&arg4), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_SBML_api" "', argument " "4"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg4 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(importText, NULL);
  }
  if(TYPEOF(exportMath) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(exportMath, (void**)(&arg5), SWIGTYPE_p_f_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_SBML_api" "', argument " "5"" of type '" "void (*)(char const *)""'"); 
      }
    }
  } else {
    arg5 = _p_f_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(exportMath, NULL);
  }
  if(TYPEOF(sbmlString) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(sbmlString, (void**)(&arg6), SWIGTYPE_p_f___p_char, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_SBML_api" "', argument " "6"" of type '" "char const *(*)()""'"); 
      }
    }
  } else {
    arg6 = _p_f___p_char;
    R_SWIG_pushCallbackFunctionData(sbmlString, NULL);
  }
  if(TYPEOF(antimonyString) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(antimonyString, (void**)(&arg7), SWIGTYPE_p_f___p_char, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_SBML_api" "', argument " "7"" of type '" "char const *(*)()""'"); 
      }
    }
  } else {
    arg7 = _p_f___p_char;
    R_SWIG_pushCallbackFunctionData(antimonyString, NULL);
  }
  tc_SBML_api(arg1,arg2,arg3,arg4,arg5,(char const *(*)())arg6,(char const *(*)())arg7);
  r_ans = R_NilValue;
  
  
  
  
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_simulateDeterministic ( SEXP startTime, SEXP endTime, SEXP numSteps, SEXP s_swig_copy)
{
  tc_matrix result;
  double arg1 ;
  double arg2 ;
  int arg3 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (double)(REAL(startTime)[0]);
  arg2 = (double)(REAL(endTime)[0]);
  arg3 = (int)(INTEGER(numSteps)[0]);
  result = tc_simulateDeterministic(arg1,arg2,arg3);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_simulateStochastic ( SEXP startTime, SEXP endTime, SEXP numSteps, SEXP s_swig_copy)
{
  tc_matrix result;
  double arg1 ;
  double arg2 ;
  int arg3 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (double)(REAL(startTime)[0]);
  arg2 = (double)(REAL(endTime)[0]);
  arg3 = (int)(INTEGER(numSteps)[0]);
  result = tc_simulateStochastic(arg1,arg2,arg3);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_simulateHybrid ( SEXP startTime, SEXP endTime, SEXP numSteps, SEXP s_swig_copy)
{
  tc_matrix result;
  double arg1 ;
  double arg2 ;
  int arg3 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (double)(REAL(startTime)[0]);
  arg2 = (double)(REAL(endTime)[0]);
  arg3 = (int)(INTEGER(numSteps)[0]);
  result = tc_simulateHybrid(arg1,arg2,arg3);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_simulateTauLeap ( SEXP startTime, SEXP endTime, SEXP numSteps, SEXP s_swig_copy)
{
  tc_matrix result;
  double arg1 ;
  double arg2 ;
  int arg3 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (double)(REAL(startTime)[0]);
  arg2 = (double)(REAL(endTime)[0]);
  arg3 = (int)(INTEGER(numSteps)[0]);
  result = tc_simulateTauLeap(arg1,arg2,arg3);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getSteadyState ( SEXP s_swig_copy)
{
  tc_matrix result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = tc_getSteadyState();
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_steadyStateScan ( SEXP param, SEXP start, SEXP end, SEXP numSteps, SEXP s_swig_copy)
{
  tc_matrix result;
  char *arg1 = (char *) 0 ;
  double arg2 ;
  double arg3 ;
  int arg4 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(param, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_steadyStateScan" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  arg2 = (double)(REAL(start)[0]);
  arg3 = (double)(REAL(end)[0]);
  arg4 = (int)(INTEGER(numSteps)[0]);
  result = tc_steadyStateScan((char const *)arg1,arg2,arg3,arg4);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_steadyStateScan2D ( SEXP param1, SEXP start1, SEXP end1, SEXP numSteps1, SEXP param2, SEXP start2, SEXP end2, SEXP numSteps2, SEXP s_swig_copy)
{
  tc_matrix result;
  char *arg1 = (char *) 0 ;
  double arg2 ;
  double arg3 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  double arg6 ;
  double arg7 ;
  int arg8 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(param1, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_steadyStateScan2D" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  arg2 = (double)(REAL(start1)[0]);
  arg3 = (double)(REAL(end1)[0]);
  arg4 = (int)(INTEGER(numSteps1)[0]);
  res5 = SWIG_AsCharPtrAndSize(param2, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "tc_steadyStateScan2D" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = (char *)(buf5);
  arg6 = (double)(REAL(start2)[0]);
  arg7 = (double)(REAL(end2)[0]);
  arg8 = (int)(INTEGER(numSteps2)[0]);
  result = tc_steadyStateScan2D((char const *)arg1,arg2,arg3,arg4,(char const *)arg5,arg6,arg7,arg8);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  
  
  
  if (alloc5 == SWIG_NEWOBJ) free((char*)buf5);
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getJacobian ( SEXP s_swig_copy)
{
  tc_matrix result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = tc_getJacobian();
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getEigenvalues ( SEXP s_swig_copy)
{
  tc_matrix result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = tc_getEigenvalues();
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getUnscaledElasticities ( SEXP s_swig_copy)
{
  tc_matrix result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = tc_getUnscaledElasticities();
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getUnscaledConcentrationCC ( SEXP s_swig_copy)
{
  tc_matrix result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = tc_getUnscaledConcentrationCC();
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getUnscaledFluxCC ( SEXP s_swig_copy)
{
  tc_matrix result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = tc_getUnscaledFluxCC();
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getScaledElasticities ( SEXP s_swig_copy)
{
  tc_matrix result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = tc_getScaledElasticities();
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getScaledConcentrationCC ( SEXP s_swig_copy)
{
  tc_matrix result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = tc_getScaledConcentrationCC();
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_getScaledFluxCC ( SEXP s_swig_copy)
{
  tc_matrix result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = tc_getScaledFluxCC();
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_reducedStoichiometry ( SEXP s_swig_copy)
{
  tc_matrix result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = tc_reducedStoichiometry();
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_elementaryFluxModes ( SEXP s_swig_copy)
{
  tc_matrix result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = tc_elementaryFluxModes();
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_LMatrix ( SEXP s_swig_copy)
{
  tc_matrix result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = tc_LMatrix();
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_KMatrix ( SEXP s_swig_copy)
{
  tc_matrix result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = tc_KMatrix();
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_calcFluxes ( SEXP s_swig_copy)
{
  tc_matrix result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = tc_calcFluxes();
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_calcDerivatives ( SEXP s_swig_copy)
{
  tc_matrix result;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  result = tc_calcDerivatives();
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_updateParameters ( SEXP params)
{
  tc_matrix arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  {
    res1 = SWIG_R_ConvertPtr(params, &argp1, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_updateParameters" "', argument " "1"" of type '" "tc_matrix""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tc_updateParameters" "', argument " "1"" of type '" "tc_matrix""'");
    } else {
      arg1 = *((tc_matrix *)(argp1));
    }
  }
  tc_updateParameters(arg1);
  r_ans = R_NilValue;
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_updateParameter ( SEXP param, SEXP value)
{
  char *arg1 = (char *) 0 ;
  double arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(param, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_updateParameter" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  arg2 = (double)(REAL(value)[0]);
  tc_updateParameter((char const *)arg1,arg2);
  r_ans = R_NilValue;
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_optimize ( SEXP formulaOrFile, SEXP s_swig_copy)
{
  tc_matrix result;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  res1 = SWIG_AsCharPtrAndSize(formulaOrFile, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tc_optimize" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = (char *)(buf1);
  result = tc_optimize((char const *)arg1);
  r_ans = SWIG_R_NewPointerObj((tc_matrix *)memcpy((tc_matrix *)malloc(sizeof(tc_matrix)),&result,sizeof(tc_matrix)), SWIGTYPE_p_tc_matrix, SWIG_POINTER_OWN |  0 );
  if (alloc1 == SWIG_NEWOBJ) free((char*)buf1);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_enableAssignmentRulesReordering ( SEXP s_arg1)
{
  int arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (int)(INTEGER(s_arg1)[0]);
  tc_enableAssignmentRulesReordering(arg1);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


tc_matrix _p_f_double_double_int__tc_matrix(double s_arg1, double s_arg2, int s_arg3) {
  double arg1 ;
  double arg2 ;
  int arg3 ;
  tc_matrix result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 4));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg1));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg2));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg3);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_double_double_int__tc_matrix)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_matrix""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_matrix""'");
    } else {
      result = *((tc_matrix *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


tc_matrix _p_f___tc_matrix() {
  tc_matrix result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 1));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f___tc_matrix)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_matrix""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_matrix""'");
    } else {
      result = *((tc_matrix *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


tc_matrix _p_f_p_q_const__char_double_double_int__tc_matrix(char const * s_arg1, double s_arg2, double s_arg3, int s_arg4) {
  char *arg1 = (char *) 0 ;
  double arg2 ;
  double arg3 ;
  int arg4 ;
  tc_matrix result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 5));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg2));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg3));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg4);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char_double_double_int__tc_matrix)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_matrix""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_matrix""'");
    } else {
      result = *((tc_matrix *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


tc_matrix _p_f_p_q_const__char_double_double_int_p_q_const__char_double_double_int__tc_matrix(char const * s_arg1, double s_arg2, double s_arg3, int s_arg4, char const * s_arg5, double s_arg6, double s_arg7, int s_arg8) {
  char *arg1 = (char *) 0 ;
  double arg2 ;
  double arg3 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  double arg6 ;
  double arg7 ;
  int arg8 ;
  tc_matrix result;
  RCallbackFunctionData *r_swig_cb_data = R_SWIG_getCallbackFunctionData();
  SEXP r_tmp;
  int r_nprotect = 0;
  char * r_vmax= 0;
  int ecode = 0;
  void *argp ;
  int res = 0 ;
  
  Rf_protect(r_swig_cb_data->expr = Rf_allocVector(LANGSXP, 9));
  r_nprotect++;
  r_swig_cb_data->el = r_swig_cb_data->expr;
  
  SETCAR(r_swig_cb_data->el, r_swig_cb_data->fun);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg1);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg2));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg3));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg4);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_FromCharPtr((const char *)s_arg5);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg6));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = SWIG_From_double((double)(s_arg7));
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  r_tmp = Rf_ScalarInteger(s_arg8);
  SETCAR(r_swig_cb_data->el, r_tmp);
  r_swig_cb_data->el = CDR(r_swig_cb_data->el);
  
  
  
  r_swig_cb_data->retValue = R_tryEval(r_swig_cb_data->expr, R_GlobalEnv, &r_swig_cb_data->errorOccurred);
  
  if(r_swig_cb_data->errorOccurred) {
    R_SWIG_popCallbackFunctionData(1);
    Rf_error("error in calling R function as a function pointer (_p_f_p_q_const__char_double_double_int_p_q_const__char_double_double_int__tc_matrix)");
  }
  {
    res = SWIG_R_ConvertPtr(r_swig_cb_data->retValue, &argp, SWIGTYPE_p_tc_matrix,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_matrix""'"); 
    }  
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "$symname" "', argument " "$argnum"" of type '" "tc_matrix""'");
    } else {
      result = *((tc_matrix *)(argp));
    }
  }
  R_SWIG_popCallbackFunctionData(1);
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return result;
  
}


SWIGEXPORT SEXP
R_swig_tc_COPASI_api ( SEXP simulateDeterministic, SEXP simulateStochastic, SEXP simulateHybrid, SEXP simulateTauLeap, SEXP getSteadyState, SEXP steadyStateScan, SEXP steadyStateScan2D, SEXP getJacobian, SEXP getEigenvalues, SEXP getUnscaledElasticities, SEXP getUnscaledConcentrationCC, SEXP getUnscaledFluxCC, SEXP getScaledElasticities, SEXP getScaledConcentrationCC, SEXP getScaledFluxCC, SEXP tc_reducedStoichiometry, SEXP tc_emf, SEXP tc_Lmat, SEXP tc_Kmat, SEXP calcFlux, SEXP calcDeriv, SEXP gaoptim, SEXP update1, SEXP update2, SEXP enableAssignmentRulesOrdering)
{
  tc_matrix (*arg1)(double,double,int) = (tc_matrix (*)(double,double,int)) 0 ;
  tc_matrix (*arg2)(double,double,int) = (tc_matrix (*)(double,double,int)) 0 ;
  tc_matrix (*arg3)(double,double,int) = (tc_matrix (*)(double,double,int)) 0 ;
  tc_matrix (*arg4)(double,double,int) = (tc_matrix (*)(double,double,int)) 0 ;
  tc_matrix (*arg5)() = (tc_matrix (*)()) 0 ;
  tc_matrix (*arg6)(char const *,double,double,int) = (tc_matrix (*)(char const *,double,double,int)) 0 ;
  tc_matrix (*arg7)(char const *,double,double,int,char const *,double,double,int) = (tc_matrix (*)(char const *,double,double,int,char const *,double,double,int)) 0 ;
  tc_matrix (*arg8)() = (tc_matrix (*)()) 0 ;
  tc_matrix (*arg9)() = (tc_matrix (*)()) 0 ;
  tc_matrix (*arg10)() = (tc_matrix (*)()) 0 ;
  tc_matrix (*arg11)() = (tc_matrix (*)()) 0 ;
  tc_matrix (*arg12)() = (tc_matrix (*)()) 0 ;
  tc_matrix (*arg13)() = (tc_matrix (*)()) 0 ;
  tc_matrix (*arg14)() = (tc_matrix (*)()) 0 ;
  tc_matrix (*arg15)() = (tc_matrix (*)()) 0 ;
  tc_matrix (*arg16)() = (tc_matrix (*)()) 0 ;
  tc_matrix (*arg17)() = (tc_matrix (*)()) 0 ;
  tc_matrix (*arg18)() = (tc_matrix (*)()) 0 ;
  tc_matrix (*arg19)() = (tc_matrix (*)()) 0 ;
  tc_matrix (*arg20)() = (tc_matrix (*)()) 0 ;
  tc_matrix (*arg21)() = (tc_matrix (*)()) 0 ;
  tc_matrix (*arg22)(char const *) = (tc_matrix (*)(char const *)) 0 ;
  void (*arg23)(tc_matrix) = (void (*)(tc_matrix)) 0 ;
  void (*arg24)(char const *,double) = (void (*)(char const *,double)) 0 ;
  void (*arg25)(int) = (void (*)(int)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(simulateDeterministic) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(simulateDeterministic, (void**)(&arg1), SWIGTYPE_p_f_double_double_int__tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "1"" of type '" "tc_matrix (*)(double,double,int)""'"); 
      }
    }
  } else {
    arg1 = _p_f_double_double_int__tc_matrix;
    R_SWIG_pushCallbackFunctionData(simulateDeterministic, NULL);
  }
  if(TYPEOF(simulateStochastic) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(simulateStochastic, (void**)(&arg2), SWIGTYPE_p_f_double_double_int__tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "2"" of type '" "tc_matrix (*)(double,double,int)""'"); 
      }
    }
  } else {
    arg2 = _p_f_double_double_int__tc_matrix;
    R_SWIG_pushCallbackFunctionData(simulateStochastic, NULL);
  }
  if(TYPEOF(simulateHybrid) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(simulateHybrid, (void**)(&arg3), SWIGTYPE_p_f_double_double_int__tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "3"" of type '" "tc_matrix (*)(double,double,int)""'"); 
      }
    }
  } else {
    arg3 = _p_f_double_double_int__tc_matrix;
    R_SWIG_pushCallbackFunctionData(simulateHybrid, NULL);
  }
  if(TYPEOF(simulateTauLeap) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(simulateTauLeap, (void**)(&arg4), SWIGTYPE_p_f_double_double_int__tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "4"" of type '" "tc_matrix (*)(double,double,int)""'"); 
      }
    }
  } else {
    arg4 = _p_f_double_double_int__tc_matrix;
    R_SWIG_pushCallbackFunctionData(simulateTauLeap, NULL);
  }
  if(TYPEOF(getSteadyState) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getSteadyState, (void**)(&arg5), SWIGTYPE_p_f___tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "5"" of type '" "tc_matrix (*)()""'"); 
      }
    }
  } else {
    arg5 = _p_f___tc_matrix;
    R_SWIG_pushCallbackFunctionData(getSteadyState, NULL);
  }
  if(TYPEOF(steadyStateScan) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(steadyStateScan, (void**)(&arg6), SWIGTYPE_p_f_p_q_const__char_double_double_int__tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "6"" of type '" "tc_matrix (*)(char const *,double,double,int)""'"); 
      }
    }
  } else {
    arg6 = _p_f_p_q_const__char_double_double_int__tc_matrix;
    R_SWIG_pushCallbackFunctionData(steadyStateScan, NULL);
  }
  if(TYPEOF(steadyStateScan2D) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(steadyStateScan2D, (void**)(&arg7), SWIGTYPE_p_f_p_q_const__char_double_double_int_p_q_const__char_double_double_int__tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "7"" of type '" "tc_matrix (*)(char const *,double,double,int,char const *,double,double,int)""'"); 
      }
    }
  } else {
    arg7 = _p_f_p_q_const__char_double_double_int_p_q_const__char_double_double_int__tc_matrix;
    R_SWIG_pushCallbackFunctionData(steadyStateScan2D, NULL);
  }
  if(TYPEOF(getJacobian) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getJacobian, (void**)(&arg8), SWIGTYPE_p_f___tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "8"" of type '" "tc_matrix (*)()""'"); 
      }
    }
  } else {
    arg8 = _p_f___tc_matrix;
    R_SWIG_pushCallbackFunctionData(getJacobian, NULL);
  }
  if(TYPEOF(getEigenvalues) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getEigenvalues, (void**)(&arg9), SWIGTYPE_p_f___tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "9"" of type '" "tc_matrix (*)()""'"); 
      }
    }
  } else {
    arg9 = _p_f___tc_matrix;
    R_SWIG_pushCallbackFunctionData(getEigenvalues, NULL);
  }
  if(TYPEOF(getUnscaledElasticities) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getUnscaledElasticities, (void**)(&arg10), SWIGTYPE_p_f___tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "10"" of type '" "tc_matrix (*)()""'"); 
      }
    }
  } else {
    arg10 = _p_f___tc_matrix;
    R_SWIG_pushCallbackFunctionData(getUnscaledElasticities, NULL);
  }
  if(TYPEOF(getUnscaledConcentrationCC) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getUnscaledConcentrationCC, (void**)(&arg11), SWIGTYPE_p_f___tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "11"" of type '" "tc_matrix (*)()""'"); 
      }
    }
  } else {
    arg11 = _p_f___tc_matrix;
    R_SWIG_pushCallbackFunctionData(getUnscaledConcentrationCC, NULL);
  }
  if(TYPEOF(getUnscaledFluxCC) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getUnscaledFluxCC, (void**)(&arg12), SWIGTYPE_p_f___tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "12"" of type '" "tc_matrix (*)()""'"); 
      }
    }
  } else {
    arg12 = _p_f___tc_matrix;
    R_SWIG_pushCallbackFunctionData(getUnscaledFluxCC, NULL);
  }
  if(TYPEOF(getScaledElasticities) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getScaledElasticities, (void**)(&arg13), SWIGTYPE_p_f___tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "13"" of type '" "tc_matrix (*)()""'"); 
      }
    }
  } else {
    arg13 = _p_f___tc_matrix;
    R_SWIG_pushCallbackFunctionData(getScaledElasticities, NULL);
  }
  if(TYPEOF(getScaledConcentrationCC) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getScaledConcentrationCC, (void**)(&arg14), SWIGTYPE_p_f___tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "14"" of type '" "tc_matrix (*)()""'"); 
      }
    }
  } else {
    arg14 = _p_f___tc_matrix;
    R_SWIG_pushCallbackFunctionData(getScaledConcentrationCC, NULL);
  }
  if(TYPEOF(getScaledFluxCC) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(getScaledFluxCC, (void**)(&arg15), SWIGTYPE_p_f___tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "15"" of type '" "tc_matrix (*)()""'"); 
      }
    }
  } else {
    arg15 = _p_f___tc_matrix;
    R_SWIG_pushCallbackFunctionData(getScaledFluxCC, NULL);
  }
  if(TYPEOF(tc_reducedStoichiometry) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_reducedStoichiometry, (void**)(&arg16), SWIGTYPE_p_f___tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "16"" of type '" "tc_matrix (*)()""'"); 
      }
    }
  } else {
    arg16 = _p_f___tc_matrix;
    R_SWIG_pushCallbackFunctionData(tc_reducedStoichiometry, NULL);
  }
  if(TYPEOF(tc_emf) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_emf, (void**)(&arg17), SWIGTYPE_p_f___tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "17"" of type '" "tc_matrix (*)()""'"); 
      }
    }
  } else {
    arg17 = _p_f___tc_matrix;
    R_SWIG_pushCallbackFunctionData(tc_emf, NULL);
  }
  if(TYPEOF(tc_Lmat) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_Lmat, (void**)(&arg18), SWIGTYPE_p_f___tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "18"" of type '" "tc_matrix (*)()""'"); 
      }
    }
  } else {
    arg18 = _p_f___tc_matrix;
    R_SWIG_pushCallbackFunctionData(tc_Lmat, NULL);
  }
  if(TYPEOF(tc_Kmat) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(tc_Kmat, (void**)(&arg19), SWIGTYPE_p_f___tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "19"" of type '" "tc_matrix (*)()""'"); 
      }
    }
  } else {
    arg19 = _p_f___tc_matrix;
    R_SWIG_pushCallbackFunctionData(tc_Kmat, NULL);
  }
  if(TYPEOF(calcFlux) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(calcFlux, (void**)(&arg20), SWIGTYPE_p_f___tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "20"" of type '" "tc_matrix (*)()""'"); 
      }
    }
  } else {
    arg20 = _p_f___tc_matrix;
    R_SWIG_pushCallbackFunctionData(calcFlux, NULL);
  }
  if(TYPEOF(calcDeriv) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(calcDeriv, (void**)(&arg21), SWIGTYPE_p_f___tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "21"" of type '" "tc_matrix (*)()""'"); 
      }
    }
  } else {
    arg21 = _p_f___tc_matrix;
    R_SWIG_pushCallbackFunctionData(calcDeriv, NULL);
  }
  if(TYPEOF(gaoptim) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(gaoptim, (void**)(&arg22), SWIGTYPE_p_f_p_q_const__char__tc_matrix, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "22"" of type '" "tc_matrix (*)(char const *)""'"); 
      }
    }
  } else {
    arg22 = _p_f_p_q_const__char__tc_matrix;
    R_SWIG_pushCallbackFunctionData(gaoptim, NULL);
  }
  if(TYPEOF(update1) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(update1, (void**)(&arg23), SWIGTYPE_p_f_tc_matrix__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "23"" of type '" "void (*)(tc_matrix)""'"); 
      }
    }
  } else {
    arg23 = _p_f_tc_matrix__void;
    R_SWIG_pushCallbackFunctionData(update1, NULL);
  }
  if(TYPEOF(update2) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(update2, (void**)(&arg24), SWIGTYPE_p_f_p_q_const__char_double__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "24"" of type '" "void (*)(char const *,double)""'"); 
      }
    }
  } else {
    arg24 = _p_f_p_q_const__char_double__void;
    R_SWIG_pushCallbackFunctionData(update2, NULL);
  }
  if(TYPEOF(enableAssignmentRulesOrdering) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(enableAssignmentRulesOrdering, (void**)(&arg25), SWIGTYPE_p_f_int__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_COPASI_api" "', argument " "25"" of type '" "void (*)(int)""'"); 
      }
    }
  } else {
    arg25 = _p_f_int__void;
    R_SWIG_pushCallbackFunctionData(enableAssignmentRulesOrdering, NULL);
  }
  tc_COPASI_api(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22,arg23,arg24,arg25);
  r_ans = R_NilValue;
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_substituteModel ( SEXP item, SEXP filename)
{
  long arg1 ;
  char *arg2 = (char *) 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  res2 = SWIG_AsCharPtrAndSize(filename, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tc_substituteModel" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = (char *)(buf2);
  tc_substituteModel(arg1,(char const *)arg2);
  r_ans = R_NilValue;
  
  if (alloc2 == SWIG_NEWOBJ) free((char*)buf2);
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_substituteEmptyModel ( SEXP item)
{
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  tc_substituteEmptyModel(arg1);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_substituteOriginalModel ( SEXP item)
{
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  tc_substituteOriginalModel(arg1);
  r_ans = R_NilValue;
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_listOfPossibleModels ( SEXP item, SEXP s_swig_copy)
{
  tc_strings result;
  long arg1 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  arg1 = (long)(INTEGER(item)[0]);
  result = tc_listOfPossibleModels(arg1);
  r_ans = SWIG_R_NewPointerObj((tc_strings *)memcpy((tc_strings *)malloc(sizeof(tc_strings)),&result,sizeof(tc_strings)), SWIGTYPE_p_tc_strings, SWIG_POINTER_OWN |  0 );
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


SWIGEXPORT SEXP
R_swig_tc_ModuleTool_api ( SEXP substituteModel, SEXP listOfModels)
{
  void (*arg1)(long,char const *) = (void (*)(long,char const *)) 0 ;
  tc_strings (*arg2)(long) = (tc_strings (*)(long)) 0 ;
  unsigned int r_nprotect = 0;
  SEXP r_ans = R_NilValue ;
  VMAXTYPE r_vmax = vmaxget() ;
  
  if(TYPEOF(substituteModel) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(substituteModel, (void**)(&arg1), SWIGTYPE_p_f_long_p_q_const__char__void, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_ModuleTool_api" "', argument " "1"" of type '" "void (*)(long,char const *)""'"); 
      }
    }
  } else {
    arg1 = _p_f_long_p_q_const__char__void;
    R_SWIG_pushCallbackFunctionData(substituteModel, NULL);
  }
  if(TYPEOF(listOfModels) != CLOSXP) {
    {
      int res = SWIG_R_ConvertPtr(listOfModels, (void**)(&arg2), SWIGTYPE_p_f_long__tc_strings, 0);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "tc_ModuleTool_api" "', argument " "2"" of type '" "tc_strings (*)(long)""'"); 
      }
    }
  } else {
    arg2 = _p_f_long__tc_strings;
    R_SWIG_pushCallbackFunctionData(listOfModels, NULL);
  }
  tc_ModuleTool_api(arg1,arg2);
  r_ans = R_NilValue;
  
  
  vmaxset(r_vmax);
  if(r_nprotect)  Rf_unprotect(r_nprotect);
  
  return r_ans;
}


#ifdef __cplusplus
}
#endif

/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "double *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f___int = {"_p_f___int", "int (*)()", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f___p_char = {"_p_f___p_char", "char *(*)()", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f___tc_items = {"_p_f___tc_items", "tc_items (*)()", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f___tc_matrix = {"_p_f___tc_matrix", "tc_matrix (*)()", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f___tc_strings = {"_p_f___tc_strings", "tc_strings (*)()", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f___void = {"_p_f___void", "void (*)()", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_double__void = {"_p_f_double__void", "void (*)(double)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_double_double__void = {"_p_f_double_double__void", "void (*)(double,double)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_double_double_int__tc_matrix = {"_p_f_double_double_int__tc_matrix", "tc_matrix (*)(double,double,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int__tc_matrix = {"_p_f_int__tc_matrix", "tc_matrix (*)(int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int__void = {"_p_f_int__void", "void (*)(int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_int__void = {"_p_f_int_int__void", "void (*)(int,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long__double = {"_p_f_long__double", "double (*)(long)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long__long = {"_p_f_long__long", "long (*)(long)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long__p_char = {"_p_f_long__p_char", "char *(*)(long)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long__tc_items = {"_p_f_long__tc_items", "tc_items (*)(long)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long__tc_strings = {"_p_f_long__tc_strings", "tc_strings (*)(long)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long__void = {"_p_f_long__void", "void (*)(long)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_double__void = {"_p_f_long_double__void", "void (*)(long,double)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_double_double__void = {"_p_f_long_double_double__void", "void (*)(long,double,double)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_double_double_int__void = {"_p_f_long_double_double_int__void", "void (*)(long,double,double,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_double_int__void = {"_p_f_long_double_int__void", "void (*)(long,double,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_int__void = {"_p_f_long_int__void", "void (*)(long,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_long_int__double = {"_p_f_long_long_int__double", "double (*)(long,long,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_long_int_double_double__void = {"_p_f_long_long_int_double_double__void", "void (*)(long,long,int,double,double)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_p_f_void__void__void = {"_p_f_long_p_f_void__void__void", "void (*)(long,void (*)(void))", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_p_q_const__char__double = {"_p_f_long_p_q_const__char__double", "double (*)(long,char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_p_q_const__char__int = {"_p_f_long_p_q_const__char__int", "int (*)(long,char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_p_q_const__char__p_char = {"_p_f_long_p_q_const__char__p_char", "char *(*)(long,char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_p_q_const__char__tc_items = {"_p_f_long_p_q_const__char__tc_items", "tc_items (*)(long,char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_p_q_const__char__tc_matrix = {"_p_f_long_p_q_const__char__tc_matrix", "tc_matrix (*)(long,char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_p_q_const__char__tc_table = {"_p_f_long_p_q_const__char__tc_table", "tc_table (*)(long,char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_p_q_const__char__void = {"_p_f_long_p_q_const__char__void", "void (*)(long,char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_p_q_const__char_double__void = {"_p_f_long_p_q_const__char_double__void", "void (*)(long,char const *,double)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_p_q_const__char_int__void = {"_p_f_long_p_q_const__char_int__void", "void (*)(long,char const *,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_p_q_const__char_p_q_const__char__void = {"_p_f_long_p_q_const__char_p_q_const__char__void", "void (*)(long,char const *,char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_p_q_const__char_tc_matrix__void = {"_p_f_long_p_q_const__char_tc_matrix__void", "void (*)(long,char const *,tc_matrix)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_p_q_const__char_tc_table__void = {"_p_f_long_p_q_const__char_tc_table__void", "void (*)(long,char const *,tc_table)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_tc_items__void = {"_p_f_long_tc_items__void", "void (*)(long,tc_items)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_tc_matrix_p_f_tc_matrix__void__void = {"_p_f_long_tc_matrix_p_f_tc_matrix__void__void", "void (*)(long,tc_matrix,void (*)(tc_matrix))", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_long_tc_matrix_p_q_const__char_p_f_tc_matrix__void__void = {"_p_f_long_tc_matrix_p_q_const__char_p_f_tc_matrix__void__void", "void (*)(long,tc_matrix,char const *,void (*)(tc_matrix))", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_f___void_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_int_int_int__void = {"_p_f_p_f___void_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_int_int_int__void", "void (*)(void (*)(),char const *,char const *,char const *,char const *,char const *,int,int,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char__double = {"_p_f_p_q_const__char__double", "double (*)(char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char__int = {"_p_f_p_q_const__char__int", "int (*)(char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char__long = {"_p_f_p_q_const__char__long", "long (*)(char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char__p_char = {"_p_f_p_q_const__char__p_char", "char *(*)(char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char__tc_items = {"_p_f_p_q_const__char__tc_items", "tc_items (*)(char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char__tc_matrix = {"_p_f_p_q_const__char__tc_matrix", "tc_matrix (*)(char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char__tc_table = {"_p_f_p_q_const__char__tc_table", "tc_table (*)(char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char__void = {"_p_f_p_q_const__char__void", "void (*)(char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_double__void = {"_p_f_p_q_const__char_double__void", "void (*)(char const *,double)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_double_double__void = {"_p_f_p_q_const__char_double_double__void", "void (*)(char const *,double,double)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_double_double_int__tc_matrix = {"_p_f_p_q_const__char_double_double_int__tc_matrix", "tc_matrix (*)(char const *,double,double,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_double_double_int_p_q_const__char_double_double_int__tc_matrix = {"_p_f_p_q_const__char_double_double_int_p_q_const__char_double_double_int__tc_matrix", "tc_matrix (*)(char const *,double,double,int,char const *,double,double,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_int_int__void = {"_p_f_p_q_const__char_int_int__void", "void (*)(char const *,int,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_int_int_tc_strings__void = {"_p_f_p_q_const__char_int_int_tc_strings__void", "void (*)(char const *,int,int,tc_strings)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_p_q_const__char__int = {"_p_f_p_q_const__char_p_q_const__char__int", "int (*)(char const *,char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_p_q_const__char__long = {"_p_f_p_q_const__char_p_q_const__char__long", "long (*)(char const *,char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_p_q_const__char__void = {"_p_f_p_q_const__char_p_q_const__char__void", "void (*)(char const *,char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_p_q_const__char_p_q_const__char__int = {"_p_f_p_q_const__char_p_q_const__char_p_q_const__char__int", "int (*)(char const *,char const *,char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char__void = {"_p_f_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char__void", "void (*)(char const *,char const *,char const *,char const *,char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_p_q_const__char_p_q_const__char_tc_matrix__int = {"_p_f_p_q_const__char_p_q_const__char_p_q_const__char_tc_matrix__int", "int (*)(char const *,char const *,char const *,tc_matrix)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_tc_items__int = {"_p_f_p_q_const__char_tc_items__int", "int (*)(char const *,tc_items)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_tc_items__tc_items = {"_p_f_p_q_const__char_tc_items__tc_items", "tc_items (*)(char const *,tc_items)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_tc_strings_p_q_const__char__int = {"_p_f_p_q_const__char_tc_strings_p_q_const__char__int", "int (*)(char const *,tc_strings,char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_tc_items__tc_matrix = {"_p_f_tc_items__tc_matrix", "tc_matrix (*)(tc_items)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_tc_items__tc_strings = {"_p_f_tc_items__tc_strings", "tc_strings (*)(tc_items)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_tc_items__void = {"_p_f_tc_items__void", "void (*)(tc_items)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_tc_items_p_q_const__char_p_q_const__char__long = {"_p_f_tc_items_p_q_const__char_p_q_const__char__long", "long (*)(tc_items,char const *,char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_tc_items_tc_matrix__void = {"_p_f_tc_items_tc_matrix__void", "void (*)(tc_items,tc_matrix)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_tc_items_tc_strings__tc_matrix = {"_p_f_tc_items_tc_strings__tc_matrix", "tc_matrix (*)(tc_items,tc_strings)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_tc_items_tc_strings__tc_strings = {"_p_f_tc_items_tc_strings__tc_strings", "tc_strings (*)(tc_items,tc_strings)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_tc_items_tc_strings__void = {"_p_f_tc_items_tc_strings__void", "void (*)(tc_items,tc_strings)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_tc_matrix__void = {"_p_f_tc_matrix__void", "void (*)(tc_matrix)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_tc_matrix_p_q_const__char__void = {"_p_f_tc_matrix_p_q_const__char__void", "void (*)(tc_matrix,char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_tc_matrix_p_q_const__char_p_q_const__char__void = {"_p_f_tc_matrix_p_q_const__char_p_q_const__char__void", "void (*)(tc_matrix,char const *,char const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_tc_strings__tc_items = {"_p_f_tc_strings__tc_items", "tc_items (*)(tc_strings)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_tc_strings__tc_matrix = {"_p_f_tc_strings__tc_matrix", "tc_matrix (*)(tc_strings)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_tc_table__void = {"_p_f_tc_table__void", "void (*)(tc_table)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_void__void = {"_p_f_void__void", "void (*)(void)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long = {"_p_long", "long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_char = {"_p_p_char", "char **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_tc_items = {"_p_tc_items", "tc_items *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_tc_matrix = {"_p_tc_matrix", "tc_matrix *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_tc_strings = {"_p_tc_strings", "tc_strings *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_tc_table = {"_p_tc_table", "tc_table *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_char,
  &_swigt__p_double,
  &_swigt__p_f___int,
  &_swigt__p_f___p_char,
  &_swigt__p_f___tc_items,
  &_swigt__p_f___tc_matrix,
  &_swigt__p_f___tc_strings,
  &_swigt__p_f___void,
  &_swigt__p_f_double__void,
  &_swigt__p_f_double_double__void,
  &_swigt__p_f_double_double_int__tc_matrix,
  &_swigt__p_f_int__tc_matrix,
  &_swigt__p_f_int__void,
  &_swigt__p_f_int_int__void,
  &_swigt__p_f_long__double,
  &_swigt__p_f_long__long,
  &_swigt__p_f_long__p_char,
  &_swigt__p_f_long__tc_items,
  &_swigt__p_f_long__tc_strings,
  &_swigt__p_f_long__void,
  &_swigt__p_f_long_double__void,
  &_swigt__p_f_long_double_double__void,
  &_swigt__p_f_long_double_double_int__void,
  &_swigt__p_f_long_double_int__void,
  &_swigt__p_f_long_int__void,
  &_swigt__p_f_long_long_int__double,
  &_swigt__p_f_long_long_int_double_double__void,
  &_swigt__p_f_long_p_f_void__void__void,
  &_swigt__p_f_long_p_q_const__char__double,
  &_swigt__p_f_long_p_q_const__char__int,
  &_swigt__p_f_long_p_q_const__char__p_char,
  &_swigt__p_f_long_p_q_const__char__tc_items,
  &_swigt__p_f_long_p_q_const__char__tc_matrix,
  &_swigt__p_f_long_p_q_const__char__tc_table,
  &_swigt__p_f_long_p_q_const__char__void,
  &_swigt__p_f_long_p_q_const__char_double__void,
  &_swigt__p_f_long_p_q_const__char_int__void,
  &_swigt__p_f_long_p_q_const__char_p_q_const__char__void,
  &_swigt__p_f_long_p_q_const__char_tc_matrix__void,
  &_swigt__p_f_long_p_q_const__char_tc_table__void,
  &_swigt__p_f_long_tc_items__void,
  &_swigt__p_f_long_tc_matrix_p_f_tc_matrix__void__void,
  &_swigt__p_f_long_tc_matrix_p_q_const__char_p_f_tc_matrix__void__void,
  &_swigt__p_f_p_f___void_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_int_int_int__void,
  &_swigt__p_f_p_q_const__char__double,
  &_swigt__p_f_p_q_const__char__int,
  &_swigt__p_f_p_q_const__char__long,
  &_swigt__p_f_p_q_const__char__p_char,
  &_swigt__p_f_p_q_const__char__tc_items,
  &_swigt__p_f_p_q_const__char__tc_matrix,
  &_swigt__p_f_p_q_const__char__tc_table,
  &_swigt__p_f_p_q_const__char__void,
  &_swigt__p_f_p_q_const__char_double__void,
  &_swigt__p_f_p_q_const__char_double_double__void,
  &_swigt__p_f_p_q_const__char_double_double_int__tc_matrix,
  &_swigt__p_f_p_q_const__char_double_double_int_p_q_const__char_double_double_int__tc_matrix,
  &_swigt__p_f_p_q_const__char_int_int__void,
  &_swigt__p_f_p_q_const__char_int_int_tc_strings__void,
  &_swigt__p_f_p_q_const__char_p_q_const__char__int,
  &_swigt__p_f_p_q_const__char_p_q_const__char__long,
  &_swigt__p_f_p_q_const__char_p_q_const__char__void,
  &_swigt__p_f_p_q_const__char_p_q_const__char_p_q_const__char__int,
  &_swigt__p_f_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char__void,
  &_swigt__p_f_p_q_const__char_p_q_const__char_p_q_const__char_tc_matrix__int,
  &_swigt__p_f_p_q_const__char_tc_items__int,
  &_swigt__p_f_p_q_const__char_tc_items__tc_items,
  &_swigt__p_f_p_q_const__char_tc_strings_p_q_const__char__int,
  &_swigt__p_f_tc_items__tc_matrix,
  &_swigt__p_f_tc_items__tc_strings,
  &_swigt__p_f_tc_items__void,
  &_swigt__p_f_tc_items_p_q_const__char_p_q_const__char__long,
  &_swigt__p_f_tc_items_tc_matrix__void,
  &_swigt__p_f_tc_items_tc_strings__tc_matrix,
  &_swigt__p_f_tc_items_tc_strings__tc_strings,
  &_swigt__p_f_tc_items_tc_strings__void,
  &_swigt__p_f_tc_matrix__void,
  &_swigt__p_f_tc_matrix_p_q_const__char__void,
  &_swigt__p_f_tc_matrix_p_q_const__char_p_q_const__char__void,
  &_swigt__p_f_tc_strings__tc_items,
  &_swigt__p_f_tc_strings__tc_matrix,
  &_swigt__p_f_tc_table__void,
  &_swigt__p_f_void__void,
  &_swigt__p_long,
  &_swigt__p_p_char,
  &_swigt__p_tc_items,
  &_swigt__p_tc_matrix,
  &_swigt__p_tc_strings,
  &_swigt__p_tc_table,
};

static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f___int[] = {  {&_swigt__p_f___int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f___p_char[] = {  {&_swigt__p_f___p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f___tc_items[] = {  {&_swigt__p_f___tc_items, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f___tc_matrix[] = {  {&_swigt__p_f___tc_matrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f___tc_strings[] = {  {&_swigt__p_f___tc_strings, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f___void[] = {  {&_swigt__p_f___void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_double__void[] = {  {&_swigt__p_f_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_double_double__void[] = {  {&_swigt__p_f_double_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_double_double_int__tc_matrix[] = {  {&_swigt__p_f_double_double_int__tc_matrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int__tc_matrix[] = {  {&_swigt__p_f_int__tc_matrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int__void[] = {  {&_swigt__p_f_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_int__void[] = {  {&_swigt__p_f_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long__double[] = {  {&_swigt__p_f_long__double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long__long[] = {  {&_swigt__p_f_long__long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long__p_char[] = {  {&_swigt__p_f_long__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long__tc_items[] = {  {&_swigt__p_f_long__tc_items, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long__tc_strings[] = {  {&_swigt__p_f_long__tc_strings, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long__void[] = {  {&_swigt__p_f_long__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_double__void[] = {  {&_swigt__p_f_long_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_double_double__void[] = {  {&_swigt__p_f_long_double_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_double_double_int__void[] = {  {&_swigt__p_f_long_double_double_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_double_int__void[] = {  {&_swigt__p_f_long_double_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_int__void[] = {  {&_swigt__p_f_long_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_long_int__double[] = {  {&_swigt__p_f_long_long_int__double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_long_int_double_double__void[] = {  {&_swigt__p_f_long_long_int_double_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_p_f_void__void__void[] = {  {&_swigt__p_f_long_p_f_void__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_p_q_const__char__double[] = {  {&_swigt__p_f_long_p_q_const__char__double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_p_q_const__char__int[] = {  {&_swigt__p_f_long_p_q_const__char__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_p_q_const__char__p_char[] = {  {&_swigt__p_f_long_p_q_const__char__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_p_q_const__char__tc_items[] = {  {&_swigt__p_f_long_p_q_const__char__tc_items, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_p_q_const__char__tc_matrix[] = {  {&_swigt__p_f_long_p_q_const__char__tc_matrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_p_q_const__char__tc_table[] = {  {&_swigt__p_f_long_p_q_const__char__tc_table, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_p_q_const__char__void[] = {  {&_swigt__p_f_long_p_q_const__char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_p_q_const__char_double__void[] = {  {&_swigt__p_f_long_p_q_const__char_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_p_q_const__char_int__void[] = {  {&_swigt__p_f_long_p_q_const__char_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_p_q_const__char_p_q_const__char__void[] = {  {&_swigt__p_f_long_p_q_const__char_p_q_const__char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_p_q_const__char_tc_matrix__void[] = {  {&_swigt__p_f_long_p_q_const__char_tc_matrix__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_p_q_const__char_tc_table__void[] = {  {&_swigt__p_f_long_p_q_const__char_tc_table__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_tc_items__void[] = {  {&_swigt__p_f_long_tc_items__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_tc_matrix_p_f_tc_matrix__void__void[] = {  {&_swigt__p_f_long_tc_matrix_p_f_tc_matrix__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_long_tc_matrix_p_q_const__char_p_f_tc_matrix__void__void[] = {  {&_swigt__p_f_long_tc_matrix_p_q_const__char_p_f_tc_matrix__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_f___void_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_int_int_int__void[] = {  {&_swigt__p_f_p_f___void_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char__double[] = {  {&_swigt__p_f_p_q_const__char__double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char__int[] = {  {&_swigt__p_f_p_q_const__char__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char__long[] = {  {&_swigt__p_f_p_q_const__char__long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char__p_char[] = {  {&_swigt__p_f_p_q_const__char__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char__tc_items[] = {  {&_swigt__p_f_p_q_const__char__tc_items, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char__tc_matrix[] = {  {&_swigt__p_f_p_q_const__char__tc_matrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char__tc_table[] = {  {&_swigt__p_f_p_q_const__char__tc_table, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char__void[] = {  {&_swigt__p_f_p_q_const__char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_double__void[] = {  {&_swigt__p_f_p_q_const__char_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_double_double__void[] = {  {&_swigt__p_f_p_q_const__char_double_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_double_double_int__tc_matrix[] = {  {&_swigt__p_f_p_q_const__char_double_double_int__tc_matrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_double_double_int_p_q_const__char_double_double_int__tc_matrix[] = {  {&_swigt__p_f_p_q_const__char_double_double_int_p_q_const__char_double_double_int__tc_matrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_int_int__void[] = {  {&_swigt__p_f_p_q_const__char_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_int_int_tc_strings__void[] = {  {&_swigt__p_f_p_q_const__char_int_int_tc_strings__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_p_q_const__char__int[] = {  {&_swigt__p_f_p_q_const__char_p_q_const__char__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_p_q_const__char__long[] = {  {&_swigt__p_f_p_q_const__char_p_q_const__char__long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_p_q_const__char__void[] = {  {&_swigt__p_f_p_q_const__char_p_q_const__char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_p_q_const__char_p_q_const__char__int[] = {  {&_swigt__p_f_p_q_const__char_p_q_const__char_p_q_const__char__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char__void[] = {  {&_swigt__p_f_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_p_q_const__char_p_q_const__char_tc_matrix__int[] = {  {&_swigt__p_f_p_q_const__char_p_q_const__char_p_q_const__char_tc_matrix__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_tc_items__int[] = {  {&_swigt__p_f_p_q_const__char_tc_items__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_tc_items__tc_items[] = {  {&_swigt__p_f_p_q_const__char_tc_items__tc_items, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_tc_strings_p_q_const__char__int[] = {  {&_swigt__p_f_p_q_const__char_tc_strings_p_q_const__char__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_tc_items__tc_matrix[] = {  {&_swigt__p_f_tc_items__tc_matrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_tc_items__tc_strings[] = {  {&_swigt__p_f_tc_items__tc_strings, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_tc_items__void[] = {  {&_swigt__p_f_tc_items__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_tc_items_p_q_const__char_p_q_const__char__long[] = {  {&_swigt__p_f_tc_items_p_q_const__char_p_q_const__char__long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_tc_items_tc_matrix__void[] = {  {&_swigt__p_f_tc_items_tc_matrix__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_tc_items_tc_strings__tc_matrix[] = {  {&_swigt__p_f_tc_items_tc_strings__tc_matrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_tc_items_tc_strings__tc_strings[] = {  {&_swigt__p_f_tc_items_tc_strings__tc_strings, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_tc_items_tc_strings__void[] = {  {&_swigt__p_f_tc_items_tc_strings__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_tc_matrix__void[] = {  {&_swigt__p_f_tc_matrix__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_tc_matrix_p_q_const__char__void[] = {  {&_swigt__p_f_tc_matrix_p_q_const__char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_tc_matrix_p_q_const__char_p_q_const__char__void[] = {  {&_swigt__p_f_tc_matrix_p_q_const__char_p_q_const__char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_tc_strings__tc_items[] = {  {&_swigt__p_f_tc_strings__tc_items, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_tc_strings__tc_matrix[] = {  {&_swigt__p_f_tc_strings__tc_matrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_tc_table__void[] = {  {&_swigt__p_f_tc_table__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_void__void[] = {  {&_swigt__p_f_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long[] = {  {&_swigt__p_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_char[] = {  {&_swigt__p_p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_tc_items[] = {  {&_swigt__p_tc_items, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_tc_matrix[] = {  {&_swigt__p_tc_matrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_tc_strings[] = {  {&_swigt__p_tc_strings, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_tc_table[] = {  {&_swigt__p_tc_table, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_char,
  _swigc__p_double,
  _swigc__p_f___int,
  _swigc__p_f___p_char,
  _swigc__p_f___tc_items,
  _swigc__p_f___tc_matrix,
  _swigc__p_f___tc_strings,
  _swigc__p_f___void,
  _swigc__p_f_double__void,
  _swigc__p_f_double_double__void,
  _swigc__p_f_double_double_int__tc_matrix,
  _swigc__p_f_int__tc_matrix,
  _swigc__p_f_int__void,
  _swigc__p_f_int_int__void,
  _swigc__p_f_long__double,
  _swigc__p_f_long__long,
  _swigc__p_f_long__p_char,
  _swigc__p_f_long__tc_items,
  _swigc__p_f_long__tc_strings,
  _swigc__p_f_long__void,
  _swigc__p_f_long_double__void,
  _swigc__p_f_long_double_double__void,
  _swigc__p_f_long_double_double_int__void,
  _swigc__p_f_long_double_int__void,
  _swigc__p_f_long_int__void,
  _swigc__p_f_long_long_int__double,
  _swigc__p_f_long_long_int_double_double__void,
  _swigc__p_f_long_p_f_void__void__void,
  _swigc__p_f_long_p_q_const__char__double,
  _swigc__p_f_long_p_q_const__char__int,
  _swigc__p_f_long_p_q_const__char__p_char,
  _swigc__p_f_long_p_q_const__char__tc_items,
  _swigc__p_f_long_p_q_const__char__tc_matrix,
  _swigc__p_f_long_p_q_const__char__tc_table,
  _swigc__p_f_long_p_q_const__char__void,
  _swigc__p_f_long_p_q_const__char_double__void,
  _swigc__p_f_long_p_q_const__char_int__void,
  _swigc__p_f_long_p_q_const__char_p_q_const__char__void,
  _swigc__p_f_long_p_q_const__char_tc_matrix__void,
  _swigc__p_f_long_p_q_const__char_tc_table__void,
  _swigc__p_f_long_tc_items__void,
  _swigc__p_f_long_tc_matrix_p_f_tc_matrix__void__void,
  _swigc__p_f_long_tc_matrix_p_q_const__char_p_f_tc_matrix__void__void,
  _swigc__p_f_p_f___void_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_int_int_int__void,
  _swigc__p_f_p_q_const__char__double,
  _swigc__p_f_p_q_const__char__int,
  _swigc__p_f_p_q_const__char__long,
  _swigc__p_f_p_q_const__char__p_char,
  _swigc__p_f_p_q_const__char__tc_items,
  _swigc__p_f_p_q_const__char__tc_matrix,
  _swigc__p_f_p_q_const__char__tc_table,
  _swigc__p_f_p_q_const__char__void,
  _swigc__p_f_p_q_const__char_double__void,
  _swigc__p_f_p_q_const__char_double_double__void,
  _swigc__p_f_p_q_const__char_double_double_int__tc_matrix,
  _swigc__p_f_p_q_const__char_double_double_int_p_q_const__char_double_double_int__tc_matrix,
  _swigc__p_f_p_q_const__char_int_int__void,
  _swigc__p_f_p_q_const__char_int_int_tc_strings__void,
  _swigc__p_f_p_q_const__char_p_q_const__char__int,
  _swigc__p_f_p_q_const__char_p_q_const__char__long,
  _swigc__p_f_p_q_const__char_p_q_const__char__void,
  _swigc__p_f_p_q_const__char_p_q_const__char_p_q_const__char__int,
  _swigc__p_f_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char_p_q_const__char__void,
  _swigc__p_f_p_q_const__char_p_q_const__char_p_q_const__char_tc_matrix__int,
  _swigc__p_f_p_q_const__char_tc_items__int,
  _swigc__p_f_p_q_const__char_tc_items__tc_items,
  _swigc__p_f_p_q_const__char_tc_strings_p_q_const__char__int,
  _swigc__p_f_tc_items__tc_matrix,
  _swigc__p_f_tc_items__tc_strings,
  _swigc__p_f_tc_items__void,
  _swigc__p_f_tc_items_p_q_const__char_p_q_const__char__long,
  _swigc__p_f_tc_items_tc_matrix__void,
  _swigc__p_f_tc_items_tc_strings__tc_matrix,
  _swigc__p_f_tc_items_tc_strings__tc_strings,
  _swigc__p_f_tc_items_tc_strings__void,
  _swigc__p_f_tc_matrix__void,
  _swigc__p_f_tc_matrix_p_q_const__char__void,
  _swigc__p_f_tc_matrix_p_q_const__char_p_q_const__char__void,
  _swigc__p_f_tc_strings__tc_items,
  _swigc__p_f_tc_strings__tc_matrix,
  _swigc__p_f_tc_table__void,
  _swigc__p_f_void__void,
  _swigc__p_long,
  _swigc__p_p_char,
  _swigc__p_tc_items,
  _swigc__p_tc_matrix,
  _swigc__p_tc_strings,
  _swigc__p_tc_table,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */


/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;

  clientdata = clientdata;

  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }

  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);

    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }

  /* When multiple interpeters are used, a module could have already been initialized in
     a different interpreter, but not yet have a pointer in this interpreter.
     In this case, we do not want to continue adding types... everything should be
     set up already */
  if (init == 0) return;

  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
  
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif

    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
	type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }

    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
    
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
	if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
	if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
	  printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
	  cast->type = ret;
	  ret = 0;
	} else {
	  /* Check for casting already in the list */
	  swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
	  if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
	  if (!ocast) ret = 0;
	}
      }

      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
	printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;

#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
  printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;

  if (init_run) return;
  init_run = 1;

  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
            SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{ /* c-mode */
#endif
}
#endif


SWIGEXPORT void SWIG_init(void) {

}
#include <R_ext/Rdynload.h>

SWIGINTERN R_CallMethodDef CallEntries[] = {
   {"R_swig_tc_screenWidth", (DL_FUNC) &R_swig_tc_screenWidth, 1},
   {"R_swig_tc_getPlotData", (DL_FUNC) &R_swig_tc_getPlotData, 2},
   {"R_swig_tc_gnuplot", (DL_FUNC) &R_swig_tc_gnuplot, 1},
   {"R_swig_tc_exportSBML", (DL_FUNC) &R_swig_tc_exportSBML, 1},
   {"R_swig_tc_importSBML", (DL_FUNC) &R_swig_tc_importSBML, 1},
   {"R_swig_tc_getUnscaledElasticities", (DL_FUNC) &R_swig_tc_getUnscaledElasticities, 1},
   {"R_swig_tc_getScaledElasticities", (DL_FUNC) &R_swig_tc_getScaledElasticities, 1},
   {"R_swig_tc_getString", (DL_FUNC) &R_swig_tc_getString, 2},
   {"R_swig_tc_setString", (DL_FUNC) &R_swig_tc_setString, 3},
   {"R_swig_tc_setSequence", (DL_FUNC) &R_swig_tc_setSequence, 2},
   {"R_swig_tc_getSBMLString", (DL_FUNC) &R_swig_tc_getSBMLString, 0},
   {"R_swig_tc_getTextAttribute", (DL_FUNC) &R_swig_tc_getTextAttribute, 2},
   {"R_swig_tc_setTextAttribute", (DL_FUNC) &R_swig_tc_setTextAttribute, 3},
   {"R_swig_tc_insertConnection", (DL_FUNC) &R_swig_tc_insertConnection, 4},
   {"R_swig_tc_loadLibrary", (DL_FUNC) &R_swig_tc_loadLibrary, 1},
   {"R_swig_tc_clusterPlots", (DL_FUNC) &R_swig_tc_clusterPlots, 2},
   {"R_swig_tc_getNames", (DL_FUNC) &R_swig_tc_getNames, 2},
   {"R_swig_tc_separate", (DL_FUNC) &R_swig_tc_separate, 1},
   {"R_swig_tc_plot", (DL_FUNC) &R_swig_tc_plot, 2},
   {"R_swig_tc_ConnectionInsertion_api", (DL_FUNC) &R_swig_tc_ConnectionInsertion_api, 2},
   {"R_swig_tc_createStringsArray", (DL_FUNC) &R_swig_tc_createStringsArray, 2},
   {"R_swig_tc_createItemsArray", (DL_FUNC) &R_swig_tc_createItemsArray, 2},
   {"R_swig_tc_deleteItemsArray", (DL_FUNC) &R_swig_tc_deleteItemsArray, 1},
   {"R_swig_tc_deleteStringsArray", (DL_FUNC) &R_swig_tc_deleteStringsArray, 1},
   {"R_swig_tc_setDisplayLabelColor", (DL_FUNC) &R_swig_tc_setDisplayLabelColor, 2},
   {"R_swig_tc_getStoichiometryFor", (DL_FUNC) &R_swig_tc_getStoichiometryFor, 2},
   {"R_swig_tc_setStoichiometryFor", (DL_FUNC) &R_swig_tc_setStoichiometryFor, 2},
   {"R_swig_tc_getFixedVariables", (DL_FUNC) &R_swig_tc_getFixedVariables, 2},
   {"R_swig_tc_getParametersAndFixedVariables", (DL_FUNC) &R_swig_tc_getParametersAndFixedVariables, 2},
   {"R_swig_tc_surface", (DL_FUNC) &R_swig_tc_surface, 2},
   {"R_swig_tc_getParent", (DL_FUNC) &R_swig_tc_getParent, 2},
   {"R_swig_tc_LabelingTool_api", (DL_FUNC) &R_swig_tc_LabelingTool_api, 6},
   {"R_swig_tc_GroupHandlerTool_api", (DL_FUNC) &R_swig_tc_GroupHandlerTool_api, 2},
   {"R_swig_tc_StoichiometryTool_api", (DL_FUNC) &R_swig_tc_StoichiometryTool_api, 4},
   {"R_swig_tc_OctaveTool_api", (DL_FUNC) &R_swig_tc_OctaveTool_api, 3},
   {"R_swig_tc_PythonTool_api", (DL_FUNC) &R_swig_tc_PythonTool_api, 3},
   {"R_swig_tc_PlotTool_api", (DL_FUNC) &R_swig_tc_PlotTool_api, 12},
   {"R_swig_tc_SimulationEventsTool_api", (DL_FUNC) &R_swig_tc_SimulationEventsTool_api, 3},
   {"R_swig_tc_AssignmentFunctionsTool_api", (DL_FUNC) &R_swig_tc_AssignmentFunctionsTool_api, 3},
   {"R_swig_tc_AutoGeneRegulatoryTool_api", (DL_FUNC) &R_swig_tc_AutoGeneRegulatoryTool_api, 5},
   {"R_swig_tc_ModuleTool_api", (DL_FUNC) &R_swig_tc_ModuleTool_api, 2},
   {"R_swig_tc_getColumnName", (DL_FUNC) &R_swig_tc_getColumnName, 2},
   {"R_swig_tc_setColumnName", (DL_FUNC) &R_swig_tc_setColumnName, 3},
   {"R_swig_tc_getControlPointX", (DL_FUNC) &R_swig_tc_getControlPointX, 4},
   {"R_swig_tc_getCenterPointX", (DL_FUNC) &R_swig_tc_getCenterPointX, 2},
   {"R_swig_tc_createTable", (DL_FUNC) &R_swig_tc_createTable, 3},
   {"R_swig_tc_deleteTable", (DL_FUNC) &R_swig_tc_deleteTable, 1},
   {"R_swig_tc_thisThread", (DL_FUNC) &R_swig_tc_thisThread, 1},
   {"R_swig_tc_getControlPointY", (DL_FUNC) &R_swig_tc_getControlPointY, 4},
   {"R_swig_tc_getCenterPointY", (DL_FUNC) &R_swig_tc_getCenterPointY, 2},
   {"R_swig_tc_getAllTextNamed", (DL_FUNC) &R_swig_tc_getAllTextNamed, 3},
   {"R_swig_tc_getStoichiometry", (DL_FUNC) &R_swig_tc_getStoichiometry, 2},
   {"R_swig_tc_setStoichiometry", (DL_FUNC) &R_swig_tc_setStoichiometry, 2},
   {"R_swig_tc_reducedStoichiometry", (DL_FUNC) &R_swig_tc_reducedStoichiometry, 1},
   {"R_swig_tc_setTextValues", (DL_FUNC) &R_swig_tc_setTextValues, 1},
   {"R_swig_tc_setNumericalValues", (DL_FUNC) &R_swig_tc_setNumericalValues, 1},
   {"R_swig_tc_openUrl", (DL_FUNC) &R_swig_tc_openUrl, 1},
   {"R_swig_tc_getInitialValues", (DL_FUNC) &R_swig_tc_getInitialValues, 2},
   {"R_swig_tc_setInitialValues", (DL_FUNC) &R_swig_tc_setInitialValues, 2},
   {"R_swig_tc_printOutTable", (DL_FUNC) &R_swig_tc_printOutTable, 1},
   {"R_swig_tc_getNumber", (DL_FUNC) &R_swig_tc_getNumber, 2},
   {"R_swig_tc_substituteEmptyModel", (DL_FUNC) &R_swig_tc_substituteEmptyModel, 1},
   {"R_swig_tc_isWindows", (DL_FUNC) &R_swig_tc_isWindows, 1},
   {"R_swig_tc_items_items_set", (DL_FUNC) &R_swig_tc_items_items_set, 2},
   {"R_swig_tc_ModelFileGenerator_api", (DL_FUNC) &R_swig_tc_ModelFileGenerator_api, 1},
   {"R_swig_tc_zoom", (DL_FUNC) &R_swig_tc_zoom, 1},
   {"R_swig_tc_setStraight", (DL_FUNC) &R_swig_tc_setStraight, 2},
   {"R_swig_tc_setAllStraight", (DL_FUNC) &R_swig_tc_setAllStraight, 1},
   {"R_swig_tc_getAntimonyString", (DL_FUNC) &R_swig_tc_getAntimonyString, 0},
   {"R_swig_tc_getRate", (DL_FUNC) &R_swig_tc_getRate, 1},
   {"R_swig_tc_setRate", (DL_FUNC) &R_swig_tc_setRate, 2},
   {"R_swig_tc_strings_length_set", (DL_FUNC) &R_swig_tc_strings_length_set, 2},
   {"R_swig_tc_items_length_set", (DL_FUNC) &R_swig_tc_items_length_set, 2},
   {"R_swig_tc_printFile", (DL_FUNC) &R_swig_tc_printFile, 1},
   {"R_swig_tc_getSteadyState", (DL_FUNC) &R_swig_tc_getSteadyState, 1},
   {"R_swig_tc_getParametersExcept", (DL_FUNC) &R_swig_tc_getParametersExcept, 3},
   {"R_swig_tc_exportMatlab", (DL_FUNC) &R_swig_tc_exportMatlab, 1},
   {"R_swig_tc_table_rows_set", (DL_FUNC) &R_swig_tc_table_rows_set, 2},
   {"R_swig_tc_matrix_rows_set", (DL_FUNC) &R_swig_tc_matrix_rows_set, 2},
   {"R_swig_tc_setNumericalData", (DL_FUNC) &R_swig_tc_setNumericalData, 3},
   {"R_swig_tc_getNumericalData", (DL_FUNC) &R_swig_tc_getNumericalData, 3},
   {"R_swig_tc_setCenterPoint", (DL_FUNC) &R_swig_tc_setCenterPoint, 3},
   {"R_swig_tc_getRowIndex", (DL_FUNC) &R_swig_tc_getRowIndex, 3},
   {"R_swig_tc_insertAnnotations", (DL_FUNC) &R_swig_tc_insertAnnotations, 3},
   {"R_swig_tc_annotations", (DL_FUNC) &R_swig_tc_annotations, 0},
   {"R_swig_tc_getEigenvalues", (DL_FUNC) &R_swig_tc_getEigenvalues, 1},
   {"R_swig_tc_displayNumber", (DL_FUNC) &R_swig_tc_displayNumber, 2},
   {"R_swig_tc_addInputWindowOptions", (DL_FUNC) &R_swig_tc_addInputWindowOptions, 4},
   {"R_swig_tc_moveSelected", (DL_FUNC) &R_swig_tc_moveSelected, 2},
   {"R_swig_tc_appDir", (DL_FUNC) &R_swig_tc_appDir, 0},
   {"R_swig_tc_enableAssignmentRulesReordering", (DL_FUNC) &R_swig_tc_enableAssignmentRulesReordering, 1},
   {"R_swig_tc_getUnscaledConcentrationCC", (DL_FUNC) &R_swig_tc_getUnscaledConcentrationCC, 1},
   {"R_swig_tc_getScaledConcentrationCC", (DL_FUNC) &R_swig_tc_getScaledConcentrationCC, 1},
   {"R_swig_tc_rename", (DL_FUNC) &R_swig_tc_rename, 2},
   {"R_swig_tc_simulateDeterministic", (DL_FUNC) &R_swig_tc_simulateDeterministic, 4},
   {"R_swig_new_tc_strings", (DL_FUNC) &R_swig_new_tc_strings, 0},
   {"R_swig_delete_tc_strings", (DL_FUNC) &R_swig_delete_tc_strings, 1},
   {"R_swig_tc_getMatrixValue", (DL_FUNC) &R_swig_tc_getMatrixValue, 4},
   {"R_swig_tc_setMatrixValue", (DL_FUNC) &R_swig_tc_setMatrixValue, 4},
   {"R_swig_tc_clear", (DL_FUNC) &R_swig_tc_clear, 0},
   {"R_swig_tc_table_cols_get", (DL_FUNC) &R_swig_tc_table_cols_get, 2},
   {"R_swig_tc_matrix_cols_get", (DL_FUNC) &R_swig_tc_matrix_cols_get, 2},
   {"R_swig_tc_callWhenExiting", (DL_FUNC) &R_swig_tc_callWhenExiting, 1},
   {"R_swig_tc_setColor", (DL_FUNC) &R_swig_tc_setColor, 3},
   {"R_swig_tc_getColor", (DL_FUNC) &R_swig_tc_getColor, 1},
   {"R_swig_tc_getConnectedNodes", (DL_FUNC) &R_swig_tc_getConnectedNodes, 2},
   {"R_swig_tc_getForcingFunctionAssignments", (DL_FUNC) &R_swig_tc_getForcingFunctionAssignments, 2},
   {"R_swig_tc_getNumbers", (DL_FUNC) &R_swig_tc_getNumbers, 2},
   {"R_swig_ApplySpringForce", (DL_FUNC) &R_swig_ApplySpringForce, 6},
   {"R_swig_tc_isLinux", (DL_FUNC) &R_swig_tc_isLinux, 1},
   {"R_swig_tc_setParameterByName", (DL_FUNC) &R_swig_tc_setParameterByName, 2},
   {"R_swig_tc_getItem", (DL_FUNC) &R_swig_tc_getItem, 3},
   {"R_swig_tc_setItem", (DL_FUNC) &R_swig_tc_setItem, 3},
   {"R_swig_tc_errorReport", (DL_FUNC) &R_swig_tc_errorReport, 1},
   {"R_swig_tc_getNumericalValue", (DL_FUNC) &R_swig_tc_getNumericalValue, 2},
   {"R_swig_tc_setNumericalValue", (DL_FUNC) &R_swig_tc_setNumericalValue, 2},
   {"R_swig_tc_compileAndRun", (DL_FUNC) &R_swig_tc_compileAndRun, 3},
   {"R_swig_tc_steadyStateScan2D", (DL_FUNC) &R_swig_tc_steadyStateScan2D, 9},
   {"R_swig_tc_getTextDataNames", (DL_FUNC) &R_swig_tc_getTextDataNames, 2},
   {"R_swig_tc_getNumericalDataNames", (DL_FUNC) &R_swig_tc_getNumericalDataNames, 2},
   {"R_swig_tc_compileBuildLoad", (DL_FUNC) &R_swig_tc_compileBuildLoad, 4},
   {"R_swig_tc_screenshot", (DL_FUNC) &R_swig_tc_screenshot, 3},
   {"R_swig_tc_callback", (DL_FUNC) &R_swig_tc_callback, 1},
   {"R_swig_tc_changeNodeImage", (DL_FUNC) &R_swig_tc_changeNodeImage, 2},
   {"R_swig_tc_table_strings_get", (DL_FUNC) &R_swig_tc_table_strings_get, 1},
   {"R_swig_tc_strings_strings_get", (DL_FUNC) &R_swig_tc_strings_strings_get, 1},
   {"R_swig_tc_exportAntimony", (DL_FUNC) &R_swig_tc_exportAntimony, 1},
   {"R_swig_tc_importAntimony", (DL_FUNC) &R_swig_tc_importAntimony, 1},
   {"R_swig_tc_table_colnames_get", (DL_FUNC) &R_swig_tc_table_colnames_get, 1},
   {"R_swig_tc_table_rownames_get", (DL_FUNC) &R_swig_tc_table_rownames_get, 1},
   {"R_swig_tc_matrix_colnames_get", (DL_FUNC) &R_swig_tc_matrix_colnames_get, 1},
   {"R_swig_tc_matrix_rownames_get", (DL_FUNC) &R_swig_tc_matrix_rownames_get, 1},
   {"R_swig_tc_matrix_values_get", (DL_FUNC) &R_swig_tc_matrix_values_get, 1},
   {"R_swig_tc_setLineWidth", (DL_FUNC) &R_swig_tc_setLineWidth, 3},
   {"R_swig_tc_selectedItems", (DL_FUNC) &R_swig_tc_selectedItems, 1},
   {"R_swig_tc_getWidth", (DL_FUNC) &R_swig_tc_getWidth, 2},
   {"R_swig_tc_itemsOfFamilyFrom", (DL_FUNC) &R_swig_tc_itemsOfFamilyFrom, 3},
   {"R_swig_tc_partsIn", (DL_FUNC) &R_swig_tc_partsIn, 2},
   {"R_swig_tc_calcDerivatives", (DL_FUNC) &R_swig_tc_calcDerivatives, 1},
   {"R_swig_tc_changeArrowHead", (DL_FUNC) &R_swig_tc_changeArrowHead, 2},
   {"R_swig_tc_getUnscaledFluxCC", (DL_FUNC) &R_swig_tc_getUnscaledFluxCC, 1},
   {"R_swig_tc_getScaledFluxCC", (DL_FUNC) &R_swig_tc_getScaledFluxCC, 1},
   {"R_swig_tc_DynamicLibraryMenu_api", (DL_FUNC) &R_swig_tc_DynamicLibraryMenu_api, 1},
   {"R_swig_tc_scatterplot", (DL_FUNC) &R_swig_tc_scatterplot, 2},
   {"R_swig_tc_holdPlot", (DL_FUNC) &R_swig_tc_holdPlot, 1},
   {"R_swig_tc_setTextAttributeByName", (DL_FUNC) &R_swig_tc_setTextAttributeByName, 2},
   {"R_swig_tc_addPythonPlugin", (DL_FUNC) &R_swig_tc_addPythonPlugin, 5},
   {"R_swig_tc_partsUpstream", (DL_FUNC) &R_swig_tc_partsUpstream, 2},
   {"R_swig_tc_partsDownstream", (DL_FUNC) &R_swig_tc_partsDownstream, 2},
   {"R_swig_tc_COPASI_api", (DL_FUNC) &R_swig_tc_COPASI_api, 25},
   {"R_swig_tc_getJacobian", (DL_FUNC) &R_swig_tc_getJacobian, 1},
   {"R_swig_tc_setTextData", (DL_FUNC) &R_swig_tc_setTextData, 3},
   {"R_swig_tc_getTextData", (DL_FUNC) &R_swig_tc_getTextData, 3},
   {"R_swig_tc_getUniqueName", (DL_FUNC) &R_swig_tc_getUniqueName, 1},
   {"R_swig_tc_getStringFromList", (DL_FUNC) &R_swig_tc_getStringFromList, 4},
   {"R_swig_tc_isMac", (DL_FUNC) &R_swig_tc_isMac, 1},
   {"R_swig_tc_steadyStateScan", (DL_FUNC) &R_swig_tc_steadyStateScan, 5},
   {"R_swig_tc_getColumnIndex", (DL_FUNC) &R_swig_tc_getColumnIndex, 3},
   {"R_swig_tc_setPos", (DL_FUNC) &R_swig_tc_setPos, 3},
   {"R_swig_tc_Main_api_initialize", (DL_FUNC) &R_swig_tc_Main_api_initialize, 96},
   {"R_swig_tc_CThread_api_initialize", (DL_FUNC) &R_swig_tc_CThread_api_initialize, 4},
   {"R_swig_tc_setLogScale", (DL_FUNC) &R_swig_tc_setLogScale, 1},
   {"R_swig_tc_callFunction", (DL_FUNC) &R_swig_tc_callFunction, 1},
   {"R_swig_tc_addFunction", (DL_FUNC) &R_swig_tc_addFunction, 9},
   {"R_swig_tc_getForcingFunctionNames", (DL_FUNC) &R_swig_tc_getForcingFunctionNames, 2},
   {"R_swig_tc_addForcingFunction", (DL_FUNC) &R_swig_tc_addForcingFunction, 3},
   {"R_swig_tc_askQuestion", (DL_FUNC) &R_swig_tc_askQuestion, 2},
   {"R_swig_tc_transpose", (DL_FUNC) &R_swig_tc_transpose, 2},
   {"R_swig_tc_getTextValueUsingRegexp", (DL_FUNC) &R_swig_tc_getTextValueUsingRegexp, 2},
   {"R_swig_tc_getNumericalValueUsingRegexp", (DL_FUNC) &R_swig_tc_getNumericalValueUsingRegexp, 2},
   {"R_swig_tc_findItemsUsingRegexp", (DL_FUNC) &R_swig_tc_findItemsUsingRegexp, 2},
   {"R_swig_tc_getFamily", (DL_FUNC) &R_swig_tc_getFamily, 1},
   {"R_swig_tc_itemsOfFamily", (DL_FUNC) &R_swig_tc_itemsOfFamily, 2},
   {"R_swig_tc_find", (DL_FUNC) &R_swig_tc_find, 2},
   {"R_swig_tc_getChildren", (DL_FUNC) &R_swig_tc_getChildren, 2},
   {"R_swig_tc_elementaryFluxModes", (DL_FUNC) &R_swig_tc_elementaryFluxModes, 1},
   {"R_swig_tc_getX", (DL_FUNC) &R_swig_tc_getX, 2},
   {"R_swig_tc_getY", (DL_FUNC) &R_swig_tc_getY, 2},
   {"R_swig_tc_findItems", (DL_FUNC) &R_swig_tc_findItems, 2},
   {"R_swig_tc_savePlot", (DL_FUNC) &R_swig_tc_savePlot, 1},
   {"R_swig_tc_simulateHybrid", (DL_FUNC) &R_swig_tc_simulateHybrid, 4},
   {"R_swig_tc_calcFluxes", (DL_FUNC) &R_swig_tc_calcFluxes, 1},
   {"R_swig_tc_getParameters", (DL_FUNC) &R_swig_tc_getParameters, 2},
   {"R_swig_tc_setParameters", (DL_FUNC) &R_swig_tc_setParameters, 2},
   {"R_swig_tc_updateParameters", (DL_FUNC) &R_swig_tc_updateParameters, 1},
   {"R_swig_tc_substituteOriginalModel", (DL_FUNC) &R_swig_tc_substituteOriginalModel, 1},
   {"R_swig_tc_createInputWindow", (DL_FUNC) &R_swig_tc_createInputWindow, 3},
   {"R_swig_tc_printMatrix", (DL_FUNC) &R_swig_tc_printMatrix, 1},
   {"R_swig_delete_tc_matrix", (DL_FUNC) &R_swig_delete_tc_matrix, 1},
   {"R_swig_new_tc_matrix", (DL_FUNC) &R_swig_new_tc_matrix, 0},
   {"R_swig_tc_printOutMatrix", (DL_FUNC) &R_swig_tc_printOutMatrix, 1},
   {"R_swig_tc_LMatrix", (DL_FUNC) &R_swig_tc_LMatrix, 1},
   {"R_swig_tc_getPos", (DL_FUNC) &R_swig_tc_getPos, 2},
   {"R_swig_tc_ParametersTool_Text_api", (DL_FUNC) &R_swig_tc_ParametersTool_Text_api, 3},
   {"R_swig_tc_createSliders", (DL_FUNC) &R_swig_tc_createSliders, 2},
   {"R_swig_tc_compileBuildLoadSliders", (DL_FUNC) &R_swig_tc_compileBuildLoadSliders, 5},
   {"R_swig_tc_getTableValue", (DL_FUNC) &R_swig_tc_getTableValue, 3},
   {"R_swig_tc_setTableValue", (DL_FUNC) &R_swig_tc_setTableValue, 4},
   {"R_swig_tc_setSize", (DL_FUNC) &R_swig_tc_setSize, 3},
   {"R_swig_tc_rotate", (DL_FUNC) &R_swig_tc_rotate, 2},
   {"R_swig_tc_displayText", (DL_FUNC) &R_swig_tc_displayText, 2},
   {"R_swig_tc_addOctavePlugin", (DL_FUNC) &R_swig_tc_addOctavePlugin, 5},
   {"R_swig_tc_merge", (DL_FUNC) &R_swig_tc_merge, 1},
   {"R_swig_tc_closePlots", (DL_FUNC) &R_swig_tc_closePlots, 0},
   {"R_swig_tc_getName", (DL_FUNC) &R_swig_tc_getName, 1},
   {"R_swig_tc_showProgress", (DL_FUNC) &R_swig_tc_showProgress, 2},
   {"R_swig_tc_getParametersNamed", (DL_FUNC) &R_swig_tc_getParametersNamed, 3},
   {"R_swig_tc_errorBars", (DL_FUNC) &R_swig_tc_errorBars, 2},
   {"R_swig_tc_getEventTriggers", (DL_FUNC) &R_swig_tc_getEventTriggers, 1},
   {"R_swig_tc_highlight", (DL_FUNC) &R_swig_tc_highlight, 2},
   {"R_swig_tc_burn", (DL_FUNC) &R_swig_tc_burn, 2},
   {"R_swig_tc_table_cols_set", (DL_FUNC) &R_swig_tc_table_cols_set, 2},
   {"R_swig_tc_matrix_cols_set", (DL_FUNC) &R_swig_tc_matrix_cols_set, 2},
   {"R_swig_tc_messageDialog", (DL_FUNC) &R_swig_tc_messageDialog, 1},
   {"R_swig_tc_getStringDialog", (DL_FUNC) &R_swig_tc_getStringDialog, 1},
   {"R_swig_tc_items_items_get", (DL_FUNC) &R_swig_tc_items_items_get, 1},
   {"R_swig_tc_hist", (DL_FUNC) &R_swig_tc_hist, 2},
   {"R_swig_tc_printMatrixToFile", (DL_FUNC) &R_swig_tc_printMatrixToFile, 2},
   {"R_swig_tc_openFile", (DL_FUNC) &R_swig_tc_openFile, 1},
   {"R_swig_tc_runOctaveFile", (DL_FUNC) &R_swig_tc_runOctaveFile, 1},
   {"R_swig_tc_createMatrix", (DL_FUNC) &R_swig_tc_createMatrix, 3},
   {"R_swig_tc_deleteMatrix", (DL_FUNC) &R_swig_tc_deleteMatrix, 1},
   {"R_swig_tc_viewWindow", (DL_FUNC) &R_swig_tc_viewWindow, 1},
   {"R_swig_tc_openNewWindow", (DL_FUNC) &R_swig_tc_openNewWindow, 1},
   {"R_swig_tc_KMatrix", (DL_FUNC) &R_swig_tc_KMatrix, 1},
   {"R_swig_tc_insert", (DL_FUNC) &R_swig_tc_insert, 3},
   {"R_swig_tc_setControlPoint", (DL_FUNC) &R_swig_tc_setControlPoint, 5},
   {"R_swig_tc_createSlidersForScript", (DL_FUNC) &R_swig_tc_createSlidersForScript, 2},
   {"R_swig_tc_createInputWindowForScript", (DL_FUNC) &R_swig_tc_createInputWindowForScript, 3},
   {"R_swig_tc_runOctaveCode", (DL_FUNC) &R_swig_tc_runOctaveCode, 1},
   {"R_swig_tc_alignPartsOnPlasmid", (DL_FUNC) &R_swig_tc_alignPartsOnPlasmid, 2},
   {"R_swig_tc_table_strings_set", (DL_FUNC) &R_swig_tc_table_strings_set, 2},
   {"R_swig_tc_strings_strings_set", (DL_FUNC) &R_swig_tc_strings_strings_set, 2},
   {"R_swig_tc_appendRows", (DL_FUNC) &R_swig_tc_appendRows, 3},
   {"R_swig_new_tc_items", (DL_FUNC) &R_swig_new_tc_items, 0},
   {"R_swig_delete_tc_items", (DL_FUNC) &R_swig_delete_tc_items, 1},
   {"R_swig_tc_strings_length_get", (DL_FUNC) &R_swig_tc_strings_length_get, 2},
   {"R_swig_tc_items_length_get", (DL_FUNC) &R_swig_tc_items_length_get, 2},
   {"R_swig_tc_appendColumns", (DL_FUNC) &R_swig_tc_appendColumns, 3},
   {"R_swig_tc_setTextValue", (DL_FUNC) &R_swig_tc_setTextValue, 2},
   {"R_swig_tc_getTextValue", (DL_FUNC) &R_swig_tc_getTextValue, 1},
   {"R_swig_tc_getFilename", (DL_FUNC) &R_swig_tc_getFilename, 0},
   {"R_swig_tc_table_colnames_set", (DL_FUNC) &R_swig_tc_table_colnames_set, 2},
   {"R_swig_tc_table_rownames_set", (DL_FUNC) &R_swig_tc_table_rownames_set, 2},
   {"R_swig_tc_matrix_colnames_set", (DL_FUNC) &R_swig_tc_matrix_colnames_set, 2},
   {"R_swig_tc_matrix_rownames_set", (DL_FUNC) &R_swig_tc_matrix_rownames_set, 2},
   {"R_swig_tc_matrix_values_set", (DL_FUNC) &R_swig_tc_matrix_values_set, 2},
   {"R_swig_tc_screenHeight", (DL_FUNC) &R_swig_tc_screenHeight, 1},
   {"R_swig_tc_getHeight", (DL_FUNC) &R_swig_tc_getHeight, 2},
   {"R_swig_tc_getStringIndex", (DL_FUNC) &R_swig_tc_getStringIndex, 3},
   {"R_swig_tc_addInputWindowCheckbox", (DL_FUNC) &R_swig_tc_addInputWindowCheckbox, 3},
   {"R_swig_tc_table_rows_get", (DL_FUNC) &R_swig_tc_table_rows_get, 2},
   {"R_swig_tc_matrix_rows_get", (DL_FUNC) &R_swig_tc_matrix_rows_get, 2},
   {"R_swig_tc_LoadCLibraries_api", (DL_FUNC) &R_swig_tc_LoadCLibraries_api, 6},
   {"R_swig_tc_multiplot", (DL_FUNC) &R_swig_tc_multiplot, 2},
   {"R_swig_tc_SBML_api", (DL_FUNC) &R_swig_tc_SBML_api, 7},
   {"R_swig_tc_screenX", (DL_FUNC) &R_swig_tc_screenX, 1},
   {"R_swig_tc_setPosMulti", (DL_FUNC) &R_swig_tc_setPosMulti, 2},
   {"R_swig_tc_screenY", (DL_FUNC) &R_swig_tc_screenY, 1},
   {"R_swig_tc_getUniqueNames", (DL_FUNC) &R_swig_tc_getUniqueNames, 2},
   {"R_swig_tc_runPythonFile", (DL_FUNC) &R_swig_tc_runPythonFile, 1},
   {"R_swig_tc_getEventResponses", (DL_FUNC) &R_swig_tc_getEventResponses, 1},
   {"R_swig_tc_allItems", (DL_FUNC) &R_swig_tc_allItems, 1},
   {"R_swig_new_tc_table", (DL_FUNC) &R_swig_new_tc_table, 0},
   {"R_swig_delete_tc_table", (DL_FUNC) &R_swig_delete_tc_table, 1},
   {"R_swig_tc_setTextAttributes", (DL_FUNC) &R_swig_tc_setTextAttributes, 1},
   {"R_swig_tc_writeModel", (DL_FUNC) &R_swig_tc_writeModel, 3},
   {"R_swig_tc_alignParts", (DL_FUNC) &R_swig_tc_alignParts, 1},
   {"R_swig_tc_substituteModel", (DL_FUNC) &R_swig_tc_substituteModel, 2},
   {"R_swig_tc_getRowName", (DL_FUNC) &R_swig_tc_getRowName, 2},
   {"R_swig_tc_setRowName", (DL_FUNC) &R_swig_tc_setRowName, 3},
   {"R_swig_tc_homeDir", (DL_FUNC) &R_swig_tc_homeDir, 0},
   {"R_swig_tc_deselect", (DL_FUNC) &R_swig_tc_deselect, 0},
   {"R_swig_tc_select", (DL_FUNC) &R_swig_tc_select, 1},
   {"R_swig_tc_isA", (DL_FUNC) &R_swig_tc_isA, 3},
   {"R_swig_tc_getParameter", (DL_FUNC) &R_swig_tc_getParameter, 3},
   {"R_swig_tc_setParameter", (DL_FUNC) &R_swig_tc_setParameter, 3},
   {"R_swig_tc_updateParameter", (DL_FUNC) &R_swig_tc_updateParameter, 2},
   {"R_swig_tc_runPythonCode", (DL_FUNC) &R_swig_tc_runPythonCode, 1},
   {"R_swig_tc_saveToFile", (DL_FUNC) &R_swig_tc_saveToFile, 1},
   {"R_swig_tc_printTableToFile", (DL_FUNC) &R_swig_tc_printTableToFile, 2},
   {"R_swig_tc_listOfPossibleModels", (DL_FUNC) &R_swig_tc_listOfPossibleModels, 2},
   {"R_swig_tc_getConnections", (DL_FUNC) &R_swig_tc_getConnections, 2},
   {"R_swig_tc_ParametersTool_Numeric_api", (DL_FUNC) &R_swig_tc_ParametersTool_Numeric_api, 9},
   {"R_swig_tc_setAlpha", (DL_FUNC) &R_swig_tc_setAlpha, 2},
   {"R_swig_tc_getRates", (DL_FUNC) &R_swig_tc_getRates, 2},
   {"R_swig_tc_setRates", (DL_FUNC) &R_swig_tc_setRates, 2},
   {"R_swig_tc_addEvent", (DL_FUNC) &R_swig_tc_addEvent, 2},
   {"R_swig_tc_print", (DL_FUNC) &R_swig_tc_print, 1},
   {"R_swig_tc_getConnectedNodesWithRole", (DL_FUNC) &R_swig_tc_getConnectedNodesWithRole, 3},
   {"R_swig_tc_getConnectionsWithRole", (DL_FUNC) &R_swig_tc_getConnectionsWithRole, 3},
   {"R_swig_tc_displayCode", (DL_FUNC) &R_swig_tc_displayCode, 1},
   {"R_swig_tc_simulateTauLeap", (DL_FUNC) &R_swig_tc_simulateTauLeap, 4},
   {"R_swig_tc_simulateStochastic", (DL_FUNC) &R_swig_tc_simulateStochastic, 4},
   {"R_swig_tc_optimize", (DL_FUNC) &R_swig_tc_optimize, 2},
   {"R_swig_tc_remove", (DL_FUNC) &R_swig_tc_remove, 1},
   {NULL, NULL, 0}
};

SWIGEXPORT void R_init_tinkercell(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);


SWIG_init();
SWIG_InitializeModule(0);


}

