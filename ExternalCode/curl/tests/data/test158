<testcase>
# Server-side
<reply>
<data>
<<<<<<< HEAD
HTTP/1.1 100 Continue swsclose
Silly-header: yeeeees

=======
HTTP/1.1 100 Continue swsclose
Silly-header: yeeeees

>>>>>>> 1905cfc9e294ef1fd9bc7c874b4a4e2af0fff3ea
</data>
</reply>

# Client-side
<client>
<server>
http
</server>
 <name>
HTTP multipart formpost with only a 100 reply
 </name>
 <command>
http://%HOSTIP:%HTTPPORT/158 -F name=daniel
</command>
</client>

# Verify data after the test has been "shot"
<verify>
<strip>
^User-Agent:.*
^Content-Type: multipart/form-data.*
^---------------------------.*
</strip>
<protocol>
<<<<<<< HEAD
POST /158 HTTP/1.1
User-Agent: curl/7.11.2-CVS (i686-pc-linux-gnu) libcurl/7.11.2-CVS OpenSSL/0.9.6b ipv6 zlib/1.1.4 GSS
Host: %HOSTIP:%HTTPPORT
Accept: */*
Content-Length: 145
Expect: 100-continue
Content-Type: multipart/form-data; boundary=----------------------------4f12fcdaa3bc

------------------------------4f12fcdaa3bc
Content-Disposition: form-data; name="name"

daniel
------------------------------4f12fcdaa3bc--
=======
POST /158 HTTP/1.1
User-Agent: curl/7.11.2-CVS (i686-pc-linux-gnu) libcurl/7.11.2-CVS OpenSSL/0.9.6b ipv6 zlib/1.1.4 GSS
Host: %HOSTIP:%HTTPPORT
Accept: */*
Content-Length: 145
Expect: 100-continue
Content-Type: multipart/form-data; boundary=----------------------------4f12fcdaa3bc

------------------------------4f12fcdaa3bc
Content-Disposition: form-data; name="name"

daniel
------------------------------4f12fcdaa3bc--
>>>>>>> 1905cfc9e294ef1fd9bc7c874b4a4e2af0fff3ea
</protocol>
<errorcode>
52
</errorcode>
</verify>
</testcase>
