<testcase>
# Server-side
<reply>
<data>
<<<<<<< HEAD
HTTP/1.1 200 No Authorization Required swsclose
Server: Apache/1.3.27 (Darwin) PHP/4.1.2
Content-Type: text/html; charset=iso-8859-1
Connection: close

=======
HTTP/1.1 200 No Authorization Required swsclose
Server: Apache/1.3.27 (Darwin) PHP/4.1.2
Content-Type: text/html; charset=iso-8859-1
Connection: close

>>>>>>> 1905cfc9e294ef1fd9bc7c874b4a4e2af0fff3ea
PUT received fine. Thank you very much
</data>
</reply>

# Client-side
<client>
<server>
http
</server>
 <name>
HTTP PUT with --anyauth (when the server requires none)
 </name>
 <command>
http://%HOSTIP:%HTTPPORT/156 -T log/put156 -u testuser:testpass --anyauth
</command>
<file name="log/put156">
This is data we upload with PUT
a second line
line three
four is the number of lines
</file>
</client>

# Verify data after the test has been "shot"
<verify>
<strip>
^User-Agent:.*
</strip>
<protocol>
<<<<<<< HEAD
PUT /156 HTTP/1.1
User-Agent: curl/7.10.5 (i686-pc-linux-gnu) libcurl/7.10.5 OpenSSL/0.9.7a ipv6 zlib/1.1.3
Host: %HOSTIP:%HTTPPORT
Accept: */*
Content-Length: 85
Expect: 100-continue

=======
PUT /156 HTTP/1.1
User-Agent: curl/7.10.5 (i686-pc-linux-gnu) libcurl/7.10.5 OpenSSL/0.9.7a ipv6 zlib/1.1.3
Host: %HOSTIP:%HTTPPORT
Accept: */*
Content-Length: 85
Expect: 100-continue

>>>>>>> 1905cfc9e294ef1fd9bc7c874b4a4e2af0fff3ea
This is data we upload with PUT
a second line
line three
four is the number of lines
</protocol>
</verify>
</testcase>
