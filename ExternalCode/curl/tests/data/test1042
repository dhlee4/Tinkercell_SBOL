<testcase>
<info>
<keywords>
HTTP
HTTP GET
Resume
FAILURE
</keywords>
</info>

# Server-side
<reply>
# Some servers (e.g. Apache 1.2) respond this way to an invalid byte range
<data>
<<<<<<< HEAD
HTTP/1.1 200 OK
Connection: close
Content-Length: 100
Content-Type: text/plain

=======
HTTP/1.1 200 OK
Connection: close
Content-Length: 100
Content-Type: text/plain

>>>>>>> 1905cfc9e294ef1fd9bc7c874b4a4e2af0fff3ea
012345678
012345678
012345678
012345678
012345678
012345678
012345678
012345678
012345678
012345678
</data>

# The file data that exists at the start of the test must be included in
# the verification.
<datacheck>
012345678
012345678
012345678
012345678
012345678
012345678
012345678
012345678
012345678
012345678
<<<<<<< HEAD
HTTP/1.1 200 OK
Connection: close
Content-Length: 100
Content-Type: text/plain

=======
HTTP/1.1 200 OK
Connection: close
Content-Length: 100
Content-Type: text/plain

>>>>>>> 1905cfc9e294ef1fd9bc7c874b4a4e2af0fff3ea
</datacheck>
</reply>

# Client-side
<client>
<server>
http
</server>
 <name>
HTTP GET from end of entirely-downloaded file, no server resume
 </name>
 <command>
http://%HOSTIP:%HTTPPORT/1042 -C -
</command>
<file name="log/curl1042.out">
012345678
012345678
012345678
012345678
012345678
012345678
012345678
012345678
012345678
012345678
</file>
</client>

# Verify data after the test has been "shot"
<verify>
<errorcode>
33
</errorcode>
<strip>
^User-Agent:.*
</strip>
<protocol>
<<<<<<< HEAD
GET /1042 HTTP/1.1
Range: bytes=100-
Host: %HOSTIP:%HTTPPORT
Accept: */*

=======
GET /1042 HTTP/1.1
Range: bytes=100-
Host: %HOSTIP:%HTTPPORT
Accept: */*

>>>>>>> 1905cfc9e294ef1fd9bc7c874b4a4e2af0fff3ea
</protocol>
</verify>
</testcase>
